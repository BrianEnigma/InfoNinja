%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: InfoNinja2.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Brian Enigma
%%CreationDate: 2/11/12
%%BoundingBox: 0 0 872 1112
%%HiResBoundingBox: 0 0 871.9116 1111.1758
%%CropBox: 0 0 871.9116 1111.1758
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2012-02-11T21:03:39-08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-02-11T21:03:39-08:00</xmp:ModifyDate>
         <xmp:CreateDate>2012-02-11T21:03:38-08:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9M6fptmLSCREMTNDGrek&#xA;zRghRUVCFR+0chGIpys+efEQTfqPPf70T9Sh/ml/5HS/81YeFq8U+XyH6kGhBu/RZ5vq5kkSM8pN&#xA;3WNDTn9qgpJ3pXI9W8/TdDiod3een+lRUmnWsiNHJ6jxuCro0shBB6ggtuDkjENMc8gbFX7h+py6&#xA;baIzmNWi5nkyxu6KTQLXipA6AY8IU55nnvXeAUNe/wCj+uInl+G1md/ikehFOBFS1D9qlMjLb5Nu&#xA;L1VYH1DuHv8A0Iv6lD/NL/yOl/5qyXC0+KfL5D9TvqUP80v/ACOl/wCaseFfFPl8h+pTbSrB2LPG&#xA;XkJU+ozuzjgeS8XJ5LQ77HHgDIamY2B2+Fb+Sp9Sh/ml/wCR0v8AzVjwsfFPl8h+p31KH+aX/kdL&#xA;/wA1Y8K+KfL5D9SDjIa5EJeX6t6kqRHlICXVVNC9eRAIk6mn4ZEc2+W0bocVDu8+n+l/Foz6lD/N&#xA;L/yOl/5qyXC0eKfL5D9SFv8ATbL6pcyNGXk9FgHkZnZeIJHEsSV3PbIygKLbhzz4oi6F+7+1FfUo&#xA;f5pf+R0v/NWS4WrxT5fIfqU/0VYc/U9M+rz9T1ub+py48Pt15fZ2pXHgDL8zOqvbu2rv5cuay+to&#xA;4rK4lV5g0cbspEspIIUnYcjXBIUGWHITMChuR0C5I1mublZGkDIy8VDyIOBRaEBSoI5ct8NWSxMj&#xA;GMar5A9f7FX6lD/NL/yOl/5qx4WPiny+Q/Up/oqw5+p6Z9Xn6nrc39Tlx4fbry+ztSuPAGX5mdVe&#xA;3dtXfy5c1T6lD/NL/wAjpf8AmrHhY+KfL5D9SjeQRw20kiPKJAP3X7yVvjJonw1IPxEdRTxwSFBn&#xA;imZSANV12HLq62iSf1WkeX1ElkVhzkQABiVoAVFOBHTEC1ySMaqqodAfxuu/RVhz9T0z6vP1PW5v&#xA;6nLjw+3Xl9nalcPAEfmZ1V7d21d/LlzVPqUP80v/ACOl/wCaseFj4p8vkP1KPN/0Jz5Nz+rV51PK&#xA;vp9eXWvvg/h+DOh41dOL9Ktp/wDvBbf8Yk/4iMMeQYZvrl7yvgW4UP6zq5LEpxFKL2Bwi2MzHalB&#xA;LDjemcspiDNJHFxPwyOqqWBrToG/Z/aODh3tsOa4cPXv8t/2degReSaHYqhL2wNyxKuqB4nhlqpY&#xA;sj0rQhlpShp165GUbb8Wbg+YI94VXu4EYpyLOPtKis5HzCg0+nDxBgMUiL/Z97X12H+WX/kTL/zT&#xA;g4k+EfL5j9bvrsP8sv8AyJl/5px4l8I+XzH63fXYf5Zf+RMv/NOPEvhHy+Y/W767D/LL/wAiZf8A&#xA;mnHiXwj5fMfrQ1vHCb7n6lELO8Nu8bxkO4HJl5kV6Mdl/aOADdtnI8FV3WbB2+Hw69AjJVuDJGY3&#xA;VUB/eAipI9v8/ftQyNtETGjf4/H47wzUP94Ln/jE/wDxE4Jciyw/XH3hXyTU7FVO5gWe3lgb7MqM&#xA;jfJhTARYpnCfDISHQrLW3eJpZJXV5ZmDMyqVFAoUChZ/CvXviAnJMGgNgPx5K+FrdirsVUrqD17e&#xA;SKvEsPgeleLDdW6jdW364CLDPHPhkC1aW/oRsCQ0ju0kjgcaljXuW6Cg69BiBSck+I+QFK2Frdiq&#xA;A/6UX/Rr/wAy8h/D8HJ/y3+d+lDxab6tpA4trJg8YPAwcQvJe3xNUD+XaviMiI2OQbZZ+GRHFPn/&#xA;ADvx8/sTCzg9CD0uSsVZyeI4gc2L0C1alOXjlkRQcXLPilf47lfC1uxV2KuxVQsv7lv+Ms3/ACdb&#xA;IxbcvP4D7gr5JqdirsVdiqhe/wByv/GWH/k6uRk24ufwP3FXyTUoah/vBc/8Yn/4icjLkW3D9cfe&#xA;FfJNTsVdirsVdirsVdirsVUpZ+D8FjaV6ciqcdh0BPIqN8BLOMLFk0t+szf8ssv3xf8ANeC/Jl4Y&#xA;/nD7f1NCtw6OHeIwsRJFt1oDRqVHT9fj0ea/SKoG+qh/0ov+jX/mXg/h+DZ/lv8AO/SiNP8A94Lb&#xA;/jEn/ERhjyDXm+uXvK+O3hjlklRaPLTmanelafrOEBjKZIAPIKmFg7FXYq7FVCy/uW/4yzf8nWyM&#xA;W3Lz+A+4K+SanYq7FXYqoXv9yv8Axlh/5OrkZNuLn8D9xV8k1KGof7wXP/GJ/wDiJyMuRbcP1x94&#xA;XxXEMrOsbVaM8XFCKHp3+WEG2MoGNX1VMLB2KuxV2KuxVLNK8xWOp39/ZW0Vwr6awjuJZoJIomcv&#xA;IhWJ3CiSnpVPGooynviqZ4qoJ/vfN/xii/4lJkerafoHvP6FfJNShbf311/xlH/JpMiOrbk5R936&#xA;Sh/+lF/0a/8AMvB/D8Gz/Lf536URp/8AvBbf8Yk/4iMMeQa831y95V8k1OxV2KuxVT9OX6z6nqn0&#xA;uPH0aCnKv2q4K3Z8Q4arfvWWX9y3/GWb/k62CLLLz+A+4K+SanYq7FXYqoXv9yv/ABlh/wCTq5GT&#xA;bi5/A/cVfJNShqH+8Fz/AMYn/wCInIy5Ftw/XH3hXAArQdeuSanYq7FXYq7FVL6zD6np1PKtK0PG&#xA;vhypxr7VwWz8M1bD/JVlcx+cvOV4xha0uLm2jhMVxPO4eJH9RZFmPGMjmvwxrx3pU0wsGa4qoJ/v&#xA;fN/xii/4lJkerafoHvP6FfJNShbf311/xlH/ACaTIjq25OUfd+kof/pRf9Gv/MvB/D8Gz/Lf536U&#xA;Rp/+8Ft/xiT/AIiMMeQa831y95V8k1OxV2KuxV2KqFl/ct/xlm/5OtkYtuXn8B9wV8k1OxV2KuxV&#xA;Qvf7lf8AjLD/AMnVyMm3Fz+B+4q+SalDUP8AeC5/4xP/AMRORlyLbh+uPvCvkmp2KuxV2KuxVBiG&#xA;X616BB+q/wB+Gp/uzny48q/zfF0yFb10cjiHDxfxcvhTFfJEgbzl5yjZ3aaG4t0bm8JPBhLKn7uK&#xA;GIptJxBeR2ZQK8abzcdm2KqCf73zf8Yov+JSZHq2n6B7z+hXyTUoW399df8AGUf8mkyI6tuTlH3f&#xA;pKH/AOlF/wBGv/MvB/D8Gz/Lf536URp/+8Ft/wAYk/4iMMeQa831y95VldGrxYNxNGoa0I7ZJrII&#xA;bxQ7FXYqp+pL9Z9P0j6XHl61RTlX7NMF7s+EcN3v3LLL+5b/AIyzf8nWwRZZefwH3BXyTU7FXYq7&#xA;FVC9/uV/4yw/8nVyMm3Fz+B+4q+SalDUP94Ln/jE/wDxE5GXItuH64+8L4YpUaQvKZA7VVSAOI8P&#xA;8/11JIDGUgQKFKmFg7FXYq7FXYqx7yz5dvtM1PVb68e1klvzGPVtomieQRNKwkmqzLyImpxUUqC3&#xA;ViAqyHFVBP8Ae+b/AIxRf8SkyPVtP0D3n9CvkmpQtv766/4yj/k0mRHVtyco+79JQ/8A0ov+jX/m&#xA;Xg/h+DZ/lv8AO/S62uzFZwRi3mkkSNQ6hCtOKiu78Ad/AnEHZcmO5k3EC+/9Voi0+rNG0luvFXdi&#xA;1VKEsCVaoYA9Rko10asvFdS6K+FrdirsVdiqhZf3Lf8AGWb/AJOtkYtuXn8B9wV8k1OxV2KuxVQv&#xA;f7lf+MsP/J1cjJtxc/gfuKvkmpQ1D/eC5/4xP/xE5GXItuH64+8K+SanYq7FXYq7FXYq7FXYqoyR&#xA;zLMZoQrFlVGRyVFFJIIIDfzHtgIbIyBFFrnf/wC+Yv8Aka3/AFTwbpqHefl+1bG6QORMwEty3IKK&#xA;kCgVKV+4VPc48lIMhtyj+0qP/Si/6Nf+ZeD+H4Nn+W/zv0tWem2D2NsTAgJiSpUcSQVFQ3GlQe4O&#xA;xxjEUE5c8xOW/VE2bQGNkgiMMcbsvDjwFa1JAHiTko005RK7JskLlu4GuWtgT6qglhxYDYKT8VOP&#xA;7Y742LpTjkI8XT+39Srha3Yqo3F5BblRKWBYFhxVmoFoCTxBoByHXAZANkMUpcmvq0iEmCUoCS3p&#xA;sAyVY1Y9m6n+bBSfEB5j9f6vsdwv/wDf0X/Ipv8Aqpjutw7j8/2O4X/+/ov+RTf9VMd1uHcfn+x3&#xA;C/8A9/Rf8im/6qY7rcO4/P8AY7hf/wC/ov8AkU3/AFUx3W4dx+f7FFHSW6MEszPLH8TRCMpHVOLC&#xA;jEGtOan7eDrTMgiPEBQPnv1/UeiJluFjkjQqxMhoCoqB8/8AP9RyRLVGFgnuWah/vBc/8Yn/AOIn&#xA;BLkWWH64+8K+SanYq07qiM7miqCzHwA3OKQCTQWQXEU4Yx8vgPFgyshBoG6MAejDADbKcDHn+v7l&#xA;TCwdirsVWyypFE8rmiRqWYgEmgFTsKk4CaZRiZEAcy1DNHNH6kdeNSNwVNVJU7MAeoxBtZRMTRX4&#xA;WLRVSQSASpqpPY0pt9BxTaB/6UX/AEa/8y8h/D8HI/y3+d+lEaf/ALwW3/GJP+IjDHkGvN9cveVf&#xA;JNSVxRg6mEqtYppZeVPjasSDiTXt6v3KuVgbuZKX7u+8AeXM/wDE/MlNMscN2KpZqyD9/Vh+8sp1&#xA;+Lfjx47jcdeXxeNB4ZXP9DmaY8vKcfx+r4pnljhuxV2KuxV2KpZAi/pAR8hWKaaXnT4m5Knwk16D&#xA;1v8AhRlY5uZM/u77xEfaf+J+0pnljhqGof7wXP8Axif/AIicjLkW3D9cfeFfJNTsVQ2qKG0y7Umg&#xA;MMgJPQfAcjPkW7Tmskf6w+91qo+tXj1/bRSo6bRqan/KPKlfADwxHMrkPpiPL9J+z9qJyTS7FXYq&#xA;hdTUGwmJIHACSh3B9Mh+J6bNxocjPk3ac+see3z2dp6AJO4I/eTyniooo4sU2HvwqfcnGK5zuB3R&#xA;H6/07eSKyTS7FUB/0ov+jX/mXkP4fg5P+W/zv0oTT9GIgim9VZjJbxL/AKTH6xXiCfhPJKD4umRj&#xA;DZvzar1EVVSP0mv19ytbwR3SmSOC2iUBPhaIOasiv1BT+enTCBfc1zmYbEyPxrqR59yq1uUaCGRI&#xA;HgeQgxiLjQ8GbkKswrt4YaYCd2QZA13+Y8lBdLW8tomcQwxyqHdYYVD0ZT8Idi1KE1qBXbI8FhtO&#xA;o8ORqyR3nbn3LbHSD6EU5lWd5o1ec3MayszlVowYcCNhSnTGMOqc2p3MaoA7cJrbf3ok272y8gtv&#xA;wdkjkVIeFVdwp35H+bwyVU0iYn/O2s8+4e5ZFZCUM4itVUO6qpgqaI5UVPIeGARvuZSy8O1y5D+L&#xA;y9y/9Gf5Fr/0j/8AN+Hg93yY/mPOX+m/YpS6JzR1DRRiQhmCRsF5LSjemZDGWHEfaU9BgONnHV0R&#xA;zNef2XV/Ir10ngz0MDqTVPUt0LKKAUqhQHffph4GJ1N/zh7pH9Nrv0Z/kWv/AEj/APN+PB7vkj8x&#xA;5y/037F5sZTGIj9XMSmqp6B4g77gc6d8eH3I8YXfqv8ArfsS/Sg9/B6rWtrBxWIFTFzq7wpKxBql&#xA;BWTiB7dd9gBfc3ZZeGauR59a6kefcin0ZX5/3KiVeEqpHIiuorswWUBh8R648DAaqq57eYNfOLv0&#xA;OefPnDXnX0/q8fp8eNONPt9firz/AAx4PxS/mtqo/wCmN/q8uTv0MvPlSGnP1DH6b+mX48ORj9Xh&#xA;Xj7Y8C/mtv4u7mL7+fDa2eBLfnygtpKQyyrSHj8UfGgO7bHliRXcyhMyqjIeoDn3u1CxmeKW4klj&#xA;5RxORxhSpYCqkmT1elOmMo9UYMwBEQDuR/Ef0Ujf0fYf8s0X/AL/AEyXCO5o8af84/NT/ROnc+Xo&#xA;inP1BHU+mH48OQjrwrx9seAMvzOSufl59/Pmqfo+w/5Zov8AgF/pjwjuY+NP+cfm2tjZKwZbeMMp&#xA;BBCKCCNwemHhCDmmep+bnsrN3LvBGzt9piikn6SMeEKMswKBKl+idO58vRFA3MR1PphivHkI68K0&#xA;9sHAGf5nJXP9fz5qn6PsP+WaL/gF/pjwjuY+NP8AnH5qvpR+n6XAelTjwoOPGlKU8MlTXxG76oa3&#xA;hE2kxwklRJAqFhSo5JSorkQLi3Tlw5Se6X6VunRTcpJp4RBI6xx+mAtKIta/CW/acjr0AwRCc8hs&#xA;AbG5+f8AYqXkche2lRDJ6EvMoOPKhjdNuRA/b8cMhyYYpCpAmrH6Qf0N6fC0NlDG44uFBdNgFY7l&#xA;QF2ABNBTGIoLnkJTJDen/wC8Ft/xiT/iIxjyC5vrl7y1fRO8cbInqPFKkgT4dwGFftEDYEkb9cZB&#xA;cMgCb2sFThS7hs/3cY9VpZJDGxAoJJGeh41Ffi3399+hAsBnMxlPc7UB8gB+P0dHKs0s0/7941jc&#xA;KqqEpTgrftKx6th5sSREDYGx59581/1ab/lql+6L/mjGvNHiD+aPt/W76tN/y1S/dF/zRjXmviD+&#xA;aPt/WpzpPEquLmRv3kalWEdCGdVPRAehxNjqygYy24RyPf3e9dLDNcxXVtOPTilVo0kjb4+LAgkH&#xA;sf4/KpPNjcY0Rufx+PxQLfLVjdxma6vLUWVw0NtaiBFiVeFvHXkBE0n+7JXUCuygbdzGIbtTkiaE&#xA;TxCyb36nz8gPiSneTcR2Kqdw8kdvK8a8pERmRT0JAqBiqR2dxe6zoOm6lJaiOfUdMrNApRxFJdxx&#xA;OV5Px5KpqOm/hkJi3K02QR5mvVE9el9yc6h/vBc/8Yn/AOInDLkWrD9cfeFfJNTsVdirsVdirsVd&#xA;irsVUNP/AN4Lb/jEn/ERkY8g25vrl7y6QvJOYVcxqiq7MtKnkSANwaD4TieaxoRura+OCWJObPHK&#xA;xQK+5UhS2zdSPh71x5LtIE1uENpXmHRdWklj067S5kgRJJlStUWR5I15VGx5wOCvUU3yTUitP/3g&#xA;tv8AjEn/ABEZGPINub65e8q+SanYqoW399df8ZR/yaTIjq25OUfd+kq+SanYqoXv9yv/ABlh/wCT&#xA;q5GTbi5/A/cVfJNTsVdirsVUb1OdnOnHlyjccelaqdsVS3yZa3Fp5P0K0uUEdxb6faxTRqxcK6QI&#xA;rAMQOVCOtMVTHUP94Ln/AIxP/wARORlyLbh+uPvCvkmp2KuxV2KuxV2KuxV2KpfZanpqWNsHu4VP&#xA;pJs0ijoo8TkIzFDdysunyGcqieZ6FEbu31m1ZJOQCkFvhYKTSjANShJ7YfMNXL0ysNrHNJIjzBVE&#xA;ZJREJb4iCKkkL2J2phpBkAKHVfFb28JkaKJI2lbnKUUKWcinJqdTt1OFrWaf/vBbf8Yk/wCIjIx5&#xA;BtzfXL3lXyTU7FVC2/vrr/jKP+TSZEdW3Jyj7v0lXyTU7FVC9/uV/wCMsP8AydXIybcXP4H7ir5J&#xA;qdirsVdiqG1NWbTbtVFWMMgUDY1Kn3X9eKpd5Igkt/J2h27xRQmGwtoxFA5kjVUiVVCueo4gdz8z&#xA;1xVM9Q/3guf+MT/8RORlyLbh+uPvCvkmp2KuxV2KuxV2KuxV2KoG2guprWCRr2ZWeNWYqsO5ZQe8&#xA;ZyABI5uTknGMiOEc/wCl/wAUrJxtYxCvOaRi7gUXkeTFmJpwUfa9vvw8ms3M3sBt+OpXxTh24MjR&#xA;yUqEelSPEFSwP34QWMoULuwq4WChp/8AvBbf8Yk/4iMjHkG3N9cveVfJNTsVULb++uv+Mo/5NJkR&#xA;1bcnKPu/SVfJNTsVUL3+5X/jLD/ydXIybcXP4H7ir5JqdirsVdiqldCU2swiBMpRvTANDyoaUNRT&#xA;fFUv8pJep5U0VL/1Pry2Fst160nrS+qIVD85Sz825Vq3I1O9TiqO1D/eC5/4xP8A8RORlyLbh+uP&#xA;vCvkmp2KuxV2KuxV2KuxV2KqGn/7wW3/ABiT/iIyMeQbc31y95aqEvmLniJY0WMnuys5I+fxDHqt&#xA;XDboT+h0xD3MCIeTROXkA/ZUxsor8ywpieaxFRJPUfpCUeWNE806dd6nLrfmE63Bduj2FubSO1+q&#xA;AcuaBo2YyBqrTl0p3rkmpONP/wB4Lb/jEn/ERkY8g25vrl7yr5Jqdiqhbf311/xlH/JpMiOrbk5R&#xA;936Sr5Jqdiqhe/3K/wDGWH/k6uRk24ufwP3FXyTU7FXYq7FXnNvYWv8Ays7Xb+2ls5NUFibbVFhi&#xA;vYLpbfgsttSZpGtmcclB4gED4qivEKsp8hmU+RvLpmLmU6ZZ+oZWLyFvq6V5sd2avUnFU21D/eC5&#xA;/wCMT/8AETkZci24frj7wr5JqdirsVdirsVdirsVdiqUQ3Mq2sCpcP6axgo6Wc5LUUceVeW3iNie&#xA;xGVA7fsc+WMGRsC7/nx/H6Ewti89r/pKgli4KlCoKhiFPBix3WnXJjcbuLkqMvT5dfLvVY4441CR&#xA;qEQdFUAD7hkgGuUiTZXYoUNP/wB4Lb/jEn/ERkY8g25vrl7yr5Jqdiqhbf311/xlH/JpMiOrbk5R&#xA;936Sr5Jqdiqhe/3K/wDGWH/k6uRk24ufwP3FXyTU7FXYq7FXimtaz5gm88alpzR3Vslve2yIw1O3&#xA;Vp7ea4Rj/o1vDFPHHwHFfVlNa03B5BVnH5ZTWcun3TWMs5sOGn/U7W5keRreH9GWvCP7UkKnu3ou&#xA;y8qmpNcVZZqH+8Fz/wAYn/4icjLkW3D9cfeFfJNTsVdirsVdirsVdirsVUNP/wB4Lb/jEn/ERkY8&#xA;g25vrl7y04M1y0LMyoiK/wADFSSxYblSDtxx5lR6Y31J/U1x+rzQhGYpKxRldmffiWBBYk/s48k3&#xA;xA30/WgND81adrV/qVlaRXUUmlSJFcG6t5Lbkz8qGNZgkjp8B+Pjxb9knfJNKY6f/vBbf8Yk/wCI&#xA;jIx5BtzfXL3lXyTU7FVC2/vrr/jKP+TSZEdW3Jyj7v0lXyTU7FVC9/uV/wCMsP8AydXIybcXP4H7&#xA;ir5JqdirsVdiryrzA80fmu/gWwFzfm+tPS1CawtoS0Mqq3ow3ckwEjoo4q/pqwIA5HjXFU2/KKye&#xA;w0+9sZQxns49Mt5HZxKG4aVbH4ZFZ1Zasd1NCatuSSVWcah/vBc/8Yn/AOInIy5Ftw/XH3hXyTU7&#xA;FXYq7FXYq7FXYq7FVDT/APeC2/4xJ/xEZGPINub65e8rpIXL+pEwSQgKxYcgQKkbAr0r44SGMZCq&#xA;PJpIZS6vO4cpXgFXiASKV3Lb098aSZiqAVsLWoaf/vBbf8Yk/wCIjIx5BtzfXL3lXyTU7FVC2/vr&#xA;r/jKP+TSZEdW3Jyj7v0lXyTU7FVC9/uV/wCMsP8AydXIybcXP4H7ir5JqdirsVfO/wCdv5w/ml+X&#xA;/nEXunW63flBbmGCeKWEmPn6EUrRC4CKY3kDMR8TfLY1VQfkLzXrvmic+bf8J2droN9e3Mekag90&#xA;Z51lubtZZR6U8siRyr6bPzSH2WndV6x+UDRjQ5Yltbm2ZI9PLG5KsWDaZbFVBBJ/dj4GqOo6kYqz&#xA;XUP94Ln/AIxP/wARORlyLbh+uPvCvkmp2KuxV2KuxV2KuxV2KoS39b9FRejT1vQX0uXTlw+Gv05E&#xA;fS3zrxTfLi/So6PHDGJFtkKWvGEqCFB5mMV+z/kcPprkYDu5NmqkTXF9W/yv9dq1/GsklmjqHjaY&#xA;81YAggRSEVB/ygMlIcmvDKhIjnw/pC7SwRp1uCKARqEG1eFPgrTblxpWm1emMOSNR/eH3/b1+1dp&#xA;/wDvBbf8Yk/4iMY8gjN9cveVmpJzhjVlDRGaL1VIBJHMUpXb7VK+1e+MmWA0SetGvl+r7VK1tY5b&#xA;IwyCiLNNxVTxoqyuFA49uPTw+eACwyyZDGdjnQ/3IVzBcrLI8UqKsjBirIWIIUL1Dr/LhotfHEgA&#xA;g7ef7G+F/wD7+i/5FN/1Ux3W4dx+f7HcL/8A39F/yKb/AKqY7rcO4/P9i14LuTisk0fAMjkLGwJ4&#xA;MGpUufDGikTiOQPz/Y6S3kiiuZLMD63KpMfqklPUAPHlQ1pU7+30Ya7kCfFQl9ISXyfbwQLOljE0&#xA;WnGGzZVdYlY3BgBkYiPuYvR5duVaZCA7nJ1pJri+q5d/K9ufnxfBkeWOCxDzN+XFj5h8waRql/eT&#xA;S2mk3P1xNKlrLbtOEZFcKTQEcu4NO1MVQum/kj+V+lu76ZogsWkkjlf6tcXUILxMWjJCSqPhLGn9&#xA;gxVMh5X0bR4potMtfTR7SVirO8tHghggh4+sz8eMcSjb5nc1yvIPuLm6SVdf44/LdkGof7wXP/GJ&#xA;/wDiJyUuRcfD9cfeFfJNTsVdirsVdirsVdirsVS70Lu2t1D3bMqJHDGkUaLVq8ATz9X7RYewyuiB&#xA;zcvjjOW0e87k+/pSxo57UCkkdqrBRxM4oSiha/vImP2QBjVfj9jISE+hl/m/qkvEd6Wimd1kRDyj&#xA;rKoUlgUG6wrWvPbGj+P7GBlDcAV8Pj/O8mhbavEsS28iKke3pyNzUoFIC7Ro222/LGpdEnJiN8QO&#xA;/dt/viPsWW9vrcaQwvPDSKMJxiPAtSg5Hmkvh2xAkynPCSSAdz1/YQ2xuGlEMk8burK3omZAeSkO&#xA;tQsKt4HHf8f2IHDVgH38J93850gvbUMzFktyWasbq9HketDyh2Srfart8sTY/H7Ex4J7fxeY6Af1&#xA;ufl1VfR1X/fn/JRP+qGGpfj+xr4sXd9h/wCLWyx6usZZZ1QrRuTuhWgNTyAhXanXcYCJfj+xlGWK&#xA;+X2H/ilkDalMZGF1FIag8YZF4qKUA3ikbsTucRZ6spjHGvSR7x/x4Kvo6r/vz/kon/VDDUvx/Y18&#xA;WLu+w/8AFtBNSLFRMCwoSvqJUA9P90e2O/4/sTePu+w/8Wsg0+7txxtv3ScUUqJuQPpqEDfHCxrx&#xA;UA/LGj+P7EyzQl9W/wAO/fpJU9HVf9+f8lE/6oY1L8f2MeLF3fYf+LQ8UmqTScYr2CRA3OiOpk4c&#xA;acSwjK05GteHtkQSerbIY4izGQPu2+/9KI9HVf8Afn/JRP8Aqhkql+P7Grixd32H/i1rWl6/L1aS&#xA;co3i3lpRZKcqcYV3+EYOE/j+xIywHLbcHl3e+SnNBrE0bLFPE0UiPGwdg4q23IFI4913xIkWcZ4o&#xA;ncGwQe77yUVLdzw0Eot4+VePOYrWnWlU98kZENMcUZcuI/5v7V4lvWAZYoiDuCJWoR/yLxssTGHe&#xA;fl+1oTXhYqI4Sy05L6rVFelf3eNleGHOz8v2rud//vmL/ka3/VPHdah3n5ftUpL2WJwkn1dHIqFa&#xA;cg0O3QpgMvcyjiBFji/0v7VVZ5lkVJ41QSHjGyMX+IAsQaqtNhhvvYGAq4nl+O9XyTW7FVC9/uV/&#xA;4yw/8nVyMm3Fz+B+4r5baKVlZ+QZQQpVmQ0NK/ZI8MJFsYzMeS1rS3aFIGSsUYARSSaADj169Nj4&#xA;48ISMsgSb3Ktha1P6vD6/wBY4/vgvDn/AJNa0wVvbLjPDw9EJc2T/WvrEQZ+RVjFzYJzWg5MpNKU&#xA;UbgVBHQ1ORMd7b8eUcPCfu3r8fO+iP67HJuMof7z7H/efsf5P+bf1fLoOTZ9X9b7/wBqrIiyRsjC&#xA;quCrD2IphLCJo2hdPtpoGkEnJqhQZncuWIr0qTRd607ZCIpvzZBICvlSMybjrFghWVpQoEjbFvuH&#xA;8B9w8MFMjM1XRfhYuxVRhs4ISDGGqq8F5OzALtsAxNOgwCIDZPLKXNWwtbsVWQwQwRiOJQiDoowA&#xA;UynMyNnm1LbRSsrPyDKCFKsyGhpX7JHhiRaYzMeS9EVEVFFFUAKPADCxJs2VohiEplCj1GFC33f0&#xA;FfkPDBSTM1XRfhYqMtpBK5dwxJUKwDMoKiuxAIB6nrgMQWyOWURQauf761/4yn/k0+A9E4+Uvd+k&#xA;K+SanYqoXv8Acr/xlh/5OrkZNuLn8D9xWPaSNqKXI4hFVQW357Bxx6dDzB69sa3tkMgGPh/HT9SK&#xA;yTQ7FXYq7FVK6meGBpEjMzClI16mpA8DgJoM8cRKVE0q9djhYKH+8+x/3n7H+T/m39Xy6Dk2fV/W&#xA;+/8Aaqyx+pE8fJk5qV5oaMKilVPY4kMYyoguij9OJI+TPwULzc1Y0FKse5xAWUrJK7CxdirsVdir&#xA;sVdirsVdirsVdirsVUbuEzQGMAE1U8W+yQrBiDsetKYCLDZjlwytQWEwx6dC1KxkIePSqwuNumRq&#xA;qbDLiMz3/wDFBG5Nx3YqoXv9yv8Axlh/5OrkZNuLn8D9xVPXh9b0OQ9Ury4d6VpXDbDgNX0X4WLs&#xA;VdirsVdirsVd12OKqH+8+x/3n7H+T/m39Xy6Dk2fV/W+/wDar4WtRe6VJxEykA0+PtVjQU8d9j9G&#xA;C92wY7jatha3Yq7FXYq7FXYq7FXYq7FXYqtlcpGzhS5UVCjqcBZRFmlCVi7WTFShaSpQ9RWJ9jTA&#xA;ejZEUJDy/SETkml2KqF7/cr/AMZYf+Tq5GTbi5/A/cVbivLnQcqU5U3p4VyTXZqm8UOxV2KuxV2K&#xA;uxVZNKsMTSMCQvUD/On0nATTKEeI06OVJVNNiDxdD1U+BxBWUSFP/efY/wC8/Y/yf82/q+XR5Mvq&#xA;/rff+1WZEYqWUMVNVJFaHxGFgCQ3ih2KuxV2KuxV2KuxV2KuxV2KuxVQuf761/4yn/k0+RPRtx8p&#xA;e79IV8k1OxVQvf7lf+MsP/J1cjJtxc/gfuKvkmp2KuxV2KuxV2KuxV2KrY4o414xqFXwGwxATKRO&#xA;5XddjihQ/wB59j/vP2P8n/Nv6vl0HJs+r+t9/wC1XwtalbrcKhE7B25GhXw+4f5+PXAL6s5mJPpV&#xA;cLB2KuxV2KuxV2KuxV2KuxVQuf761/4yn/k0+RPRtx8pe79IV8k1OxVQvf7lf+MsP/J1cjJtxc/g&#xA;fuKm9kW1FLqi0VVHL9v4RIOPTp+8r17Y8O9shlrHw/jp+pF5JodirsVdirsVdirsVdirsVd12OKq&#xA;H+8+x/3n7H+T/m39Xy6Dk2fV/W+/9qvha3Yq7FXYq7FXYq7FXYq7FVG7g9aAx0B3VuLfZPFg1D16&#xA;0pgIsNmOfDK1BYfQj06E0HpEJ8PT4YXG2RqqbDPiMz3/APFBG5Nx3YqoXv8Acr/xlh/5OrkZNuLn&#xA;8D9xV8k1OxV2KuxV2KuxV2KuxV2KuxVSgtYLcymFOBmcyy7k1dgATv8ALAAAznklKr6Cvgq9djhY&#xA;KH+8+x/3n7H+T/m39Xy6Dk2fV/W+/wDar4WtDxzzfWDFIooSeHEHZR0JPQ1/A/fkQd22UBw2Px+P&#xA;x3IjJNTsVdirsVdirsVdiqhc/wB9a/8AGU/8mnyJ6NuPlL3fpCvkmp2KqF7/AHK/8ZYf+Tq5GTbi&#xA;5/A/cV5uIxci339Qrz6bUrTrhvemPAeHi6KmFg7FXYq7FXYq7FXYq7FXYq7FVG6lliQMgWlfjZq0&#xA;UU6mnbtXt1wEtmOIJo/j8fbyVIpFliVwCA4rxYUO/jiDbGQo0pf7z7H/AHn7H+T/AJt/V8ujyZfV&#xA;/W+/9qvha3Yq7FXYq7FXYq7FVspkWJjGvKQAlVJpU4CyiBe/JQkLlrIyLxcyVdQagH0nqK4D0bI1&#xA;6q5V/vgick0uxVQvf7lf+MsP/J1cjJtxc/gfuKvkmp2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV3XY4&#xA;qof7z7H/AHn7H+T/AJt/V8ug5Nn1f1vv/ar4WtSkuoI54YHaks/L0loTXgKtuBQbeOAkXTOOORiZ&#xA;DkOarhYOxV2KuxVpmVFLMQqjcsTQAYpAJ5KE7K0loykMrSEgjcEGJ8iejZAUJe79IRGSanYqoXv9&#xA;yv8Axlh/5OrkZNuLn8D9xWPY8tRS85KOKqtOHx/CHH269P3nSnbHh3tkM1Y+D9Pu6fBFZJodirsV&#xA;dirsVdirsVdirsVdirsVdiqiYWF0bgykR+nwMX7NQa8+tK9umCt7bOL08Nb3z/QvilimTkh5L0P+&#xA;0fbEG2MomJ3U/wDefY/7z9j/ACf82/q+XR5Mvq/rff8AtV8LWslniioJG48un0dT8h44CWUYE8l+&#xA;Fi7FXYqp3MTSxcFYKwZWDEVFUYN0qPDARbOEuE2h/SMKafCzcjGwQsBQErC4rSpp9+Cqps4uIzPf&#xA;/wAUEZkmh2KqF9tAD2WSJm70AkUk/QMjLk24fq+B+4oa6vVZo/q93CqUbn+9RSTtxpVZNuuAy7i2&#xA;48VXxRl8j+sK0V/aiJPVuYTLxHqFXWnKm9PpwiQ72uWGVmoyr3Lmv7PieFzDyoeNXWle1d8eId6B&#xA;hne8T8lkF/bCJRNdQmT9oq6067eHbESHeynhle0ZV7lC8vHZyba8gVePwgyoPj3+1VJNunQjIyl3&#xA;FsxYgB6oy+R/WEX+kLD/AJaYv+DX+uS4h3tPgz/mn5KUV/D6knqXUBjqPS4uK078t8Al5spYTQqM&#xA;r67Kv6QsP+WmL/g1/rh4h3sfBn/NPyWS39qYn9K5hEvE+mWdacqbV+nEyHemOGVi4yr3KNpeqrP9&#xA;Yu4WQhfT/eoxrvyrRY/bAJd5bMmKwOGMvkf1lE/pCw/5aYv+DX+uHiHe1eDP+afkte/s+DcLmEPQ&#xA;8autK9q0OPEO9Rhne8T8mob+29JfWuYTJ+1xdaYiQ70ywyvaMq9y/wDSFh/y0xf8Gv8AXHiHejwZ&#xA;/wA0/JL7CRYJy8t3AY2TiVEqkKQaqEHBKKOTdWOQiaPNyc0TKNCMrvuP27nfl0CYfX7A7G5i/wCD&#xA;X+uT4h3uN4M/5p+SHGoWcDcVmR7cAs7qykQqATVzXZNuvb5dBxANngTl09X+693n+PfV9c208SiC&#xA;7hVw1Q4kQGlD9kkSD/hemMiDyKcOOUT6on5H9n3tW91HHYiI3cHrqCEYyKw4gniK0XfjQV4/fgB2&#xA;5pnjJnfDKvd+OvmiEv7MIvO5hL0HIh1Ar3pvkuId7UcM72ifkslvoDJGY7uAID+8Bdake2/+f4EG&#xA;Q70xwyo3GX4/H45hG5vGaWtveQLHxFAZEHxVNSQUeo6dxgMu4tmPFQ9UZX7j+sK73EE9xbrDIspR&#xA;yzhCG4r6brU06bnJWCWsQlGJsVY/SEXkmh2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:F87F1174072068118A6D919A6C4DEC5B</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F1174072068118A6D919A6C4DEC5B</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:F77F1174072068118A6D919A6C4DEC5B</stRef:instanceID>
            <stRef:documentID>xmp.did:F77F1174072068118A6D919A6C4DEC5B</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED7F11740720681188C6C8078EC5B63D</stEvt:instanceID>
                  <stEvt:when>2012-01-31T20:41:35-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED7F1174072068118A6DE6B7E4D01013</stEvt:instanceID>
                  <stEvt:when>2012-02-11T14:46:14-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F1174072068118A6D919A6C4DEC5B</stEvt:instanceID>
                  <stEvt:when>2012-02-11T21:02:42-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068118A6D919A6C4DEC5B</stEvt:instanceID>
                  <stEvt:when>2012-02-11T21:03:39-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>457.200000</stDim:w>
            <stDim:h>457.200000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>166</xmpG:green>
                           <xmpG:blue>81</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>239</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>190</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>65</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>41</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>148</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>64</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>237</xmpG:green>
                           <xmpG:blue>50</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>215</xmpG:red>
                           <xmpG:green>223</xmpG:green>
                           <xmpG:blue>35</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>141</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>148</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>56</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>43</xmpG:red>
                           <xmpG:green>182</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>167</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>170</xmpG:green>
                           <xmpG:blue>225</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>28</xmpG:red>
                           <xmpG:green>117</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>43</xmpG:red>
                           <xmpG:green>57</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>38</xmpG:red>
                           <xmpG:green>34</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>146</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>218</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>92</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>238</xmpG:red>
                           <xmpG:green>42</xmpG:green>
                           <xmpG:blue>123</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>194</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>155</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>155</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>114</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>88</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>89</xmpG:red>
                           <xmpG:green>74</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>196</xmpG:red>
                           <xmpG:green>154</xmpG:green>
                           <xmpG:blue>108</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>169</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>80</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>139</xmpG:red>
                           <xmpG:green>94</xmpG:green>
                           <xmpG:blue>60</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>41</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>57</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>60</xmpG:red>
                           <xmpG:green>36</xmpG:green>
                           <xmpG:blue>21</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Brights</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=100 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=75 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>101</xmpG:green>
                           <xmpG:blue>34</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=10 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>222</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>161</xmpG:green>
                           <xmpG:blue>75</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>33</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>154</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=60 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>63</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1111.18 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1111.18 li
871.912 1111.18 li
871.912 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.708661 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
28.2012 720.113 mo
28.2012 1103.55 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 0 0 rgb
@
35.2881 1110.64 mo
607.62 1110.64 li
@
34.356 713.788 mo
226.626 713.788 li
@
28.2012 720.875 mo
28.2012 716.958 31.3706 713.788 35.2876 713.788 cv
@
35.2881 1110.64 mo
31.3711 1110.64 28.2012 1107.47 28.2012 1103.55 cv
@
226.626 713.788 mo
623.66 1110.82 li
@
606.457 1110.64 mo
610.374 1110.64 613.543 1107.47 613.543 1103.55 cv
@
613.543 1103.55 mo
613.543 1103.55 613.542 1102.37 612.994 1100.81 cv
612.446 1099.25 611.47 1098.63 611.47 1098.63 cv
@
223.677 713.788 mo
223.677 713.788 225.305 713.878 226.421 714.339 cv
227.538 714.8 228.948 716.138 228.948 716.138 cv
@
0 lc
0 lj
72.1387 736.619 mo
55.1304 736.619 li
55.1304 728.115 li
72.1387 728.115 li
72.1387 736.619 li
cp
@
199.697 736.619 mo
182.689 736.619 li
182.689 728.115 li
199.697 728.115 li
199.697 736.619 li
cp
@
70.7212 1097.45 mo
53.7129 1097.45 li
53.7129 1088.94 li
70.7212 1088.94 li
70.7212 1097.45 li
cp
@
541.272 1097.45 mo
524.264 1097.45 li
524.264 1088.94 li
541.272 1088.94 li
541.272 1097.45 li
cp
@
102.044 732.367 mo
102.044 734.794 100.077 736.761 97.6499 736.761 cv
95.2236 736.761 93.2563 734.794 93.2563 732.367 cv
93.2563 729.94 95.2236 727.974 97.6499 727.974 cv
100.077 727.974 102.044 729.94 102.044 732.367 cv
cp
@
161.571 732.367 mo
161.571 734.794 159.604 736.761 157.177 736.761 cv
154.751 736.761 152.784 734.794 152.784 732.367 cv
152.784 729.94 154.751 727.974 157.177 727.974 cv
159.604 727.974 161.571 729.94 161.571 732.367 cv
cp
@
206.784 1097.45 mo
189.776 1097.45 li
189.776 1088.94 li
206.784 1088.94 li
206.784 1097.45 li
cp
@
362.689 1097.45 mo
345.681 1097.45 li
345.681 1088.94 li
362.689 1088.94 li
362.689 1097.45 li
cp
@
145.981 1093.2 mo
145.981 1095.62 144.014 1097.59 141.587 1097.59 cv
139.161 1097.59 137.193 1095.62 137.193 1093.2 cv
137.193 1090.77 139.161 1088.8 141.587 1088.8 cv
144.014 1088.8 145.981 1090.77 145.981 1093.2 cv
cp
@
259.367 1093.2 mo
259.367 1095.62 257.399 1097.59 254.973 1097.59 cv
252.546 1097.59 250.579 1095.62 250.579 1093.2 cv
250.579 1090.77 252.546 1088.8 254.973 1088.8 cv
257.399 1088.8 259.367 1090.77 259.367 1093.2 cv
cp
@
457.792 1093.2 mo
457.792 1095.62 455.825 1097.59 453.398 1097.59 cv
450.972 1097.59 449.004 1095.62 449.004 1093.2 cv
449.004 1090.77 450.972 1088.8 453.398 1088.8 cv
455.825 1088.8 457.792 1090.77 457.792 1093.2 cv
cp
@
56.6895 831.339 mo
56.6895 833.766 54.7227 835.732 52.2959 835.732 cv
49.8691 835.732 47.9023 833.766 47.9023 831.339 cv
47.9023 828.912 49.8691 826.945 52.2959 826.945 cv
54.7227 826.945 56.6895 828.912 56.6895 831.339 cv
cp
@
56.6895 1001.42 mo
56.6895 1003.84 54.7227 1005.81 52.2959 1005.81 cv
49.8691 1005.81 47.9023 1003.84 47.9023 1001.42 cv
47.9023 998.991 49.8691 997.024 52.2959 997.024 cv
54.7227 997.024 56.6895 998.991 56.6895 1001.42 cv
cp
@
56.5479 766.142 mo
56.5479 783.149 li
48.0439 783.149 li
48.0439 766.142 li
56.5479 766.142 li
cp
@
56.5479 903.73 mo
56.5479 920.738 li
48.0439 920.738 li
48.0439 903.73 li
56.5479 903.73 li
cp
@
56.5479 1041.93 mo
56.5479 1058.94 li
48.0439 1058.94 li
48.0439 1041.93 li
56.5479 1041.93 li
cp
@
241.379 784.599 mo
243.095 786.315 243.095 789.097 241.379 790.813 cv
239.663 792.528 236.881 792.528 235.166 790.813 cv
233.449 789.097 233.449 786.315 235.166 784.599 cv
236.881 782.883 239.663 782.883 241.379 784.599 cv
cp
@
193.343 736.764 mo
205.369 748.79 li
199.356 754.803 li
187.33 742.777 li
193.343 736.764 li
cp
@
311.781 855.202 mo
323.808 867.228 li
317.794 873.241 li
305.768 861.215 li
311.781 855.202 li
cp
@
444.266 987.687 mo
456.292 999.713 li
450.279 1005.73 li
438.253 993.7 li
444.266 987.687 li
cp
@
525.889 1069.31 mo
537.917 1081.34 li
531.903 1087.35 li
519.876 1075.32 li
525.889 1069.31 li
cp
@
394.711 937.931 mo
396.427 939.647 396.427 942.429 394.711 944.145 cv
392.995 945.86 390.214 945.86 388.498 944.145 cv
386.782 942.429 386.782 939.647 388.498 937.931 cv
390.214 936.216 392.995 936.216 394.711 937.931 cv
cp
@
506.049 1049.27 mo
507.765 1050.99 507.765 1053.77 506.049 1055.48 cv
504.333 1057.2 501.552 1057.2 499.836 1055.48 cv
498.12 1053.77 498.12 1050.99 499.836 1049.27 cv
501.552 1047.55 504.333 1047.55 506.049 1049.27 cv
cp
@
16.0845 347.6 mo
78.3042 347.6 li
@
482.381 347.6 mo
482.381 7.44238 li
@
.508301 353.283 mo
.508301 282.095 li
@
1 lc
1 lj
42.5337 108.132 mo
42.5337 110.616 44.5483 112.632 47.0337 112.632 cv
49.519 112.632 51.5337 110.616 51.5337 108.132 cv
51.5337 105.647 49.519 103.632 47.0337 103.632 cv
44.5483 103.632 42.5337 105.647 42.5337 108.132 cv
@
186.534 151.331 mo
186.534 153.817 188.548 155.831 191.034 155.831 cv
193.519 155.831 195.534 153.817 195.534 151.331 cv
195.534 148.846 193.519 146.831 191.034 146.831 cv
188.548 146.831 186.534 148.846 186.534 151.331 cv
@
186.534 230.531 mo
186.534 233.016 188.548 235.031 191.034 235.031 cv
193.519 235.031 195.534 233.016 195.534 230.531 cv
195.534 228.045 193.519 226.031 191.034 226.031 cv
188.548 226.031 186.534 228.045 186.534 230.531 cv
@
38.9336 244.931 mo
38.9336 247.417 40.9487 249.431 43.4336 249.431 cv
45.9189 249.431 47.9336 247.417 47.9336 244.931 cv
47.9336 242.446 45.9189 240.431 43.4336 240.431 cv
40.9487 240.431 38.9336 242.446 38.9336 244.931 cv
@
0 lc
0 lj
387.919 64.1357 mo
400.875 64.1357 411.378 69.4912 411.378 76.0967 cv
411.378 278.945 li
411.378 285.551 400.875 290.907 387.919 290.907 cv
236.412 290.907 li
223.456 290.907 212.953 285.551 212.953 278.945 cv
212.953 76.0967 li
212.953 69.4912 223.456 64.1357 236.412 64.1357 cv
387.919 64.1357 li
cp
@
42.8745 300.686 mo
45.3008 300.686 47.2681 302.653 47.2681 305.08 cv
47.2681 307.506 45.3008 309.474 42.8745 309.474 cv
40.4478 309.474 38.4805 307.506 38.4805 305.08 cv
38.4805 302.653 40.4478 300.686 42.8745 300.686 cv
cp
@
42.8745 45.5674 mo
45.3008 45.5674 47.2681 47.5361 47.2681 49.9619 cv
47.2681 52.3877 45.3008 54.3564 42.8745 54.3564 cv
40.4478 54.3564 38.4805 52.3877 38.4805 49.9619 cv
38.4805 47.5361 40.4478 45.5674 42.8745 45.5674 cv
cp
@
439.725 300.686 mo
442.152 300.686 444.119 302.653 444.119 305.08 cv
444.119 307.506 442.152 309.474 439.725 309.474 cv
437.298 309.474 435.332 307.506 435.332 305.08 cv
435.332 302.653 437.298 300.686 439.725 300.686 cv
cp
@
439.725 45.5674 mo
442.152 45.5674 444.119 47.5361 444.119 49.9619 cv
444.119 52.3877 442.152 54.3564 439.725 54.3564 cv
437.298 54.3564 435.332 52.3877 435.332 49.9619 cv
435.332 47.5361 437.298 45.5674 439.725 45.5674 cv
cp
@
390.116 347.6 mo
390.9 347.6 391.533 346.966 391.533 346.182 cv
@
391.533 346.182 mo
391.533 327.644 li
@
391.533 327.644 mo
391.533 326.86 390.9 326.227 390.116 326.227 cv
@
391.542 314.953 mo
391.542 315.736 390.908 316.37 390.125 316.37 cv
@
391.535 314.959 mo
391.535 306.456 li
@
391.537 306.456 mo
391.537 305.672 392.169 305.039 392.954 305.039 cv
@
392.947 305.039 mo
401.451 305.039 li
@
389.052 324.853 mo
389.052 325.636 389.685 326.27 390.469 326.27 cv
@
389.052 317.773 mo
389.052 316.989 389.685 316.356 390.469 316.356 cv
@
389.059 324.853 mo
389.059 317.766 li
@
404.295 347.6 mo
403.511 347.6 402.878 346.966 402.878 346.182 cv
@
402.878 346.182 mo
402.878 327.644 li
@
402.878 327.644 mo
402.878 326.86 403.511 326.227 404.295 326.227 cv
@
402.87 314.953 mo
402.87 315.736 403.503 316.37 404.287 316.37 cv
@
402.876 314.959 mo
402.876 306.456 li
@
402.868 306.456 mo
402.868 305.672 402.234 305.039 401.451 305.039 cv
@
405.359 324.853 mo
405.359 325.636 404.726 326.27 403.942 326.27 cv
@
405.359 317.773 mo
405.359 316.989 404.726 316.356 403.942 316.356 cv
@
405.352 324.853 mo
405.352 317.766 li
@
404.295 7.44238 mo
403.512 7.44238 402.878 8.07715 402.878 8.86035 cv
@
402.878 8.86035 mo
402.878 27.3994 li
@
402.878 27.3994 mo
402.878 28.1826 403.512 28.8154 404.295 28.8154 cv
@
402.87 40.0908 mo
402.87 39.3057 403.503 38.6729 404.287 38.6729 cv
@
402.876 40.083 mo
402.876 48.5869 li
@
402.875 48.5869 mo
402.875 49.3701 402.242 50.0049 401.458 50.0049 cv
@
401.464 50.0049 mo
392.96 50.0049 li
@
405.359 30.1904 mo
405.359 29.4072 404.726 28.7725 403.942 28.7725 cv
@
405.359 37.2705 mo
405.359 38.0537 404.726 38.6865 403.942 38.6865 cv
@
405.352 30.1904 mo
405.352 37.2764 li
@
390.116 7.44238 mo
390.9 7.44238 391.533 8.07715 391.533 8.86035 cv
@
391.533 8.86035 mo
391.533 27.3994 li
@
391.533 27.3994 mo
391.533 28.1826 390.9 28.8154 390.116 28.8154 cv
@
391.542 40.0908 mo
391.542 39.3057 390.908 38.6729 390.125 38.6729 cv
@
391.535 40.083 mo
391.535 48.5869 li
@
391.543 48.5869 mo
391.543 49.3701 392.177 50.0049 392.96 50.0049 cv
@
389.052 30.1904 mo
389.052 29.4072 389.685 28.7725 390.469 28.7725 cv
@
389.052 37.2705 mo
389.052 38.0537 389.685 38.6865 390.469 38.6865 cv
@
389.059 30.1904 mo
389.059 37.2764 li
@
191.69 347.6 mo
192.474 347.6 193.107 346.966 193.107 346.182 cv
@
193.107 346.182 mo
193.107 327.644 li
@
193.107 327.644 mo
193.107 326.86 192.474 326.227 191.69 326.227 cv
@
193.116 314.953 mo
193.116 315.736 192.482 316.37 191.699 316.37 cv
@
193.109 314.959 mo
193.109 306.456 li
@
193.111 306.456 mo
193.111 305.672 193.744 305.039 194.528 305.039 cv
@
194.521 305.039 mo
203.025 305.039 li
@
190.626 324.853 mo
190.626 325.636 191.259 326.27 192.043 326.27 cv
@
190.626 317.773 mo
190.626 316.989 191.259 316.356 192.043 316.356 cv
@
190.633 324.853 mo
190.633 317.766 li
@
205.87 347.6 mo
205.085 347.6 204.453 346.966 204.453 346.182 cv
@
204.453 346.182 mo
204.453 327.644 li
@
204.453 327.644 mo
204.453 326.86 205.085 326.227 205.87 326.227 cv
@
204.444 314.953 mo
204.444 315.736 205.078 316.37 205.861 316.37 cv
@
204.451 314.959 mo
204.451 306.456 li
@
204.442 306.456 mo
204.442 305.672 203.808 305.039 203.025 305.039 cv
@
206.933 324.853 mo
206.933 325.636 206.3 326.27 205.516 326.27 cv
@
206.933 317.773 mo
206.933 316.989 206.3 316.356 205.516 316.356 cv
@
206.926 324.853 mo
206.926 317.766 li
@
205.87 7.44238 mo
205.086 7.44238 204.453 8.07715 204.453 8.86035 cv
@
204.453 8.86035 mo
204.453 27.3994 li
@
204.453 27.3994 mo
204.453 28.1826 205.086 28.8154 205.87 28.8154 cv
@
204.444 40.0908 mo
204.444 39.3057 205.078 38.6729 205.861 38.6729 cv
@
204.451 40.083 mo
204.451 48.5869 li
@
204.449 48.5869 mo
204.449 49.3701 203.816 50.0049 203.032 50.0049 cv
@
203.039 50.0049 mo
194.535 50.0049 li
@
206.933 30.1904 mo
206.933 29.4072 206.3 28.7725 205.516 28.7725 cv
@
206.933 37.2705 mo
206.933 38.0537 206.3 38.6865 205.516 38.6865 cv
@
206.926 30.1904 mo
206.926 37.2764 li
@
191.69 7.44238 mo
192.474 7.44238 193.107 8.07715 193.107 8.86035 cv
@
193.107 8.86035 mo
193.107 27.3994 li
@
193.107 27.3994 mo
193.107 28.1826 192.474 28.8154 191.69 28.8154 cv
@
193.116 40.0908 mo
193.116 39.3057 192.482 38.6729 191.699 38.6729 cv
@
193.109 40.083 mo
193.109 48.5869 li
@
193.118 48.5869 mo
193.118 49.3701 193.751 50.0049 194.535 50.0049 cv
@
190.626 30.1904 mo
190.626 29.4072 191.259 28.7725 192.043 28.7725 cv
@
190.626 37.2705 mo
190.626 38.0537 191.259 38.6865 192.043 38.6865 cv
@
190.633 30.1904 mo
190.633 37.2764 li
@
78.3042 347.599 mo
79.0884 347.599 79.7212 346.965 79.7212 346.182 cv
@
79.7212 346.182 mo
79.7212 327.644 li
@
79.7212 327.644 mo
79.7212 326.86 79.0884 326.227 78.3042 326.227 cv
@
79.73 314.952 mo
79.73 315.736 79.0962 316.369 78.313 316.369 cv
@
79.7231 314.959 mo
79.7231 306.455 li
@
79.7251 306.455 mo
79.7251 305.671 80.3579 305.038 81.1421 305.038 cv
@
81.1353 305.038 mo
89.6392 305.038 li
@
77.2407 324.852 mo
77.2407 325.636 77.8735 326.269 78.6577 326.269 cv
@
77.2407 317.772 mo
77.2407 316.989 77.8735 316.355 78.6577 316.355 cv
@
77.2476 324.852 mo
77.2476 317.766 li
@
92.4839 347.599 mo
91.6997 347.599 91.0669 346.965 91.0669 346.182 cv
@
91.0669 346.182 mo
91.0669 327.644 li
@
91.0669 327.644 mo
91.0669 326.86 91.6997 326.227 92.4839 326.227 cv
@
91.0581 314.952 mo
91.0581 315.736 91.6919 316.369 92.4751 316.369 cv
@
91.0649 314.959 mo
91.0649 306.455 li
@
91.0562 306.455 mo
91.0562 305.671 90.4224 305.038 89.6392 305.038 cv
@
93.5474 324.852 mo
93.5474 325.636 92.9146 326.269 92.1304 326.269 cv
@
93.5474 317.772 mo
93.5474 316.989 92.9146 316.355 92.1304 316.355 cv
@
93.5405 324.852 mo
93.5405 317.766 li
@
92.4839 7.44238 mo
91.7007 7.44238 91.0669 8.07715 91.0669 8.86035 cv
@
91.0669 8.86035 mo
91.0669 27.3994 li
@
91.0669 27.3994 mo
91.0669 28.1826 91.7007 28.8154 92.4839 28.8154 cv
@
91.0581 40.0908 mo
91.0581 39.3057 91.6919 38.6729 92.4751 38.6729 cv
@
91.0649 40.083 mo
91.0649 48.5869 li
@
91.063 48.5869 mo
91.063 49.3701 90.4302 50.0049 89.646 50.0049 cv
@
89.6528 50.0049 mo
81.1489 50.0049 li
@
93.5474 30.1904 mo
93.5474 29.4072 92.9146 28.7725 92.1304 28.7725 cv
@
93.5474 37.2705 mo
93.5474 38.0537 92.9146 38.6865 92.1304 38.6865 cv
@
93.5405 30.1904 mo
93.5405 37.2764 li
@
78.3042 7.44238 mo
79.0884 7.44238 79.7212 8.07715 79.7212 8.86035 cv
@
79.7212 8.86035 mo
79.7212 27.3994 li
@
79.7212 27.3994 mo
79.7212 28.1826 79.0884 28.8154 78.3042 28.8154 cv
@
79.73 40.0908 mo
79.73 39.3057 79.0962 38.6729 78.313 38.6729 cv
@
79.7231 40.083 mo
79.7231 48.5869 li
@
79.7319 48.5869 mo
79.7319 49.3701 80.3657 50.0049 81.1489 50.0049 cv
@
77.2407 30.1904 mo
77.2407 29.4072 77.8735 28.7725 78.6577 28.7725 cv
@
77.2407 37.2705 mo
77.2407 38.0537 77.8735 38.6865 78.6577 38.6865 cv
@
77.2476 30.1904 mo
77.2476 37.2764 li
@
466.805 347.6 mo
404.295 347.6 li
@
289.292 347.6 mo
205.87 347.6 li
@
133.386 347.6 mo
92.4839 347.6 li
@
16.0845 7.44238 mo
78.4409 7.44238 li
@
466.805 7.44238 mo
404.432 7.44238 li
@
289.713 7.44238 mo
206.006 7.44238 li
@
133.945 7.44238 mo
92.6206 7.44238 li
@
482.381 7.44238 mo
482.381 1.75879 li
@
468.208 6.03809 mo
468.208 1.75879 li
@
480.978 .354492 mo
481.754 .354492 482.381 .983398 482.381 1.75879 cv
@
469.612 .354492 mo
468.835 .354492 468.208 .983398 468.208 1.75879 cv
@
480.978 .354492 mo
469.612 .354492 li
@
466.805 7.44238 mo
467.582 7.44238 468.208 6.81348 468.208 6.03809 cv
@
482.381 347.599 mo
482.381 353.282 li
@
468.208 349.002 mo
468.208 353.282 li
@
480.978 354.685 mo
481.754 354.685 482.381 354.058 482.381 353.282 cv
@
469.612 354.685 mo
468.835 354.685 468.208 354.058 468.208 353.282 cv
@
480.978 354.685 mo
469.612 354.685 li
@
466.805 347.599 mo
467.582 347.599 468.208 348.226 468.208 349.002 cv
@
14.6812 349.003 mo
14.6812 353.283 li
@
1.91162 354.686 mo
1.13574 354.686 .508301 354.059 .508301 353.283 cv
@
13.2778 354.686 mo
14.0537 354.686 14.6812 354.059 14.6812 353.283 cv
@
1.91162 354.686 mo
13.2778 354.686 li
@
16.0845 347.6 mo
15.3086 347.6 14.6812 348.227 14.6812 349.003 cv
@
14.6812 6.03809 mo
14.6812 1.75879 li
@
1.91162 .356445 mo
1.13574 .356445 .508301 .983398 .508301 1.75879 cv
@
13.2778 .356445 mo
14.0537 .356445 14.6812 .983398 14.6812 1.75879 cv
@
1.91162 .356445 mo
13.2778 .356445 li
@
16.0845 7.44238 mo
15.3086 7.44238 14.6812 6.81543 14.6812 6.03809 cv
@
134.79 349.002 mo
134.79 353.282 li
@
148.962 349.002 mo
148.962 353.282 li
@
136.193 354.686 mo
135.417 354.686 134.79 354.058 134.79 353.282 cv
@
147.559 354.686 mo
148.334 354.686 148.962 354.058 148.962 353.282 cv
@
136.193 354.686 mo
147.559 354.686 li
@
150.366 347.599 mo
149.589 347.599 148.962 348.227 148.962 349.002 cv
@
133.386 347.599 mo
134.162 347.599 134.79 348.227 134.79 349.002 cv
@
135.211 6.03809 mo
135.211 1.75879 li
@
149.384 6.03809 mo
149.384 1.75879 li
@
136.615 .356445 mo
135.838 .356445 135.211 .983398 135.211 1.75879 cv
@
147.981 .356445 mo
148.756 .356445 149.384 .983398 149.384 1.75879 cv
@
136.615 .356445 mo
147.981 .356445 li
@
150.788 7.44238 mo
150.011 7.44238 149.384 6.81543 149.384 6.03809 cv
@
133.808 7.44238 mo
134.583 7.44238 135.211 6.81543 135.211 6.03809 cv
@
290.696 349.003 mo
290.696 353.283 li
@
304.869 349.003 mo
304.869 353.283 li
@
292.099 354.686 mo
291.323 354.686 290.696 354.059 290.696 353.283 cv
@
303.465 354.686 mo
304.241 354.686 304.869 354.059 304.869 353.283 cv
@
292.099 354.686 mo
303.465 354.686 li
@
306.272 347.6 mo
305.496 347.6 304.869 348.227 304.869 349.003 cv
@
289.292 347.6 mo
290.068 347.6 290.696 348.227 290.696 349.003 cv
@
291.117 6.04004 mo
291.117 1.76074 li
@
305.29 6.04004 mo
305.29 1.76074 li
@
292.52 .356445 mo
291.744 .356445 291.117 .985352 291.117 1.76074 cv
@
303.886 .356445 mo
304.662 .356445 305.29 .985352 305.29 1.76074 cv
@
292.52 .356445 mo
303.886 .356445 li
@
306.693 7.44434 mo
305.917 7.44434 305.29 6.81543 305.29 6.04004 cv
@
289.713 7.44434 mo
290.489 7.44434 291.117 6.81543 291.117 6.04004 cv
@
306.693 7.44434 mo
390.116 7.44434 li
@
150.788 7.44238 mo
191.69 7.44238 li
@
150.366 347.599 mo
191.69 347.6 li
@
306.272 347.6 mo
390.116 347.6 li
@
.508301 267.916 mo
.508301 268.699 1.14209 269.333 1.92578 269.333 cv
@
1.92578 269.333 mo
20.4639 269.333 li
@
20.4639 269.333 mo
21.2476 269.333 21.8809 268.699 21.8809 267.916 cv
@
33.1553 269.341 mo
32.3716 269.341 31.7383 268.708 31.7383 267.924 cv
@
33.1484 269.334 mo
41.6523 269.334 li
@
41.6523 269.336 mo
42.436 269.336 43.0693 269.97 43.0693 270.753 cv
@
43.0693 270.747 mo
43.0693 279.25 li
@
23.2554 266.852 mo
22.4717 266.852 21.8384 267.485 21.8384 268.269 cv
@
30.335 266.852 mo
31.1187 266.852 31.752 267.485 31.752 268.269 cv
@
23.2554 266.859 mo
30.3418 266.859 li
@
.508301 282.095 mo
.508301 281.312 1.14209 280.678 1.92578 280.678 cv
@
1.92578 280.678 mo
20.4639 280.678 li
@
20.4639 280.678 mo
21.2476 280.678 21.8809 281.312 21.8809 282.095 cv
@
33.1553 280.669 mo
32.3716 280.669 31.7383 281.303 31.7383 282.086 cv
@
33.1484 280.676 mo
41.6523 280.676 li
@
41.6523 280.667 mo
42.436 280.667 43.0693 280.034 43.0693 279.25 cv
@
23.2554 283.159 mo
22.4717 283.159 21.8384 282.525 21.8384 281.742 cv
@
30.335 283.159 mo
31.1187 283.159 31.752 282.525 31.752 281.742 cv
@
23.2554 283.152 mo
30.3418 283.152 li
@
.508301 71.957 mo
.508301 72.7402 1.14209 73.374 1.92578 73.374 cv
@
1.92578 73.374 mo
20.4639 73.374 li
@
20.4639 73.374 mo
21.2476 73.374 21.8809 72.7402 21.8809 71.957 cv
@
33.1553 73.3828 mo
32.3716 73.3828 31.7383 72.75 31.7383 71.9658 cv
@
33.1484 73.376 mo
41.6523 73.376 li
@
41.6523 73.3779 mo
42.436 73.3779 43.0693 74.0117 43.0693 74.7949 cv
@
43.0693 74.7881 mo
43.0693 83.292 li
@
23.2554 70.8936 mo
22.4717 70.8936 21.8384 71.5273 21.8384 72.3105 cv
@
30.335 70.8936 mo
31.1187 70.8936 31.752 71.5273 31.752 72.3105 cv
@
23.2554 70.9004 mo
30.3418 70.9004 li
@
.508301 86.1367 mo
.508301 85.3535 1.14209 84.7197 1.92578 84.7197 cv
@
1.92578 84.7197 mo
20.4639 84.7197 li
@
20.4639 84.7197 mo
21.2476 84.7197 21.8809 85.3535 21.8809 86.1367 cv
@
33.1553 84.7109 mo
32.3716 84.7109 31.7383 85.3438 31.7383 86.1279 cv
@
33.1484 84.7178 mo
41.6523 84.7178 li
@
41.6523 84.709 mo
42.436 84.709 43.0693 84.0762 43.0693 83.292 cv
@
23.2554 87.2002 mo
22.4717 87.2002 21.8384 86.5664 21.8384 85.7832 cv
@
30.335 87.2002 mo
31.1187 87.2002 31.752 86.5664 31.752 85.7832 cv
@
23.2554 87.1934 mo
30.3418 87.1934 li
@
482.381 347.599 mo
530.374 347.599 li
@
871.557 347.599 mo
871.557 7.44043 li
@
496.555 215.646 mo
498.981 215.646 500.948 217.614 500.948 220.04 cv
500.948 222.465 498.981 224.434 496.555 224.434 cv
494.128 224.434 492.161 222.465 492.161 220.04 cv
492.161 217.614 494.128 215.646 496.555 215.646 cv
cp
@
496.555 130.607 mo
498.981 130.607 500.948 132.575 500.948 135.001 cv
500.948 137.426 498.981 139.395 496.555 139.395 cv
494.128 139.395 492.161 137.426 492.161 135.001 cv
492.161 132.575 494.128 130.607 496.555 130.607 cv
cp
@
856.766 270.61 mo
859.194 270.61 861.161 272.578 861.161 275.004 cv
861.161 277.429 859.194 279.397 856.766 279.397 cv
854.34 279.397 852.374 277.429 852.374 275.004 cv
852.374 272.578 854.34 270.61 856.766 270.61 cv
cp
@
856.766 74.6514 mo
859.194 74.6514 861.161 76.6182 861.161 79.0439 cv
861.161 81.4697 859.194 83.4385 856.766 83.4385 cv
854.34 83.4385 852.374 81.4697 852.374 79.0439 cv
852.374 76.6182 854.34 74.6514 856.766 74.6514 cv
cp
@
676.661 166.891 mo
682.532 166.891 687.292 171.649 687.292 177.521 cv
687.292 183.391 682.532 188.15 676.661 188.15 cv
670.79 188.15 666.032 183.391 666.032 177.521 cv
666.032 171.649 670.79 166.891 676.661 166.891 cv
cp
@
676.661 192.807 mo
679.008 192.807 680.913 194.711 680.913 197.059 cv
680.913 199.405 679.008 201.311 676.661 201.311 cv
674.313 201.311 672.409 199.405 672.409 197.059 cv
672.409 194.711 674.313 192.807 676.661 192.807 cv
cp
@
711.708 222.481 mo
711.708 223.832 711.167 224.606 709.997 225.182 cv
706.647 226.839 li
706.036 227.145 705.459 227.325 704.756 227.325 cv
703.965 227.325 703.479 227.181 702.758 226.821 cv
699.427 225.164 li
698.185 224.552 697.699 223.778 697.699 222.391 cv
697.699 219.331 li
697.699 218.934 697.915 218.43 698.599 218.43 cv
699.248 218.43 699.5 218.916 699.5 219.331 cv
699.5 222.337 li
699.5 223.111 699.571 223.237 700.255 223.58 cv
703.389 225.146 li
703.875 225.38 704.199 225.524 704.756 225.524 cv
705.261 225.524 705.567 225.362 706 225.146 cv
709.114 223.616 li
709.852 223.255 709.907 223.076 709.907 222.265 cv
709.907 219.331 li
709.907 218.934 710.123 218.43 710.807 218.43 cv
711.456 218.43 711.708 218.916 711.708 219.331 cv
711.708 222.481 li
cp
0 0 0 rgb
f
708.484 212.42 mo
708.844 212.42 709.079 212.294 709.51 211.79 cv
709.834 211.412 709.979 211.142 709.979 210.602 cv
709.979 209.233 li
709.979 208.693 709.834 208.423 709.51 208.045 cv
709.079 207.541 708.844 207.415 708.484 207.415 cv
705.225 207.415 li
704.865 207.415 704.631 207.541 704.199 208.045 cv
703.875 208.423 703.731 208.693 703.731 209.233 cv
703.731 210.602 li
703.731 211.142 703.875 211.412 704.199 211.79 cv
704.631 212.294 704.865 212.42 705.225 212.42 cv
708.484 212.42 li
cp
705.225 214.149 mo
704.073 214.149 703.676 213.915 702.975 213.05 cv
702.272 212.204 702.002 211.808 702.002 210.602 cv
702.002 209.233 li
702.002 208.027 702.272 207.631 702.975 206.785 cv
703.676 205.92 704.073 205.686 705.225 205.686 cv
708.484 205.686 li
709.619 205.686 710.05 205.974 710.807 206.875 cv
711.563 207.775 711.708 208.135 711.708 209.233 cv
711.708 210.602 li
711.708 211.7 711.563 212.06 710.807 212.96 cv
710.05 213.861 709.619 214.149 708.484 214.149 cv
705.225 214.149 li
cp
f
705.495 199.46 mo
710.518 199.46 li
711.113 199.46 711.708 199.586 711.708 200.325 cv
711.708 201.063 711.113 201.189 710.518 201.189 cv
703.281 201.189 li
702.651 201.189 702.002 201.117 702.002 200.325 cv
702.002 199.55 702.651 199.46 703.262 199.46 cv
703.46 199.46 li
703.497 199.46 li
702.579 198.056 li
702.29 197.605 702.002 197.12 702.002 196.562 cv
702.002 195.283 li
702.002 194.617 702.182 194.203 702.632 193.681 cv
703.298 192.906 704.037 192.942 704.973 192.906 cv
710.411 192.726 li
711.023 192.708 711.708 192.798 711.708 193.572 cv
711.708 194.275 711.113 194.419 710.537 194.437 cv
705.208 194.617 li
704.145 194.653 703.731 194.743 703.731 195.787 cv
703.731 196.363 li
703.731 196.543 703.785 196.724 703.893 196.903 cv
705.495 199.46 li
cp
f
708.448 184.754 mo
709.42 184.754 709.979 184.79 709.979 183.602 cv
709.979 182.719 li
709.979 182.017 709.924 181.693 709.222 181.513 cv
708.808 181.405 708.52 181.081 708.52 180.648 cv
708.52 180.163 708.898 179.766 709.384 179.766 cv
709.871 179.766 710.483 180.072 710.825 180.36 cv
711.581 180.991 711.708 181.819 711.708 182.737 cv
711.708 183.62 li
711.708 184.484 711.508 185.24 710.842 185.852 cv
710.104 186.519 709.366 186.482 708.43 186.482 cv
703.731 186.482 li
703.731 187.041 li
703.731 187.544 703.623 188.229 702.866 188.229 cv
702.128 188.229 702.002 187.617 702.002 187.041 cv
702.002 186.482 li
700.238 186.482 li
699.643 186.482 699.049 186.356 699.049 185.618 cv
699.049 184.88 699.643 184.754 700.238 184.754 cv
702.002 184.754 li
702.002 181.855 li
702.002 181.279 702.128 180.667 702.866 180.667 cv
703.623 180.667 703.731 181.351 703.731 181.855 cv
703.731 184.754 li
708.448 184.754 li
cp
f
703.281 175.269 mo
702.651 175.269 702.002 175.197 702.002 174.405 cv
702.002 173.72 702.579 173.541 703.155 173.541 cv
703.857 173.541 li
702.741 172.19 li
702.344 171.704 702.002 171.2 702.002 170.66 cv
702.002 169.273 li
702.002 168.607 702.218 168.049 702.686 167.581 cv
703.262 167.004 703.857 166.806 704.649 166.806 cv
705.243 166.806 705.856 166.915 705.856 167.652 cv
705.856 168.283 705.351 168.535 704.793 168.535 cv
704.504 168.535 704.289 168.535 704.037 168.715 cv
703.731 168.931 703.731 169.345 703.731 169.759 cv
703.731 170.263 li
703.731 170.587 703.893 170.821 704.145 171.127 cv
706.143 173.541 li
710.518 173.541 li
711.113 173.541 711.708 173.667 711.708 174.405 cv
711.708 175.143 711.113 175.269 710.518 175.269 cv
703.281 175.269 li
cp
f
707.368 159.428 mo
707.368 159.896 707.494 160.581 708.124 160.581 cv
709.276 160.581 li
709.852 160.581 709.979 159.878 709.979 159.464 cv
709.979 157.556 li
708.989 155.647 li
708.61 155.647 li
707.656 155.647 707.368 155.917 707.368 156.871 cv
707.368 159.428 li
cp
703.731 159.41 mo
703.731 159.914 703.623 160.599 702.866 160.599 cv
702.128 160.599 702.002 159.986 702.002 159.41 cv
702.002 157.033 li
702.002 156.133 702.092 155.485 702.776 154.801 cv
703.442 154.134 703.965 154.044 704.829 154.026 cv
710.699 153.846 li
711.203 153.828 711.708 154.081 711.708 154.657 cv
711.708 155.107 711.329 155.557 710.842 155.539 cv
711.456 156.727 li
711.708 157.213 711.708 157.231 711.708 157.79 cv
711.708 159.446 li
711.708 160.22 711.618 160.778 711.094 161.409 cv
710.5 162.129 709.871 162.309 708.97 162.309 cv
708.213 162.309 li
707.385 162.309 706.864 162.111 706.288 161.463 cv
705.765 160.869 705.639 160.202 705.639 159.446 cv
705.639 155.737 li
705.243 155.737 li
703.947 155.737 703.731 156.025 703.731 157.268 cv
703.731 159.41 li
cp
f
703.731 146.396 mo
703.731 146.756 703.659 147.368 704.217 147.368 cv
704.504 147.368 704.613 147.152 704.721 146.9 cv
706.684 142.579 li
707.188 141.462 707.89 140.886 709.132 140.886 cv
710.879 140.886 711.708 142.075 711.708 143.731 cv
711.708 146.396 li
711.708 147.296 711.67 147.909 711.167 148.557 cv
710.915 148.881 710.59 149.349 710.159 149.349 cv
709.672 149.349 709.294 148.935 709.294 148.449 cv
709.294 148.179 709.384 147.98 709.6 147.782 cv
709.942 147.477 709.979 146.936 709.979 146.396 cv
709.979 144.055 li
709.979 143.443 710.033 142.615 709.024 142.615 cv
708.61 142.615 708.34 143.119 708.161 143.515 cv
706.305 147.584 li
705.874 148.539 705.315 149.097 704.199 149.097 cv
702.831 149.097 702.002 148.017 702.002 146.72 cv
702.002 143.767 li
702.002 142.813 702.056 142.417 702.596 141.769 cv
702.866 141.444 703.083 141.084 703.569 141.084 cv
704.055 141.084 704.433 141.499 704.433 141.967 cv
704.433 142.291 704.307 142.489 704.073 142.705 cv
703.766 142.993 703.731 143.299 703.731 143.767 cv
703.731 146.396 li
cp
f
708.448 132.914 mo
709.42 132.914 709.979 132.95 709.979 131.762 cv
709.979 130.879 li
709.979 130.177 709.924 129.853 709.222 129.673 cv
708.808 129.565 708.52 129.241 708.52 128.809 cv
708.52 128.323 708.898 127.926 709.384 127.926 cv
709.871 127.926 710.483 128.232 710.825 128.521 cv
711.581 129.151 711.708 129.979 711.708 130.897 cv
711.708 131.78 li
711.708 132.644 711.508 133.4 710.842 134.012 cv
710.104 134.679 709.366 134.643 708.43 134.643 cv
703.731 134.643 li
703.731 135.201 li
703.731 135.705 703.623 136.389 702.866 136.389 cv
702.128 136.389 702.002 135.777 702.002 135.201 cv
702.002 134.643 li
700.238 134.643 li
699.643 134.643 699.049 134.517 699.049 133.778 cv
699.049 133.04 699.643 132.914 700.238 132.914 cv
702.002 132.914 li
702.002 130.015 li
702.002 129.439 702.128 128.827 702.866 128.827 cv
703.623 128.827 703.731 129.511 703.731 130.015 cv
703.731 132.914 li
708.448 132.914 li
cp
f
830.01 92.4795 mo
837.743 92.4795 844.01 97.042 844.01 102.667 cv
844.01 252.373 li
844.01 257.999 837.743 262.56 830.01 262.56 cv
794.231 262.56 li
786.499 262.56 780.231 257.999 780.231 252.373 cv
780.231 102.667 li
780.231 97.042 786.499 92.4795 794.231 92.4795 cv
830.01 92.4795 li
cp
1 0 0 rgb
@
588.674 347.6 mo
589.457 347.6 590.091 346.966 590.091 346.182 cv
@
590.091 346.182 mo
590.091 327.644 li
@
590.091 327.644 mo
590.091 326.86 589.457 326.227 588.674 326.227 cv
@
590.1 314.953 mo
590.1 315.736 589.466 316.37 588.683 316.37 cv
@
590.093 314.959 mo
590.093 306.456 li
@
590.095 306.456 mo
590.095 305.672 590.728 305.039 591.512 305.039 cv
@
591.505 305.039 mo
600.009 305.039 li
@
587.61 324.853 mo
587.61 325.636 588.243 326.27 589.027 326.27 cv
@
587.61 317.773 mo
587.61 316.989 588.243 316.356 589.027 316.356 cv
@
587.617 324.853 mo
587.617 317.766 li
@
602.854 347.6 mo
602.069 347.6 601.437 346.966 601.437 346.182 cv
@
601.437 346.182 mo
601.437 327.644 li
@
601.437 327.644 mo
601.437 326.86 602.069 326.227 602.854 326.227 cv
@
601.428 314.953 mo
601.428 315.736 602.061 316.37 602.845 316.37 cv
@
601.435 314.959 mo
601.435 306.456 li
@
601.426 306.456 mo
601.426 305.672 600.792 305.039 600.009 305.039 cv
@
603.917 324.853 mo
603.917 325.636 603.283 326.27 602.5 326.27 cv
@
603.917 317.773 mo
603.917 316.989 603.283 316.356 602.5 316.356 cv
@
603.91 324.853 mo
603.91 317.766 li
@
602.86 7.44238 mo
602.076 7.44238 601.443 8.0752 601.443 8.86035 cv
@
601.443 8.86035 mo
601.443 27.3975 li
@
601.443 27.3975 mo
601.443 28.1816 602.076 28.8154 602.86 28.8154 cv
@
601.435 40.0889 mo
601.435 39.3057 602.067 38.6729 602.852 38.6729 cv
@
601.441 40.083 mo
601.441 48.5869 li
@
601.439 48.5869 mo
601.439 49.3701 600.806 50.0029 600.022 50.0029 cv
@
600.029 50.0029 mo
591.525 50.0029 li
@
603.924 30.1895 mo
603.924 29.4053 603.29 28.7725 602.507 28.7725 cv
@
603.924 37.2686 mo
603.924 38.0527 603.29 38.6865 602.507 38.6865 cv
@
603.917 30.1895 mo
603.917 37.2764 li
@
588.681 7.44238 mo
589.464 7.44238 590.098 8.0752 590.098 8.86035 cv
@
590.098 8.86035 mo
590.098 27.3975 li
@
590.098 27.3975 mo
590.098 28.1816 589.464 28.8154 588.681 28.8154 cv
@
590.106 40.0889 mo
590.106 39.3057 589.473 38.6729 588.689 38.6729 cv
@
590.1 40.083 mo
590.1 48.5869 li
@
590.108 48.5869 mo
590.108 49.3701 590.741 50.0029 591.525 50.0029 cv
@
587.617 30.1895 mo
587.617 29.4053 588.25 28.7725 589.034 28.7725 cv
@
587.617 37.2686 mo
587.617 38.0527 588.25 38.6865 589.034 38.6865 cv
@
587.624 30.1895 mo
587.624 37.2764 li
@
758.752 347.598 mo
759.536 347.598 760.168 346.964 760.168 346.181 cv
@
760.168 346.181 mo
760.168 327.643 li
@
760.168 327.643 mo
760.168 326.859 759.536 326.226 758.752 326.226 cv
@
760.178 314.951 mo
760.178 315.735 759.545 316.368 758.76 316.368 cv
@
760.17 314.958 mo
760.17 306.454 li
@
760.172 306.454 mo
760.172 305.67 760.807 305.037 761.59 305.037 cv
@
761.583 305.037 mo
770.086 305.037 li
@
757.688 324.851 mo
757.688 325.635 758.323 326.268 759.106 326.268 cv
@
757.688 317.771 mo
757.688 316.988 758.323 316.354 759.106 316.354 cv
@
757.696 324.851 mo
757.696 317.765 li
@
772.932 347.598 mo
772.149 347.598 771.514 346.964 771.514 346.181 cv
@
771.514 346.181 mo
771.514 327.643 li
@
771.514 327.643 mo
771.514 326.859 772.149 326.226 772.932 326.226 cv
@
771.506 314.951 mo
771.506 315.735 772.139 316.368 772.922 316.368 cv
@
771.512 314.958 mo
771.512 306.454 li
@
771.504 306.454 mo
771.504 305.67 770.872 305.037 770.086 305.037 cv
@
773.995 324.851 mo
773.995 325.635 773.362 326.268 772.579 326.268 cv
@
773.995 317.771 mo
773.995 316.988 773.362 316.354 772.579 316.354 cv
@
773.989 324.851 mo
773.989 317.765 li
@
772.938 7.44141 mo
772.155 7.44141 771.522 8.07422 771.522 8.8584 cv
@
771.522 8.8584 mo
771.522 27.3965 li
@
771.522 27.3965 mo
771.522 28.1807 772.155 28.8135 772.938 28.8135 cv
@
771.512 40.0879 mo
771.512 39.3037 772.147 38.6709 772.93 38.6709 cv
@
771.52 40.0811 mo
771.52 48.585 li
@
771.518 48.585 mo
771.518 49.3682 770.885 50.002 770.1 50.002 cv
@
770.108 50.002 mo
761.604 50.002 li
@
774.002 30.1885 mo
774.002 29.4043 773.37 28.7705 772.584 28.7705 cv
@
774.002 37.2676 mo
774.002 38.0518 773.37 38.6846 772.584 38.6846 cv
@
773.995 30.1885 mo
773.995 37.2744 li
@
758.758 7.44141 mo
759.543 7.44141 760.176 8.07422 760.176 8.8584 cv
@
760.176 8.8584 mo
760.176 27.3965 li
@
760.176 27.3965 mo
760.176 28.1807 759.543 28.8135 758.758 28.8135 cv
@
760.184 40.0879 mo
760.184 39.3037 759.551 38.6709 758.768 38.6709 cv
@
760.178 40.0811 mo
760.178 48.585 li
@
760.186 48.585 mo
760.186 49.3682 760.821 50.002 761.604 50.002 cv
@
757.696 30.1885 mo
757.696 29.4043 758.329 28.7705 759.112 28.7705 cv
@
757.696 37.2676 mo
757.696 38.0518 758.329 38.6846 759.112 38.6846 cv
@
757.702 30.1885 mo
757.702 37.2744 li
@
531.777 349.003 mo
531.777 353.283 li
@
545.95 349.003 mo
545.95 353.283 li
@
533.181 354.686 mo
532.404 354.686 531.777 354.059 531.777 353.283 cv
@
544.547 354.686 mo
545.322 354.686 545.95 354.059 545.95 353.283 cv
@
533.181 354.686 mo
544.547 354.686 li
@
547.354 347.6 mo
546.577 347.6 545.95 348.227 545.95 349.003 cv
@
530.374 347.6 mo
531.149 347.6 531.777 348.227 531.777 349.003 cv
@
532.198 6.03809 mo
532.198 1.75879 li
@
546.371 6.03809 mo
546.371 1.75879 li
@
533.602 .356445 mo
532.825 .356445 532.198 .983398 532.198 1.75879 cv
@
544.968 .356445 mo
545.743 .356445 546.371 .983398 546.371 1.75879 cv
@
533.602 .356445 mo
544.968 .356445 li
@
547.774 7.44238 mo
546.998 7.44238 546.371 6.81543 546.371 6.03809 cv
@
530.795 7.44238 mo
531.57 7.44238 532.198 6.81543 532.198 6.03809 cv
@
669.366 349.001 mo
669.366 353.281 li
@
683.538 349.001 mo
683.538 353.281 li
@
670.768 354.684 mo
669.993 354.684 669.366 354.057 669.366 353.281 cv
@
682.135 354.684 mo
682.911 354.684 683.538 354.057 683.538 353.281 cv
@
670.768 354.684 mo
682.135 354.684 li
@
684.942 347.598 mo
684.165 347.598 683.538 348.225 683.538 349.001 cv
@
667.961 347.598 mo
668.737 347.598 669.366 348.225 669.366 349.001 cv
@
669.786 6.03613 mo
669.786 1.75684 li
@
683.959 6.03613 mo
683.959 1.75684 li
@
671.19 .354492 mo
670.413 .354492 669.786 .981445 669.786 1.75684 cv
@
682.555 .354492 mo
683.331 .354492 683.959 .981445 683.959 1.75684 cv
@
671.19 .354492 mo
682.555 .354492 li
@
685.362 7.44043 mo
684.586 7.44043 683.959 6.81348 683.959 6.03613 cv
@
668.383 7.44043 mo
669.159 7.44043 669.786 6.81348 669.786 6.03613 cv
@
807.569 349.001 mo
807.569 353.281 li
@
821.741 349.001 mo
821.741 353.281 li
@
808.971 354.684 mo
808.196 354.684 807.569 354.057 807.569 353.281 cv
@
820.338 354.684 mo
821.114 354.684 821.741 354.057 821.741 353.281 cv
@
808.971 354.684 mo
820.338 354.684 li
@
823.145 347.598 mo
822.368 347.598 821.741 348.225 821.741 349.001 cv
@
806.165 347.598 mo
806.94 347.598 807.569 348.225 807.569 349.001 cv
@
807.989 6.03613 mo
807.989 1.75684 li
@
822.163 6.03613 mo
822.163 1.75684 li
@
809.393 .354492 mo
808.616 .354492 807.989 .981445 807.989 1.75684 cv
@
820.758 .354492 mo
821.534 .354492 822.163 .981445 822.163 1.75684 cv
@
809.393 .354492 mo
820.758 .354492 li
@
823.565 7.44043 mo
822.79 7.44043 822.163 6.81348 822.163 6.03613 cv
@
806.586 7.44043 mo
807.362 7.44043 807.989 6.81348 807.989 6.03613 cv
@
547.354 347.6 mo
588.674 347.6 li
@
602.854 347.6 mo
667.961 347.6 li
@
684.942 347.598 mo
758.752 347.598 li
@
772.932 347.598 mo
806.165 347.598 li
@
823.145 347.598 mo
871.557 347.598 li
@
530.795 7.44238 mo
482.381 7.44238 li
@
547.774 7.44238 mo
588.681 7.44238 li
@
602.86 7.44238 mo
668.383 7.44238 li
@
685.362 7.44043 mo
758.758 7.44043 li
@
772.938 7.44141 mo
806.586 7.44141 li
@
823.565 7.44043 mo
871.557 7.44043 li
@
.508301 267.916 mo
.508301 86.1367 li
@
.508301 71.957 mo
.508301 1.75879 li
@
.992126 lw
374.681 391.722 mo
374.681 675.187 li
255.626 675.187 li
255.626 391.722 li
374.681 391.722 li
cp
@
237.201 661.014 mo
239.549 661.014 241.453 662.917 241.453 665.266 cv
241.453 667.614 239.549 669.518 237.201 669.518 cv
234.853 669.518 232.949 667.614 232.949 665.266 cv
232.949 662.917 234.853 661.014 237.201 661.014 cv
cp
@
237.201 397.392 mo
239.549 397.392 241.453 399.295 241.453 401.644 cv
241.453 403.992 239.549 405.896 237.201 405.896 cv
234.853 405.896 232.949 403.992 232.949 401.644 cv
232.949 399.295 234.853 397.392 237.201 397.392 cv
cp
@
393.106 397.392 mo
395.455 397.392 397.358 399.295 397.358 401.644 cv
397.358 403.992 395.455 405.896 393.106 405.896 cv
390.758 405.896 388.854 403.992 388.854 401.644 cv
388.854 399.295 390.758 397.392 393.106 397.392 cv
cp
@
393.106 661.014 mo
395.455 661.014 397.358 662.917 397.358 665.266 cv
397.358 667.614 395.455 669.518 393.106 669.518 cv
390.758 669.518 388.854 667.614 388.854 665.266 cv
388.854 662.917 390.758 661.014 393.106 661.014 cv
cp
@
505.869 651.565 mo
506.274 651.5 506.419 651.694 506.583 651.871 cv
506.523 652.083 506.368 652.2 506.277 652.381 cv
505.661 652.455 505.541 651.901 505.869 651.565 cv
cp
0 0 0 rgb
ef
506.888 647.282 mo
507.245 647.368 507.303 647.751 507.296 648.2 cv
507.102 648.244 507.04 648.42 506.787 648.404 cv
505.92 648.261 506.262 647.063 506.888 647.282 cv
cp
ef
508.316 673.691 mo
508.509 673.435 508.673 673.786 508.928 673.589 cv
508.883 673.817 508.748 673.953 508.52 673.997 cv
508.555 673.793 508.499 673.679 508.316 673.691 cv
cp
ef
508.622 671.143 mo
509.009 671.163 509.009 671.571 509.438 671.55 cv
509.438 671.754 509.438 671.958 509.438 672.162 cv
509.145 671.843 508.737 671.64 508.622 671.143 cv
cp
ef
504.747 651.259 mo
504.997 651.5 505.258 650.467 505.665 650.851 cv
505.681 651.751 504.863 651.817 504.951 652.788 cv
505.425 653.345 506.633 653.037 506.99 652.585 cv
506.694 650.784 507.283 649.303 507.908 647.894 cv
507.799 647.528 507.625 647.226 507.398 646.977 cv
506.618 646.944 506.06 647.134 505.869 647.69 cv
505.93 648.175 506.473 648.714 506.175 649.22 cv
505.565 649.149 505.851 648.185 505.359 647.996 cv
504.889 648.757 504.426 650.044 504.747 651.259 cv
cp
503.523 669.409 mo
503.595 669.032 503.362 668.958 503.014 669.001 cv
503.014 669.103 503.014 669.205 503.014 669.308 cv
503.132 669.393 503.287 669.441 503.523 669.409 cv
cp
505.971 667.268 mo
506.178 667.366 506.191 667.659 506.175 667.981 cv
507.167 667.478 507.985 666.801 507.908 665.229 cv
507.954 664.706 507.515 664.671 507.5 664.208 cv
507.958 660.587 510.163 658.714 510.151 654.624 cv
508.875 654.164 507.45 654.663 506.175 654.522 cv
504.106 654.292 502.529 653.202 501.28 652.278 cv
498.999 649.454 500.229 644.567 503.218 643.407 cv
504.069 643.511 504.35 643.044 504.951 642.897 cv
507.369 642.688 508.561 643.706 510.253 644.224 cv
510.01 642.831 507.456 642.878 506.277 642.082 cv
504.954 642.25 504.344 641.704 503.32 641.572 cv
502.966 641.524 503.261 642.126 503.014 642.185 cv
502.606 641.878 li
502.198 642.185 li
501.173 642.16 501.811 642.853 501.382 643.204 cv
501.096 642.911 500.981 642.909 500.465 643 cv
500.322 643.443 500.219 643.646 500.465 644.02 cv
500.209 644.274 li
500.261 644.632 li
500.021 644.664 500.033 644.946 499.853 645.039 cv
499.598 644.784 li
499.241 644.835 li
499.154 644.854 499.145 644.796 499.139 644.733 cv
498.75 644.976 498.526 644.749 498.12 644.938 cv
498.066 644.685 497.871 644.574 497.711 644.427 cv
497.723 644.235 498.049 644.356 498.018 644.122 cv
498.476 644.071 li
498.425 643.612 li
498.459 643.612 498.493 643.612 498.527 643.612 cv
498.585 643.228 498.873 643.073 499.139 642.897 cv
499.009 642.643 499.191 642.579 499.037 642.49 cv
499.088 642.286 li
499.037 642.082 li
499.146 641.702 498.655 641.921 498.731 641.572 cv
499.315 641.294 499.595 641.509 500.057 641.572 cv
500.231 641.297 500.649 640.864 501.077 641.165 cv
501.246 640.716 501.641 640.442 502.198 640.655 cv
502.799 640.226 503.194 639.811 503.625 639.431 cv
503.595 638.745 503.752 638.059 503.625 637.29 cv
504.019 637.041 li
503.728 636.679 li
504.534 636.231 505.84 636.633 506.787 636.679 cv
507.734 636.198 509.03 636.066 510.457 636.066 cv
512.488 636.511 514.274 636.915 515.352 638.31 cv
516.515 639.815 517.415 641.993 518.818 643.407 cv
519.968 644.566 521.161 645.33 522.795 646.06 cv
523.169 646.06 523.543 646.06 523.917 646.06 cv
524.657 645.046 524.856 643.556 525.548 642.286 cv
526.538 640.469 527.059 638.376 529.831 638.514 cv
531.688 638.968 532.923 640.043 534.419 640.858 cv
534.936 641.396 534.944 642.441 535.745 642.694 cv
536.569 642.532 536.343 641.321 536.56 640.553 cv
537.2 639.481 538.991 639.058 540.435 639.126 cv
541.119 640.72 540.595 642.837 540.639 644.632 cv
540.673 646.036 540.828 647.418 540.537 648.608 cv
540.522 649.376 540.627 650.263 540.333 650.749 cv
540.033 650.856 539.658 650.89 539.416 651.056 cv
536.48 650.441 534.692 648.185 531.258 648.404 cv
530.407 650.989 529.371 653.325 529.626 656.765 cv
529.313 657.539 528.803 658.117 528.607 659.009 cv
529.731 660.146 532.229 661.089 533.909 659.927 cv
535.924 660.698 538.207 661.202 540.333 661.863 cv
540.362 663.663 540.363 666.31 540.129 668.186 cv
537.222 669.032 535.223 667.261 533.807 665.942 cv
531.604 665.841 529.34 666.21 527.383 666.655 cv
525.37 666.88 523.731 666.089 522.081 665.636 cv
521.149 665.039 520.432 664.228 519.838 663.291 cv
519.919 662.938 519.725 662.86 519.634 662.679 cv
519.548 660.214 520.879 659.165 521.062 656.97 cv
518.752 656.87 517.363 658.572 515.963 659.722 cv
514.999 662.326 514.875 665.771 512.904 667.37 cv
512.963 668.142 512.481 668.374 512.395 669.001 cv
512.537 670.08 512.701 670.688 512.292 671.55 cv
512.408 671.774 512.965 671.558 513.006 671.856 cv
512.703 672.208 li
512.701 672.672 li
512.402 672.764 512.387 672.764 512.089 672.672 cv
511.693 673.147 511.787 673.485 511.579 674.099 cv
511.12 674.15 li
511.171 674.609 li
510.748 674.492 510.773 674.823 510.457 674.813 cv
510.325 674.456 li
509.947 674.507 li
509.95 674.237 509.852 673.868 510.253 673.997 cv
510.362 673.616 510 673.706 510.049 673.386 cv
510.328 673.312 510.254 673.589 510.457 673.589 cv
510.322 673.032 510.53 672.198 510.559 671.856 cv
510.641 671.802 510.725 671.749 510.865 671.754 cv
510.874 672.224 511.369 672.757 511.579 672.162 cv
511.392 671.998 511.233 672.257 511.069 671.958 cv
511.156 671.633 510.98 671.571 510.865 671.448 cv
511.139 671.349 511.116 670.951 511.375 670.837 cv
510.945 670.399 511.484 669.819 511.783 669.511 cv
511.653 669.251 511.283 669.605 511.273 669.409 cv
511.634 667.856 509.03 667.808 507.806 667.472 cv
506.885 668.182 505.899 668.827 505.053 669.612 cv
504.705 669.587 504.845 669.073 504.543 669.001 cv
504.457 669.3 504.215 668.94 504.033 669.001 cv
503.988 669.262 503.891 669.47 503.728 669.612 cv
503.456 669.333 503.467 669.694 503.32 669.817 cv
502.492 669.497 502.092 668.777 501.28 668.899 cv
501.356 668.409 500.95 668.474 500.873 668.39 cv
500.923 667.931 li
500.975 667.472 li
501.908 667.66 502.625 668.065 503.523 668.287 cv
503.637 668.668 li
504.033 668.695 li
504.212 668.944 504.648 668.937 504.951 668.798 cv
504.98 668.632 504.855 668.622 504.849 668.491 cv
505.229 668.214 li
505.053 667.777 li
505.078 667.667 505.256 667.708 505.257 667.573 cv
505.668 667.546 li
505.971 667.268 li
cp
ef
500.465 636.474 mo
500.668 636.474 500.873 636.474 501.077 636.474 cv
501.099 636.044 500.546 636.188 500.363 635.964 cv
500.321 636.21 500.549 636.187 500.465 636.474 cv
cp
498.833 633.415 mo
498.527 633.212 li
499.806 630.674 502.655 633.345 501.79 635.964 cv
501.467 636.196 li
501.586 636.576 li
501.493 636.755 501.551 637.085 501.382 637.188 cv
501.015 636.925 li
500.566 636.983 li
500.261 636.917 500.664 636.767 500.566 636.576 cv
500.181 636.429 500.371 636.856 500.057 636.78 cv
500.093 636.646 500.236 636.62 500.261 636.474 cv
499.821 636.603 499.885 636.295 499.445 636.576 cv
499.267 636.347 498.864 636.341 498.833 635.964 cv
499.19 635.761 li
499.139 635.353 li
499.479 635.353 499.819 635.353 500.159 635.353 cv
500.213 634.724 500.457 635.118 500.566 634.843 cv
500.113 634.704 500.313 634.439 500.566 634.231 cv
499.878 634.239 499.811 633.627 499.037 633.722 cv
498.833 633.415 li
cp
ef
504.059 673.259 mo
504.033 673.589 li
503.782 673.78 503.636 674.076 503.218 674.099 cv
503.167 673.743 li
502.912 673.487 li
503.303 673.029 503.291 672.167 504.033 672.06 cv
503.931 672.604 504.208 672.77 504.339 673.079 cv
504.059 673.259 li
cp
ef
506.175 672.265 mo
506.662 672.366 506.667 671.929 507.296 671.856 cv
506.84 671.67 506.242 671.302 506.378 670.837 cv
507.337 670.496 507.849 669.915 508.826 669.817 cv
508.596 670.21 508.946 670.288 508.928 670.734 cv
508.482 670.798 508.287 671.113 508.316 671.652 cv
508.134 671.591 507.893 671.951 507.806 671.652 cv
507.622 671.866 507.625 672.333 507.398 672.672 cv
506.868 672.658 506.503 672.479 506.175 672.265 cv
cp
ef
498.731 640.553 mo
498.944 640.358 499.218 640.224 499.547 640.146 cv
499.476 640.459 499.476 640.341 499.547 640.655 cv
499.273 640.894 498.944 640.844 498.731 640.553 cv
cp
ef
.692052 lw
1 lc
4 ml
502.606 641.878 mo
502.94 643.243 501.443 644.399 500.209 644.274 cv
@
.627156 lw
499.598 644.784 mo
499.437 645.104 499.375 645.459 499.242 645.787 cv
498.518 648.833 498.436 652.003 497.978 655.087 cv
497.906 655.849 497.683 656.587 497.491 657.328 cv
497.332 657.816 496.936 658.702 496.316 658.112 cv
496.074 657.886 495.93 657.592 495.802 657.293 cv
495.788 653.642 495.728 649.892 496.422 646.269 cv
496.314 645.651 496.76 644.921 496.224 644.407 cv
495.47 644.14 495.4 645.306 494.734 645.343 cv
493.375 643.895 495.455 641.983 496.991 641.784 cv
@
.447503 lw
496.991 641.784 mo
496.554 639.545 496.982 637.167 498.027 635.255 cv
@
.575513 lw
498.027 635.255 mo
497.933 634.535 498.289 633.866 498.833 633.415 cv
@
.518347 lw
510.325 674.456 mo
510.208 674.64 510.012 674.763 509.801 674.81 cv
507.86 674.212 505.752 674.576 504.059 673.259 cv
@
.57981 lw
503.167 673.743 mo
502.104 673.979 501.823 672.462 502.482 671.854 cv
501.815 670.884 500.174 671.345 499.236 670.571 cv
497.029 669.507 494.517 668.532 492.871 666.709 cv
492.873 666.659 492.909 666.554 492.947 666.454 cv
495.638 665.784 498.343 667.306 500.923 667.931 cv
@
.688171 lw
504.314 667.446 mo
504.326 667.411 504.338 667.376 504.351 667.341 cv
504.713 667.001 505.499 666.995 505.668 667.546 cv
@
.470957 lw
496.991 641.784 mo
497.21 641.872 497.43 641.974 497.614 642.124 cv
@
.282574 lw
497.614 642.124 mo
498.124 641.718 498.601 642.263 499.088 642.286 cv
@
.49717 lw
504.019 637.041 mo
503.112 636.945 502.251 636.667 501.467 636.196 cv
@
.656469 lw
501.015 636.925 mo
500.794 637.397 501.475 638.043 500.784 638.321 cv
500.671 638.318 500.517 638.247 500.312 638.157 cv
@
.485451 lw
497.614 642.124 mo
497.552 642.562 496.836 642.839 497.307 643.325 cv
497.857 643.249 498.042 643.856 498.476 644.071 cv
@
.442502 lw
498.027 635.255 mo
498.397 635.481 498.832 635.511 499.19 635.761 cv
@
.533737 lw
504.314 667.446 mo
503.869 667.721 503.891 668.265 503.637 668.668 cv
@
.452481 lw
504.314 667.446 mo
504.652 667.677 504.776 668.146 505.229 668.214 cv
@
.711611 lw
511.12 674.15 mo
511.534 674.382 512 674.512 512.44 674.706 cv
513.497 674.437 513.821 672.609 512.703 672.208 cv
@
538.868 628.815 mo
538.868 626.169 li
538.868 625.7 539.12 625.268 539.768 625.268 cv
540.417 625.268 540.668 625.7 540.668 626.169 cv
540.668 633.263 li
540.668 633.73 540.417 634.163 539.768 634.163 cv
539.12 634.163 538.868 633.73 538.868 633.263 cv
538.868 630.616 li
528.461 630.616 li
528.461 633.263 li
528.461 633.73 528.208 634.163 527.561 634.163 cv
526.913 634.163 526.66 633.73 526.66 633.263 cv
526.66 626.169 li
526.66 625.7 526.913 625.268 527.561 625.268 cv
528.208 625.268 528.461 625.7 528.461 626.169 cv
528.461 628.815 li
538.868 628.815 li
cp
f
534.457 619.258 mo
539.48 619.258 li
540.074 619.258 540.668 619.384 540.668 620.123 cv
540.668 620.86 540.074 620.987 539.48 620.987 cv
532.242 620.987 li
531.612 620.987 530.963 620.915 530.963 620.123 cv
530.963 619.348 531.612 619.258 532.224 619.258 cv
532.422 619.258 li
532.458 619.258 li
531.54 617.854 li
531.251 617.403 530.963 616.917 530.963 616.359 cv
530.963 615.081 li
530.963 614.415 531.144 614 531.594 613.479 cv
532.26 612.704 532.998 612.74 533.935 612.704 cv
539.372 612.524 li
539.984 612.506 540.668 612.596 540.668 613.37 cv
540.668 614.073 540.074 614.217 539.498 614.234 cv
534.168 614.415 li
533.106 614.451 532.692 614.541 532.692 615.585 cv
532.692 616.161 li
532.692 616.341 532.746 616.521 532.854 616.701 cv
534.457 619.258 li
cp
f
532.692 605.488 mo
532.692 605.974 li
532.692 606.478 532.584 607.163 531.828 607.163 cv
531.089 607.163 530.963 606.55 530.963 605.974 cv
530.963 605.488 li
530.729 605.488 li
529.739 605.488 529.019 605.434 528.263 604.66 cv
527.471 603.832 527.398 603.057 527.398 601.995 cv
527.398 600.825 li
527.398 600.23 527.453 599.564 528.263 599.564 cv
529.001 599.564 529.127 600.158 529.127 600.752 cv
529.127 602.103 li
529.127 603.273 529.361 603.759 530.622 603.759 cv
530.963 603.759 li
530.963 602.229 li
530.963 601.653 531.089 601.041 531.828 601.041 cv
532.584 601.041 532.692 601.725 532.692 602.229 cv
532.692 603.759 li
539.48 603.759 li
540.074 603.759 540.668 603.885 540.668 604.624 cv
540.668 605.362 540.074 605.488 539.48 605.488 cv
532.692 605.488 li
cp
f
537.445 593.338 mo
537.806 593.338 538.04 593.212 538.472 592.708 cv
538.796 592.33 538.94 592.06 538.94 591.52 cv
538.94 590.151 li
538.94 589.611 538.796 589.341 538.472 588.963 cv
538.04 588.459 537.806 588.333 537.445 588.333 cv
534.187 588.333 li
533.827 588.333 533.592 588.459 533.16 588.963 cv
532.836 589.341 532.692 589.611 532.692 590.151 cv
532.692 591.52 li
532.692 592.06 532.836 592.33 533.16 592.708 cv
533.592 593.212 533.827 593.338 534.187 593.338 cv
537.445 593.338 li
cp
534.187 595.067 mo
533.034 595.067 532.638 594.833 531.936 593.968 cv
531.234 593.122 530.963 592.726 530.963 591.52 cv
530.963 590.151 li
530.963 588.945 531.234 588.549 531.936 587.703 cv
532.638 586.838 533.034 586.604 534.187 586.604 cv
537.445 586.604 li
538.58 586.604 539.012 586.892 539.768 587.792 cv
540.524 588.693 540.668 589.053 540.668 590.151 cv
540.668 591.52 li
540.668 592.618 540.524 592.978 539.768 593.878 cv
539.012 594.779 538.58 595.067 537.445 595.067 cv
534.187 595.067 li
cp
f
527.579 575.211 mo
527.002 575.211 526.678 574.958 526.678 574.311 cv
526.678 573.662 527.002 573.41 527.579 573.41 cv
540.687 573.41 li
540.687 575.787 li
529.883 580.486 li
529.865 580.486 li
529.865 580.522 li
539.768 580.522 li
540.344 580.522 540.668 580.774 540.668 581.422 cv
540.668 582.071 540.344 582.323 539.768 582.323 cv
526.66 582.323 li
526.66 579.946 li
537.589 575.247 li
537.589 575.265 li
537.589 575.229 li
527.579 575.211 li
cp
f
538.94 564.015 mo
538.94 562.719 li
538.94 562.143 539.066 561.53 539.804 561.53 cv
540.561 561.53 540.668 562.215 540.668 562.719 cv
540.668 567.112 li
540.668 567.616 540.561 568.301 539.804 568.301 cv
539.066 568.301 538.94 567.688 538.94 567.112 cv
538.94 565.744 li
532.692 565.744 li
532.692 567.112 li
532.692 567.616 532.584 568.301 531.828 568.301 cv
531.089 568.301 530.963 567.688 530.963 567.112 cv
530.963 565.293 li
530.963 564.303 531.144 564.015 532.17 564.015 cv
538.94 564.015 li
cp
527.471 566.626 mo
526.858 566.626 526.66 566.284 526.66 565.816 cv
526.66 564.826 li
526.66 564.357 526.858 564.015 527.471 564.015 cv
528.299 564.015 li
528.911 564.015 529.109 564.357 529.109 564.826 cv
529.109 565.816 li
529.109 566.284 528.911 566.626 528.299 566.626 cv
527.471 566.626 li
cp
f
534.457 554.458 mo
539.48 554.458 li
540.074 554.458 540.668 554.584 540.668 555.323 cv
540.668 556.061 540.074 556.187 539.48 556.187 cv
532.242 556.187 li
531.612 556.187 530.963 556.115 530.963 555.323 cv
530.963 554.548 531.612 554.458 532.224 554.458 cv
532.422 554.458 li
532.458 554.458 li
531.54 553.054 li
531.251 552.604 530.963 552.118 530.963 551.56 cv
530.963 550.281 li
530.963 549.615 531.144 549.201 531.594 548.679 cv
532.26 547.904 532.998 547.94 533.935 547.904 cv
539.372 547.724 li
539.984 547.706 540.668 547.796 540.668 548.57 cv
540.668 549.273 540.074 549.417 539.498 549.435 cv
534.168 549.615 li
533.106 549.651 532.692 549.741 532.692 550.785 cv
532.692 551.361 li
532.692 551.542 532.746 551.722 532.854 551.901 cv
534.457 554.458 li
cp
f
541.155 535.61 mo
542.109 535.61 542.847 535.61 543.585 536.313 cv
544.341 537.015 544.341 537.753 544.341 538.33 cv
544.341 539.77 li
544.341 540.256 544.288 540.832 543.855 541.39 cv
543.477 541.895 542.703 542.381 542.055 542.381 cv
541.587 542.381 541.208 541.984 541.208 541.534 cv
541.208 541.066 541.46 540.778 541.893 540.652 cv
542.541 540.472 542.613 540.184 542.613 539.536 cv
542.613 538.401 li
542.613 537.303 542.163 537.339 541.155 537.339 cv
532.692 537.339 li
532.692 539.428 li
532.692 539.932 532.584 540.616 531.828 540.616 cv
531.089 540.616 530.963 540.004 530.963 539.428 cv
530.963 536.889 li
530.963 535.898 531.144 535.61 532.17 535.61 cv
541.155 535.61 li
cp
527.471 538.221 mo
526.858 538.221 526.66 537.879 526.66 537.411 cv
526.66 536.421 li
526.66 535.953 526.858 535.61 527.471 535.61 cv
528.299 535.61 li
528.911 535.61 529.109 535.953 529.109 536.421 cv
529.109 537.411 li
529.109 537.879 528.911 538.221 528.299 538.221 cv
527.471 538.221 li
cp
f
536.329 527.386 mo
536.329 527.854 536.455 528.539 537.085 528.539 cv
538.238 528.539 li
538.814 528.539 538.94 527.836 538.94 527.422 cv
538.94 525.514 li
537.95 523.605 li
537.572 523.605 li
536.617 523.605 536.329 523.875 536.329 524.829 cv
536.329 527.386 li
cp
532.692 527.368 mo
532.692 527.872 532.584 528.557 531.828 528.557 cv
531.089 528.557 530.963 527.944 530.963 527.368 cv
530.963 524.991 li
530.963 524.091 531.054 523.443 531.738 522.759 cv
532.404 522.092 532.926 522.002 533.791 521.984 cv
539.66 521.804 li
540.165 521.786 540.668 522.039 540.668 522.615 cv
540.668 523.065 540.291 523.515 539.804 523.497 cv
540.417 524.685 li
540.668 525.171 540.668 525.189 540.668 525.748 cv
540.668 527.404 li
540.668 528.178 540.579 528.736 540.056 529.367 cv
539.462 530.087 538.832 530.267 537.932 530.267 cv
537.175 530.267 li
536.347 530.267 535.825 530.069 535.249 529.421 cv
534.727 528.827 534.601 528.16 534.601 527.404 cv
534.601 523.695 li
534.205 523.695 li
532.908 523.695 532.692 523.983 532.692 525.226 cv
532.692 527.368 li
cp
f
547.817 665.687 mo
547.817 665.52 547.913 665.304 548.201 665.304 cv
548.48 665.304 548.584 665.511 548.584 665.687 cv
548.584 666.215 li
548.584 666.734 548.345 667.079 547.905 667.294 cv
547.545 667.47 li
547.354 667.566 547.089 667.622 546.874 667.622 cv
546.618 667.622 546.378 667.566 546.21 667.486 cv
545.786 667.278 li
545.298 667.03 545.099 666.71 545.099 666.167 cv
545.099 665.687 li
545.099 665.52 545.194 665.304 545.482 665.304 cv
545.762 665.304 545.866 665.511 545.866 665.687 cv
545.866 666.144 li
545.866 666.423 545.89 666.471 546.138 666.599 cv
546.362 666.71 li
546.554 666.807 546.674 666.854 546.874 666.854 cv
547.042 666.854 547.161 666.799 547.313 666.727 cv
547.529 666.622 li
547.777 666.503 547.817 666.415 547.817 666.127 cv
547.817 665.687 li
cp
549.944 666.366 mo
549.944 666.774 549.896 667.087 549.616 667.414 cv
549.456 667.606 549.128 667.87 548.864 667.87 cv
548.657 667.87 548.505 667.694 548.505 667.486 cv
548.505 667.23 548.712 667.15 548.904 667.046 cv
549.168 666.902 549.176 666.655 549.176 666.391 cv
549.176 664.976 li
549.176 664.56 548.752 664.6 548.465 664.6 cv
545.37 664.6 li
545.146 664.6 544.962 664.575 544.771 664.704 cv
544.531 664.864 544.491 665.104 544.491 665.376 cv
544.491 666.391 li
544.491 666.655 544.499 666.902 544.763 667.046 cv
544.955 667.15 545.163 667.23 545.163 667.486 cv
545.163 667.694 545.011 667.87 544.803 667.87 cv
544.539 667.87 544.211 667.606 544.051 667.414 cv
543.771 667.087 543.723 666.774 543.723 666.366 cv
543.723 665.455 li
543.723 665.175 543.723 665.04 543.835 664.76 cv
544.083 664.136 544.555 663.832 545.21 663.832 cv
548.568 663.832 li
548.944 663.832 549.192 663.824 549.496 664.072 cv
549.752 664.28 549.944 664.624 549.944 664.96 cv
549.944 666.366 li
cp
f
549.145 661.351 mo
549.145 658.601 li
549.145 658.392 549.256 658.2 549.544 658.2 cv
549.832 658.2 549.944 658.392 549.944 658.601 cv
549.944 662.15 li
547.337 662.15 li
546.738 662.15 546.434 661.847 546.434 661.247 cv
546.434 659 li
544.523 659 li
544.523 661.751 li
544.523 661.958 544.411 662.15 544.123 662.15 cv
543.835 662.15 543.723 661.958 543.723 661.751 cv
543.723 659.096 li
543.723 658.832 543.763 658.647 543.947 658.448 cv
544.155 658.225 544.371 658.2 544.659 658.2 cv
546.298 658.2 li
546.586 658.2 546.802 658.225 547.009 658.448 cv
547.193 658.647 547.233 658.832 547.233 659.096 cv
547.233 661.351 li
549.145 661.351 li
cp
f
549.145 653.24 mo
544.523 653.24 li
544.523 655.591 li
549.145 655.591 li
549.145 653.24 li
cp
543.723 653.24 mo
543.723 652.8 544.083 652.44 544.523 652.44 cv
549.145 652.44 li
549.592 652.44 549.944 652.784 549.944 653.24 cv
549.944 655.591 li
549.944 656.047 549.592 656.391 549.145 656.391 cv
544.523 656.391 li
544.083 656.391 543.723 656.03 543.723 655.591 cv
543.723 653.24 li
cp
f
549.145 647.48 mo
547.529 647.48 li
547.297 647.48 547.129 647.376 547.129 647.081 cv
547.129 646.784 547.297 646.681 547.529 646.681 cv
549.544 646.681 li
549.832 646.681 549.944 646.872 549.944 647.081 cv
549.944 650.231 li
549.944 650.438 549.832 650.631 549.544 650.631 cv
549.256 650.631 549.145 650.438 549.145 650.231 cv
549.145 649.056 li
544.523 649.056 li
544.523 650.231 li
544.523 650.438 544.411 650.631 544.123 650.631 cv
543.835 650.631 543.723 650.438 543.723 650.231 cv
543.723 648.256 li
549.145 648.256 li
549.145 647.48 li
cp
f
549.145 644.071 mo
549.145 641.321 li
549.145 641.112 549.256 640.921 549.544 640.921 cv
549.832 640.921 549.944 641.112 549.944 641.321 cv
549.944 644.871 li
547.337 644.871 li
546.738 644.871 546.434 644.567 546.434 643.968 cv
546.434 641.721 li
544.523 641.721 li
544.523 644.472 li
544.523 644.679 544.411 644.871 544.123 644.871 cv
543.835 644.871 543.723 644.679 543.723 644.472 cv
543.723 641.816 li
543.723 641.553 543.763 641.368 543.947 641.169 cv
544.155 640.945 544.371 640.921 544.659 640.921 cv
546.298 640.921 li
546.586 640.921 546.802 640.945 547.009 641.169 cv
547.193 641.368 547.233 641.553 547.233 641.816 cv
547.233 644.071 li
549.145 644.071 li
cp
f
547.913 637.92 mo
547.913 638.128 547.801 638.319 547.513 638.319 cv
547.226 638.319 547.113 638.128 547.113 637.92 cv
547.113 636.433 li
547.113 636.288 547.113 636.2 547.226 636.081 cv
547.345 635.953 547.457 635.953 547.625 635.953 cv
549.544 635.953 li
549.8 635.953 549.944 636.065 549.944 636.353 cv
549.944 636.641 549.8 636.753 549.544 636.753 cv
547.913 636.753 li
547.913 637.92 li
cp
f
549.145 626.792 mo
549.145 625.353 li
549.145 624.777 548.889 624.441 548.281 624.441 cv
547.609 624.441 547.233 624.625 547.233 625.353 cv
547.233 626.792 li
549.145 626.792 li
cp
546.434 626.792 mo
546.434 625.353 li
546.434 624.777 546.178 624.441 545.57 624.441 cv
544.898 624.441 544.523 624.625 544.523 625.353 cv
544.523 626.792 li
546.434 626.792 li
cp
543.723 627.592 mo
543.723 625.353 li
543.723 624.178 544.443 623.642 545.57 623.642 cv
546.034 623.642 546.458 623.746 546.833 624.169 cv
547.265 623.714 547.689 623.642 548.281 623.642 cv
549.328 623.642 549.944 624.337 549.944 625.353 cv
549.944 627.592 li
543.723 627.592 li
cp
f
546.202 621.736 mo
545.922 621.736 545.634 621.704 545.634 621.352 cv
545.634 621.048 545.89 620.968 546.146 620.968 cv
546.458 620.968 li
545.962 620.369 li
545.786 620.153 545.634 619.929 545.634 619.689 cv
545.634 619.073 li
545.634 618.777 545.73 618.53 545.938 618.322 cv
546.194 618.066 546.458 617.978 546.81 617.978 cv
547.073 617.978 547.345 618.026 547.345 618.354 cv
547.345 618.634 547.122 618.746 546.874 618.746 cv
546.746 618.746 546.649 618.746 546.538 618.826 cv
546.402 618.921 546.402 619.105 546.402 619.289 cv
546.402 619.513 li
546.402 619.657 546.474 619.761 546.586 619.897 cv
547.473 620.968 li
549.416 620.968 li
549.68 620.968 549.944 621.024 549.944 621.352 cv
549.944 621.68 549.68 621.736 549.416 621.736 cv
546.202 621.736 li
cp
f
549.176 613.697 mo
549.176 613.122 li
549.176 612.866 549.232 612.594 549.56 612.594 cv
549.896 612.594 549.944 612.898 549.944 613.122 cv
549.944 615.073 li
549.944 615.296 549.896 615.601 549.56 615.601 cv
549.232 615.601 549.176 615.329 549.176 615.073 cv
549.176 614.465 li
546.402 614.465 li
546.402 615.073 li
546.402 615.296 546.354 615.601 546.018 615.601 cv
545.69 615.601 545.634 615.329 545.634 615.073 cv
545.634 614.265 li
545.634 613.825 545.714 613.697 546.17 613.697 cv
549.176 613.697 li
cp
544.083 614.857 mo
543.811 614.857 543.723 614.705 543.723 614.497 cv
543.723 614.057 li
543.723 613.849 543.811 613.697 544.083 613.697 cv
544.451 613.697 li
544.723 613.697 544.811 613.849 544.811 614.057 cv
544.811 614.497 li
544.811 614.705 544.723 614.857 544.451 614.857 cv
544.083 614.857 li
cp
f
548.017 608.937 mo
548.017 609.145 548.073 609.449 548.353 609.449 cv
548.864 609.449 li
549.12 609.449 549.176 609.137 549.176 608.953 cv
549.176 608.105 li
548.736 607.258 li
548.568 607.258 li
548.145 607.258 548.017 607.378 548.017 607.802 cv
548.017 608.937 li
cp
546.402 608.929 mo
546.402 609.153 546.354 609.457 546.018 609.457 cv
545.69 609.457 545.634 609.185 545.634 608.929 cv
545.634 607.874 li
545.634 607.474 545.674 607.186 545.978 606.882 cv
546.274 606.586 546.506 606.546 546.89 606.539 cv
549.496 606.458 li
549.72 606.45 549.944 606.563 549.944 606.818 cv
549.944 607.018 549.776 607.218 549.56 607.21 cv
549.832 607.738 li
549.944 607.954 549.944 607.961 549.944 608.209 cv
549.944 608.945 li
549.944 609.289 549.904 609.537 549.672 609.816 cv
549.408 610.136 549.128 610.216 548.729 610.216 cv
548.393 610.216 li
548.025 610.216 547.793 610.128 547.537 609.841 cv
547.305 609.577 547.25 609.281 547.25 608.945 cv
547.25 607.298 li
547.073 607.298 li
546.498 607.298 546.402 607.426 546.402 607.978 cv
546.402 608.929 li
cp
f
547.186 603.689 mo
549.416 603.689 li
549.68 603.689 549.944 603.745 549.944 604.073 cv
549.944 604.4 549.68 604.457 549.416 604.457 cv
546.202 604.457 li
545.922 604.457 545.634 604.425 545.634 604.073 cv
545.634 603.729 545.922 603.689 546.194 603.689 cv
546.282 603.689 li
546.298 603.689 li
545.89 603.065 li
545.762 602.865 545.634 602.649 545.634 602.402 cv
545.634 601.834 li
545.634 601.538 545.714 601.354 545.914 601.123 cv
546.21 600.779 546.538 600.794 546.954 600.779 cv
549.368 600.699 li
549.64 600.69 549.944 600.73 549.944 601.074 cv
549.944 601.386 549.68 601.45 549.424 601.458 cv
547.058 601.538 li
546.586 601.554 546.402 601.594 546.402 602.058 cv
546.402 602.314 li
546.402 602.394 546.426 602.474 546.474 602.554 cv
547.186 603.689 li
cp
f
549.145 589.483 mo
549.145 589.275 549.256 589.083 549.544 589.083 cv
549.832 589.083 549.944 589.275 549.944 589.483 cv
549.944 593.033 li
543.723 593.033 li
543.723 589.483 li
543.723 589.275 543.835 589.083 544.123 589.083 cv
544.411 589.083 544.523 589.275 544.523 589.483 cv
544.523 592.233 li
546.434 592.233 li
546.434 591.058 li
546.434 590.85 546.546 590.658 546.833 590.658 cv
547.122 590.658 547.233 590.85 547.233 591.058 cv
547.233 592.233 li
549.145 592.233 li
549.145 589.483 li
cp
f
547.186 586.41 mo
549.416 586.41 li
549.68 586.41 549.944 586.466 549.944 586.793 cv
549.944 587.121 549.68 587.177 549.416 587.177 cv
546.202 587.177 li
545.922 587.177 545.634 587.146 545.634 586.793 cv
545.634 586.45 545.922 586.41 546.194 586.41 cv
546.282 586.41 li
546.298 586.41 li
545.89 585.786 li
545.762 585.586 545.634 585.37 545.634 585.123 cv
545.634 584.555 li
545.634 584.259 545.714 584.075 545.914 583.843 cv
546.21 583.5 546.538 583.515 546.954 583.5 cv
549.368 583.419 li
549.64 583.411 549.944 583.451 549.944 583.795 cv
549.944 584.107 549.68 584.171 549.424 584.179 cv
547.058 584.259 li
546.586 584.275 546.402 584.315 546.402 584.779 cv
546.402 585.035 li
546.402 585.114 546.426 585.194 546.474 585.274 cv
547.186 586.41 li
cp
f
549.176 579.139 mo
549.176 578.563 li
549.176 578.307 549.232 578.035 549.56 578.035 cv
549.896 578.035 549.944 578.339 549.944 578.563 cv
549.944 580.514 li
549.944 580.738 549.896 581.042 549.56 581.042 cv
549.232 581.042 549.176 580.77 549.176 580.514 cv
549.176 579.906 li
546.402 579.906 li
546.402 580.514 li
546.402 580.738 546.354 581.042 546.018 581.042 cv
545.69 581.042 545.634 580.77 545.634 580.514 cv
545.634 579.707 li
545.634 579.267 545.714 579.139 546.17 579.139 cv
549.176 579.139 li
cp
544.083 580.298 mo
543.811 580.298 543.723 580.146 543.723 579.938 cv
543.723 579.499 li
543.723 579.291 543.811 579.139 544.083 579.139 cv
544.451 579.139 li
544.723 579.139 544.811 579.291 544.811 579.499 cv
544.811 579.938 li
544.811 580.146 544.723 580.298 544.451 580.298 cv
544.083 580.298 li
cp
f
548.121 574.89 mo
548.281 574.89 548.449 574.882 548.521 574.794 cv
548.776 574.475 li
548.824 574.418 548.849 574.347 548.849 574.25 cv
548.849 573.691 li
548.849 573.595 548.769 573.483 548.648 573.339 cv
548.161 572.748 li
548.113 572.691 548.009 572.667 547.905 572.667 cv
547.345 572.667 li
547.241 572.667 547.137 572.691 547.089 572.748 cv
546.602 573.339 li
546.482 573.483 546.402 573.595 546.402 573.691 cv
546.402 574.25 li
546.402 574.347 546.426 574.418 546.474 574.475 cv
546.729 574.794 li
546.802 574.882 546.97 574.89 547.129 574.89 cv
548.121 574.89 li
cp
547.065 575.658 mo
546.706 575.658 546.386 575.554 546.258 575.394 cv
545.818 574.834 li
545.69 574.674 545.634 574.554 545.634 574.354 cv
545.634 573.611 li
545.634 573.403 545.786 573.155 546.018 572.859 cv
546.17 572.667 li
546.082 572.667 li
545.842 572.667 545.634 572.54 545.634 572.275 cv
545.634 571.94 545.914 571.9 546.17 571.9 cv
549.92 571.9 li
550.615 571.9 550.759 571.956 551.031 572.275 cv
551.247 572.531 li
551.527 572.867 551.575 573.059 551.575 573.491 cv
551.575 574.762 li
551.575 574.986 551.527 575.29 551.191 575.29 cv
550.863 575.29 550.808 575.018 550.808 574.762 cv
550.808 573.355 li
550.808 573.195 550.735 573.091 550.631 572.971 cv
550.456 572.779 li
550.392 572.715 550.28 572.667 550.136 572.667 cv
549.08 572.667 li
549.24 572.827 li
549.416 573.003 549.616 573.243 549.616 573.459 cv
549.616 574.362 li
549.616 574.522 549.592 574.706 549.384 574.938 cv
548.952 575.418 li
548.745 575.642 548.544 575.658 548.233 575.658 cv
547.065 575.658 li
cp
f
546.921 567.635 mo
549.416 567.635 li
549.68 567.635 549.944 567.691 549.944 568.019 cv
549.944 568.347 549.68 568.403 549.416 568.403 cv
546.85 568.403 li
546.722 568.403 546.482 568.387 546.482 568.587 cv
546.482 568.675 546.554 568.73 546.61 568.794 cv
546.921 569.13 li
549.416 569.13 li
549.68 569.13 549.944 569.187 549.944 569.514 cv
549.944 569.842 549.68 569.898 549.416 569.898 cv
546.178 569.898 li
545.906 569.898 545.634 569.826 545.634 569.498 cv
545.634 569.306 545.762 569.178 545.938 569.13 cv
545.89 569.066 li
545.738 568.867 545.634 568.747 545.634 568.483 cv
545.634 568.187 545.778 567.955 546.018 567.779 cv
545.954 567.715 li
545.714 567.476 545.634 567.379 545.634 567.043 cv
545.634 566.788 545.746 566.556 545.946 566.404 cv
546.194 566.212 546.418 566.228 546.714 566.22 cv
549.368 566.14 li
549.64 566.132 549.944 566.172 549.944 566.516 cv
549.944 566.828 549.68 566.892 549.424 566.899 cv
546.89 566.979 li
546.753 566.988 546.482 566.948 546.482 567.155 cv
546.482 567.268 546.674 567.411 546.746 567.476 cv
546.921 567.635 li
cp
f
548.017 562.859 mo
548.017 563.067 548.073 563.371 548.353 563.371 cv
548.864 563.371 li
549.12 563.371 549.176 563.059 549.176 562.875 cv
549.176 562.027 li
548.736 561.18 li
548.568 561.18 li
548.145 561.18 548.017 561.3 548.017 561.724 cv
548.017 562.859 li
cp
546.402 562.851 mo
546.402 563.075 546.354 563.379 546.018 563.379 cv
545.69 563.379 545.634 563.107 545.634 562.851 cv
545.634 561.795 li
545.634 561.396 545.674 561.108 545.978 560.804 cv
546.274 560.508 546.506 560.468 546.89 560.46 cv
549.496 560.38 li
549.72 560.372 549.944 560.484 549.944 560.74 cv
549.944 560.94 549.776 561.14 549.56 561.132 cv
549.832 561.66 li
549.944 561.875 549.944 561.883 549.944 562.131 cv
549.944 562.867 li
549.944 563.211 549.904 563.458 549.672 563.738 cv
549.408 564.058 549.128 564.138 548.729 564.138 cv
548.393 564.138 li
548.025 564.138 547.793 564.05 547.537 563.763 cv
547.305 563.499 547.25 563.203 547.25 562.867 cv
547.25 561.22 li
547.073 561.22 li
546.498 561.22 546.402 561.348 546.402 561.899 cv
546.402 562.851 li
cp
f
559.544 665.759 mo
559.544 666.358 559.304 666.702 558.784 666.958 cv
557.297 667.694 li
557.025 667.83 556.77 667.91 556.458 667.91 cv
556.106 667.91 555.89 667.847 555.57 667.687 cv
554.091 666.95 li
553.539 666.679 553.323 666.335 553.323 665.72 cv
553.323 664.36 li
553.323 664.185 553.419 663.96 553.723 663.96 cv
554.011 663.96 554.123 664.176 554.123 664.36 cv
554.123 665.695 li
554.123 666.039 554.155 666.095 554.459 666.247 cv
555.85 666.942 li
556.066 667.046 556.21 667.11 556.458 667.11 cv
556.682 667.11 556.817 667.038 557.009 666.942 cv
558.393 666.263 li
558.72 666.103 558.744 666.022 558.744 665.663 cv
558.744 664.36 li
558.744 664.185 558.84 663.96 559.144 663.96 cv
559.432 663.96 559.544 664.176 559.544 664.36 cv
559.544 665.759 li
cp
f
555.802 662.054 mo
555.522 662.054 555.234 662.022 555.234 661.671 cv
555.234 661.366 555.49 661.286 555.746 661.286 cv
556.058 661.286 li
555.562 660.687 li
555.386 660.472 555.234 660.247 555.234 660.007 cv
555.234 659.392 li
555.234 659.096 555.33 658.849 555.538 658.64 cv
555.794 658.384 556.058 658.296 556.41 658.296 cv
556.673 658.296 556.945 658.345 556.945 658.672 cv
556.945 658.952 556.722 659.063 556.474 659.063 cv
556.346 659.063 556.25 659.063 556.138 659.144 cv
556.002 659.239 556.002 659.424 556.002 659.607 cv
556.002 659.831 li
556.002 659.976 556.074 660.079 556.186 660.216 cv
557.073 661.286 li
559.016 661.286 li
559.28 661.286 559.544 661.343 559.544 661.671 cv
559.544 661.998 559.28 662.054 559.016 662.054 cv
555.802 662.054 li
cp
f
557.177 655.526 mo
557.177 653.304 li
556.713 653.304 li
556.569 653.304 556.45 653.296 556.354 653.399 cv
556.098 653.696 li
556.01 653.792 556.002 653.944 556.002 654.063 cv
556.002 654.712 li
556.002 654.855 556.002 654.976 556.09 655.103 cv
556.282 655.367 li
556.354 655.463 556.41 655.526 556.634 655.526 cv
557.177 655.526 li
cp
559.544 654.888 mo
559.544 655.207 559.544 655.335 559.336 655.575 cv
559.048 655.903 li
558.776 656.206 558.601 656.294 558.185 656.294 cv
556.706 656.294 li
556.298 656.294 556.058 656.238 555.786 655.919 cv
555.554 655.647 li
555.242 655.287 555.234 655.111 555.234 654.8 cv
555.234 654.096 li
555.234 653.72 555.274 653.544 555.514 653.248 cv
555.762 652.937 li
556.042 652.585 556.338 652.536 556.762 652.536 cv
557.377 652.536 li
557.817 652.536 557.945 652.608 557.945 653.064 cv
557.945 655.526 li
558.201 655.526 li
558.272 655.526 558.369 655.471 558.425 655.415 cv
558.632 655.224 li
558.744 655.119 558.776 654.968 558.776 654.712 cv
558.776 653.064 li
558.776 652.809 558.833 652.536 559.16 652.536 cv
559.496 652.536 559.544 652.841 559.544 653.064 cv
559.544 654.888 li
cp
f
557.617 649.255 mo
557.617 649.464 557.673 649.767 557.953 649.767 cv
558.464 649.767 li
558.72 649.767 558.776 649.455 558.776 649.271 cv
558.776 648.424 li
558.336 647.576 li
558.169 647.576 li
557.745 647.576 557.617 647.696 557.617 648.12 cv
557.617 649.255 li
cp
556.002 649.247 mo
556.002 649.472 555.954 649.775 555.618 649.775 cv
555.29 649.775 555.234 649.503 555.234 649.247 cv
555.234 648.192 li
555.234 647.792 555.274 647.505 555.578 647.2 cv
555.874 646.905 556.106 646.864 556.49 646.856 cv
559.096 646.776 li
559.32 646.769 559.544 646.881 559.544 647.137 cv
559.544 647.337 559.376 647.536 559.16 647.528 cv
559.432 648.056 li
559.544 648.272 559.544 648.28 559.544 648.528 cv
559.544 649.264 li
559.544 649.607 559.504 649.854 559.272 650.135 cv
559.008 650.454 558.729 650.534 558.329 650.534 cv
557.993 650.534 li
557.625 650.534 557.393 650.446 557.137 650.159 cv
556.905 649.896 556.85 649.599 556.85 649.264 cv
556.85 647.616 li
556.673 647.616 li
556.098 647.616 556.002 647.744 556.002 648.296 cv
556.002 649.247 li
cp
f
558.097 643.231 mo
558.528 643.231 558.776 643.248 558.776 642.72 cv
558.776 642.328 li
558.776 642.017 558.752 641.872 558.44 641.792 cv
558.257 641.745 558.129 641.601 558.129 641.409 cv
558.129 641.192 558.297 641.017 558.513 641.017 cv
558.729 641.017 559 641.153 559.152 641.28 cv
559.488 641.561 559.544 641.929 559.544 642.337 cv
559.544 642.728 li
559.544 643.112 559.456 643.448 559.16 643.72 cv
558.833 644.016 558.504 643.999 558.089 643.999 cv
556.002 643.999 li
556.002 644.247 li
556.002 644.472 555.954 644.774 555.618 644.774 cv
555.29 644.774 555.234 644.503 555.234 644.247 cv
555.234 643.999 li
554.451 643.999 li
554.187 643.999 553.923 643.943 553.923 643.616 cv
553.923 643.288 554.187 643.231 554.451 643.231 cv
555.234 643.231 li
555.234 641.944 li
555.234 641.688 555.29 641.417 555.618 641.417 cv
555.954 641.417 556.002 641.721 556.002 641.944 cv
556.002 643.231 li
558.097 643.231 li
cp
f
558.776 636.736 mo
558.776 636.161 li
558.776 635.905 558.833 635.633 559.16 635.633 cv
559.496 635.633 559.544 635.937 559.544 636.161 cv
559.544 638.112 li
559.544 638.335 559.496 638.64 559.16 638.64 cv
558.833 638.64 558.776 638.368 558.776 638.112 cv
558.776 637.504 li
556.002 637.504 li
556.002 638.112 li
556.002 638.335 555.954 638.64 555.618 638.64 cv
555.29 638.64 555.234 638.368 555.234 638.112 cv
555.234 637.304 li
555.234 636.864 555.314 636.736 555.77 636.736 cv
558.776 636.736 li
cp
553.683 637.896 mo
553.411 637.896 553.323 637.744 553.323 637.536 cv
553.323 637.097 li
553.323 636.888 553.411 636.736 553.683 636.736 cv
554.051 636.736 li
554.323 636.736 554.411 636.888 554.411 637.097 cv
554.411 637.536 li
554.411 637.744 554.323 637.896 554.051 637.896 cv
553.683 637.896 li
cp
f
556.194 630.265 mo
555.802 630.265 li
555.53 630.265 555.234 630.218 555.234 629.873 cv
555.234 629.602 555.45 629.497 555.698 629.497 cv
556.242 629.497 li
556.37 629.497 556.434 629.529 556.554 629.585 cv
559.064 630.729 li
559.224 630.801 559.544 630.937 559.544 631.128 cv
559.544 631.624 li
559.544 631.816 559.224 631.952 559.064 632.024 cv
556.554 633.167 li
556.434 633.224 556.37 633.255 556.242 633.255 cv
555.698 633.255 li
555.45 633.255 555.234 633.151 555.234 632.88 cv
555.234 632.536 555.53 632.487 555.802 632.487 cv
556.194 632.487 li
558.744 631.376 li
556.194 630.265 li
cp
f
557.177 626.728 mo
557.177 624.505 li
556.713 624.505 li
556.569 624.505 556.45 624.497 556.354 624.601 cv
556.098 624.897 li
556.01 624.993 556.002 625.145 556.002 625.265 cv
556.002 625.913 li
556.002 626.057 556.002 626.177 556.09 626.304 cv
556.282 626.568 li
556.354 626.664 556.41 626.728 556.634 626.728 cv
557.177 626.728 li
cp
559.544 626.089 mo
559.544 626.408 559.544 626.536 559.336 626.776 cv
559.048 627.104 li
558.776 627.407 558.601 627.495 558.185 627.495 cv
556.706 627.495 li
556.298 627.495 556.058 627.439 555.786 627.12 cv
555.554 626.849 li
555.242 626.488 555.234 626.313 555.234 626.001 cv
555.234 625.297 li
555.234 624.921 555.274 624.745 555.514 624.449 cv
555.762 624.138 li
556.042 623.786 556.338 623.738 556.762 623.738 cv
557.377 623.738 li
557.817 623.738 557.945 623.81 557.945 624.266 cv
557.945 626.728 li
558.201 626.728 li
558.272 626.728 558.369 626.672 558.425 626.616 cv
558.632 626.425 li
558.744 626.32 558.776 626.169 558.776 625.913 cv
558.776 624.266 li
558.776 624.01 558.833 623.738 559.16 623.738 cv
559.496 623.738 559.544 624.042 559.544 624.266 cv
559.544 626.089 li
cp
f
559.544 613.921 mo
559.544 614.521 559.304 614.865 558.784 615.121 cv
557.297 615.856 li
557.025 615.992 556.77 616.072 556.458 616.072 cv
556.106 616.072 555.89 616.008 555.57 615.848 cv
554.091 615.113 li
553.539 614.841 553.323 614.497 553.323 613.881 cv
553.323 612.522 li
553.323 612.346 553.419 612.122 553.723 612.122 cv
554.011 612.122 554.123 612.338 554.123 612.522 cv
554.123 613.857 li
554.123 614.201 554.155 614.257 554.459 614.409 cv
555.85 615.104 li
556.066 615.208 556.21 615.272 556.458 615.272 cv
556.682 615.272 556.817 615.201 557.009 615.104 cv
558.393 614.425 li
558.72 614.265 558.744 614.185 558.744 613.825 cv
558.744 612.522 li
558.744 612.346 558.84 612.122 559.144 612.122 cv
559.432 612.122 559.544 612.338 559.544 612.522 cv
559.544 613.921 li
cp
f
558.113 609.449 mo
558.272 609.449 558.376 609.393 558.568 609.169 cv
558.712 609.001 558.776 608.881 558.776 608.641 cv
558.776 608.034 li
558.776 607.794 558.712 607.674 558.568 607.506 cv
558.376 607.282 558.272 607.226 558.113 607.226 cv
556.666 607.226 li
556.506 607.226 556.402 607.282 556.21 607.506 cv
556.066 607.674 556.002 607.794 556.002 608.034 cv
556.002 608.641 li
556.002 608.881 556.066 609.001 556.21 609.169 cv
556.402 609.393 556.506 609.449 556.666 609.449 cv
558.113 609.449 li
cp
556.666 610.216 mo
556.154 610.216 555.978 610.112 555.666 609.729 cv
555.354 609.353 555.234 609.177 555.234 608.641 cv
555.234 608.034 li
555.234 607.498 555.354 607.322 555.666 606.946 cv
555.978 606.563 556.154 606.458 556.666 606.458 cv
558.113 606.458 li
558.616 606.458 558.809 606.586 559.144 606.986 cv
559.48 607.386 559.544 607.546 559.544 608.034 cv
559.544 608.641 li
559.544 609.129 559.48 609.289 559.144 609.688 cv
558.809 610.088 558.616 610.216 558.113 610.216 cv
556.666 610.216 li
cp
f
556.521 602.194 mo
559.016 602.194 li
559.28 602.194 559.544 602.25 559.544 602.578 cv
559.544 602.905 559.28 602.961 559.016 602.961 cv
556.45 602.961 li
556.322 602.961 556.082 602.945 556.082 603.146 cv
556.082 603.233 556.154 603.289 556.21 603.353 cv
556.521 603.689 li
559.016 603.689 li
559.28 603.689 559.544 603.745 559.544 604.073 cv
559.544 604.4 559.28 604.457 559.016 604.457 cv
555.778 604.457 li
555.506 604.457 555.234 604.385 555.234 604.057 cv
555.234 603.865 555.362 603.737 555.538 603.689 cv
555.49 603.625 li
555.338 603.425 555.234 603.305 555.234 603.042 cv
555.234 602.746 555.378 602.514 555.618 602.338 cv
555.554 602.274 li
555.314 602.034 555.234 601.938 555.234 601.602 cv
555.234 601.346 555.346 601.114 555.546 600.962 cv
555.794 600.771 556.018 600.787 556.313 600.779 cv
558.968 600.699 li
559.24 600.69 559.544 600.73 559.544 601.074 cv
559.544 601.386 559.28 601.45 559.024 601.458 cv
556.49 601.538 li
556.354 601.546 556.082 601.506 556.082 601.714 cv
556.082 601.826 556.274 601.97 556.346 602.034 cv
556.521 602.194 li
cp
f
556.521 596.434 mo
559.016 596.434 li
559.28 596.434 559.544 596.49 559.544 596.818 cv
559.544 597.146 559.28 597.202 559.016 597.202 cv
556.45 597.202 li
556.322 597.202 556.082 597.186 556.082 597.386 cv
556.082 597.474 556.154 597.529 556.21 597.593 cv
556.521 597.929 li
559.016 597.929 li
559.28 597.929 559.544 597.985 559.544 598.313 cv
559.544 598.641 559.28 598.697 559.016 598.697 cv
555.778 598.697 li
555.506 598.697 555.234 598.625 555.234 598.297 cv
555.234 598.105 555.362 597.977 555.538 597.929 cv
555.49 597.865 li
555.338 597.666 555.234 597.545 555.234 597.282 cv
555.234 596.986 555.378 596.754 555.618 596.578 cv
555.554 596.514 li
555.314 596.274 555.234 596.178 555.234 595.842 cv
555.234 595.586 555.346 595.354 555.546 595.203 cv
555.794 595.011 556.018 595.027 556.313 595.019 cv
558.968 594.939 li
559.24 594.931 559.544 594.971 559.544 595.314 cv
559.544 595.626 559.28 595.69 559.024 595.698 cv
556.49 595.778 li
556.354 595.787 556.082 595.747 556.082 595.954 cv
556.082 596.066 556.274 596.21 556.346 596.274 cv
556.521 596.434 li
cp
f
558.113 592.169 mo
558.272 592.169 558.376 592.113 558.568 591.89 cv
558.712 591.722 558.776 591.602 558.776 591.362 cv
558.776 590.754 li
558.776 590.515 558.712 590.395 558.568 590.227 cv
558.376 590.003 558.272 589.947 558.113 589.947 cv
556.666 589.947 li
556.506 589.947 556.402 590.003 556.21 590.227 cv
556.066 590.395 556.002 590.515 556.002 590.754 cv
556.002 591.362 li
556.002 591.602 556.066 591.722 556.21 591.89 cv
556.402 592.113 556.506 592.169 556.666 592.169 cv
558.113 592.169 li
cp
556.666 592.937 mo
556.154 592.937 555.978 592.833 555.666 592.449 cv
555.354 592.074 555.234 591.897 555.234 591.362 cv
555.234 590.754 li
555.234 590.219 555.354 590.042 555.666 589.667 cv
555.978 589.283 556.154 589.179 556.666 589.179 cv
558.113 589.179 li
558.616 589.179 558.809 589.307 559.144 589.707 cv
559.48 590.106 559.544 590.267 559.544 590.754 cv
559.544 591.362 li
559.544 591.85 559.48 592.01 559.144 592.409 cv
558.809 592.809 558.616 592.937 558.113 592.937 cv
556.666 592.937 li
cp
f
556.786 586.41 mo
559.016 586.41 li
559.28 586.41 559.544 586.466 559.544 586.793 cv
559.544 587.121 559.28 587.177 559.016 587.177 cv
555.802 587.177 li
555.522 587.177 555.234 587.146 555.234 586.793 cv
555.234 586.45 555.522 586.41 555.794 586.41 cv
555.882 586.41 li
555.898 586.41 li
555.49 585.786 li
555.362 585.586 555.234 585.37 555.234 585.123 cv
555.234 584.555 li
555.234 584.259 555.314 584.075 555.514 583.843 cv
555.81 583.5 556.138 583.515 556.554 583.5 cv
558.968 583.419 li
559.24 583.411 559.544 583.451 559.544 583.795 cv
559.544 584.107 559.28 584.171 559.024 584.179 cv
556.658 584.259 li
556.186 584.275 556.002 584.315 556.002 584.779 cv
556.002 585.035 li
556.002 585.114 556.026 585.194 556.074 585.274 cv
556.786 586.41 li
cp
f
556.002 580.106 mo
556.002 580.266 555.97 580.538 556.218 580.538 cv
556.346 580.538 556.394 580.442 556.441 580.33 cv
557.313 578.411 li
557.537 577.916 557.849 577.66 558.4 577.66 cv
559.176 577.66 559.544 578.188 559.544 578.923 cv
559.544 580.106 li
559.544 580.506 559.528 580.778 559.304 581.066 cv
559.192 581.209 559.048 581.417 558.856 581.417 cv
558.641 581.417 558.473 581.233 558.473 581.018 cv
558.473 580.898 558.513 580.81 558.608 580.722 cv
558.76 580.586 558.776 580.346 558.776 580.106 cv
558.776 579.067 li
558.776 578.795 558.8 578.427 558.353 578.427 cv
558.169 578.427 558.049 578.651 557.969 578.827 cv
557.146 580.634 li
556.953 581.058 556.706 581.306 556.21 581.306 cv
555.602 581.306 555.234 580.826 555.234 580.25 cv
555.234 578.939 li
555.234 578.515 555.258 578.339 555.498 578.051 cv
555.618 577.907 555.714 577.748 555.93 577.748 cv
556.146 577.748 556.313 577.932 556.313 578.139 cv
556.313 578.283 556.258 578.371 556.154 578.467 cv
556.018 578.595 556.002 578.731 556.002 578.939 cv
556.002 580.106 li
cp
f
558.776 567.619 mo
558.776 567.043 li
558.776 566.788 558.833 566.516 559.16 566.516 cv
559.496 566.516 559.544 566.82 559.544 567.043 cv
559.544 568.995 li
559.544 569.218 559.496 569.522 559.16 569.522 cv
558.833 569.522 558.776 569.25 558.776 568.995 cv
558.776 568.387 li
554.419 568.387 li
554.419 568.995 li
554.419 569.218 554.371 569.522 554.035 569.522 cv
553.707 569.522 553.651 569.25 553.651 568.995 cv
553.651 568.187 li
553.651 567.747 553.731 567.619 554.187 567.619 cv
558.776 567.619 li
cp
f
558.776 561.859 mo
558.776 561.284 li
558.776 561.028 558.833 560.756 559.16 560.756 cv
559.496 560.756 559.544 561.06 559.544 561.284 cv
559.544 563.235 li
559.544 563.458 559.496 563.763 559.16 563.763 cv
558.833 563.763 558.776 563.491 558.776 563.235 cv
558.776 562.627 li
556.002 562.627 li
556.002 563.235 li
556.002 563.458 555.954 563.763 555.618 563.763 cv
555.29 563.763 555.234 563.491 555.234 563.235 cv
555.234 562.427 li
555.234 561.987 555.314 561.859 555.77 561.859 cv
558.776 561.859 li
cp
553.683 563.019 mo
553.411 563.019 553.323 562.867 553.323 562.659 cv
553.323 562.219 li
553.323 562.011 553.411 561.859 553.683 561.859 cv
554.051 561.859 li
554.323 561.859 554.411 562.011 554.411 562.219 cv
554.411 562.659 li
554.411 562.867 554.323 563.019 554.051 563.019 cv
553.683 563.019 li
cp
f
557.018 558.378 mo
556.545 558.378 556.313 558.291 556.01 557.923 cv
555.538 557.355 li
555.242 556.995 555.234 556.812 555.234 556.364 cv
555.234 555.148 li
555.234 554.893 555.29 554.621 555.618 554.621 cv
555.954 554.621 556.002 554.924 556.002 555.148 cv
556.002 556.5 li
556.002 556.651 556.082 556.803 556.194 556.939 cv
556.585 557.403 li
556.682 557.523 556.762 557.611 556.914 557.611 cv
557.865 557.611 li
558.017 557.611 558.097 557.523 558.193 557.403 cv
558.584 556.939 li
558.696 556.803 558.776 556.651 558.776 556.5 cv
558.776 555.148 li
558.776 554.924 558.824 554.621 559.16 554.621 cv
559.488 554.621 559.544 554.893 559.544 555.148 cv
559.544 556.364 li
559.544 556.812 559.536 556.995 559.24 557.355 cv
558.769 557.923 li
558.464 558.291 558.232 558.378 557.761 558.378 cv
557.018 558.378 li
cp
f
557.177 551.851 mo
557.177 549.628 li
556.713 549.628 li
556.569 549.628 556.45 549.62 556.354 549.724 cv
556.098 550.02 li
556.01 550.116 556.002 550.268 556.002 550.388 cv
556.002 551.036 li
556.002 551.18 556.002 551.299 556.09 551.427 cv
556.282 551.691 li
556.354 551.787 556.41 551.851 556.634 551.851 cv
557.177 551.851 li
cp
559.544 551.211 mo
559.544 551.531 559.544 551.659 559.336 551.899 cv
559.048 552.227 li
558.776 552.531 558.601 552.619 558.185 552.619 cv
556.706 552.619 li
556.298 552.619 556.058 552.563 555.786 552.243 cv
555.554 551.971 li
555.242 551.611 555.234 551.436 555.234 551.124 cv
555.234 550.42 li
555.234 550.044 555.274 549.868 555.514 549.572 cv
555.762 549.261 li
556.042 548.909 556.338 548.861 556.762 548.861 cv
557.377 548.861 li
557.817 548.861 557.945 548.933 557.945 549.389 cv
557.945 551.851 li
558.201 551.851 li
558.272 551.851 558.369 551.795 558.425 551.739 cv
558.632 551.547 li
558.744 551.443 558.776 551.292 558.776 551.036 cv
558.776 549.389 li
558.776 549.133 558.833 548.861 559.16 548.861 cv
559.496 548.861 559.544 549.165 559.544 549.389 cv
559.544 551.211 li
cp
f
556.786 546.091 mo
559.016 546.091 li
559.28 546.091 559.544 546.147 559.544 546.475 cv
559.544 546.803 559.28 546.859 559.016 546.859 cv
555.802 546.859 li
555.522 546.859 555.234 546.827 555.234 546.475 cv
555.234 546.131 555.522 546.091 555.794 546.091 cv
555.882 546.091 li
555.898 546.091 li
555.49 545.468 li
555.362 545.268 555.234 545.052 555.234 544.804 cv
555.234 544.236 li
555.234 543.94 555.314 543.757 555.514 543.525 cv
555.81 543.181 556.138 543.197 556.554 543.181 cv
558.968 543.101 li
559.24 543.093 559.544 543.133 559.544 543.477 cv
559.544 543.789 559.28 543.853 559.024 543.86 cv
556.658 543.94 li
556.186 543.957 556.002 543.997 556.002 544.46 cv
556.002 544.716 li
556.002 544.796 556.026 544.876 556.074 544.956 cv
556.786 546.091 li
cp
f
556.002 539.788 mo
556.002 539.948 555.97 540.22 556.218 540.22 cv
556.346 540.22 556.394 540.124 556.441 540.012 cv
557.313 538.093 li
557.537 537.597 557.849 537.341 558.4 537.341 cv
559.176 537.341 559.544 537.869 559.544 538.604 cv
559.544 539.788 li
559.544 540.188 559.528 540.459 559.304 540.748 cv
559.192 540.891 559.048 541.099 558.856 541.099 cv
558.641 541.099 558.473 540.915 558.473 540.699 cv
558.473 540.58 558.513 540.492 558.608 540.403 cv
558.76 540.268 558.776 540.028 558.776 539.788 cv
558.776 538.749 li
558.776 538.477 558.8 538.109 558.353 538.109 cv
558.169 538.109 558.049 538.333 557.969 538.509 cv
557.146 540.315 li
556.953 540.739 556.706 540.987 556.21 540.987 cv
555.602 540.987 555.234 540.507 555.234 539.932 cv
555.234 538.621 li
555.234 538.197 555.258 538.021 555.498 537.733 cv
555.618 537.589 555.714 537.429 555.93 537.429 cv
556.146 537.429 556.313 537.613 556.313 537.821 cv
556.313 537.965 556.258 538.053 556.154 538.149 cv
556.018 538.277 556.002 538.413 556.002 538.621 cv
556.002 539.788 li
cp
f
557.177 534.572 mo
557.177 532.349 li
556.713 532.349 li
556.569 532.349 556.45 532.341 556.354 532.445 cv
556.098 532.741 li
556.01 532.837 556.002 532.989 556.002 533.108 cv
556.002 533.756 li
556.002 533.9 556.002 534.02 556.09 534.148 cv
556.282 534.412 li
556.354 534.508 556.41 534.572 556.634 534.572 cv
557.177 534.572 li
cp
559.544 533.932 mo
559.544 534.252 559.544 534.38 559.336 534.62 cv
559.048 534.948 li
558.776 535.251 558.601 535.339 558.185 535.339 cv
556.706 535.339 li
556.298 535.339 556.058 535.283 555.786 534.964 cv
555.554 534.692 li
555.242 534.332 555.234 534.156 555.234 533.844 cv
555.234 533.141 li
555.234 532.765 555.274 532.589 555.514 532.293 cv
555.762 531.981 li
556.042 531.629 556.338 531.582 556.762 531.582 cv
557.377 531.582 li
557.817 531.582 557.945 531.653 557.945 532.109 cv
557.945 534.572 li
558.201 534.572 li
558.272 534.572 558.369 534.516 558.425 534.46 cv
558.632 534.268 li
558.744 534.164 558.776 534.012 558.776 533.756 cv
558.776 532.109 li
558.776 531.854 558.833 531.582 559.16 531.582 cv
559.496 531.582 559.544 531.885 559.544 532.109 cv
559.544 533.932 li
cp
f
557.857 528.812 mo
558.073 528.812 558.345 528.812 558.44 528.692 cv
558.625 528.46 li
558.705 528.364 558.776 528.269 558.776 528.172 cv
558.776 527.629 li
558.776 527.533 558.712 527.397 558.584 527.253 cv
558.208 526.813 li
558.113 526.701 558.017 526.589 557.873 526.589 cv
556.905 526.589 li
556.762 526.589 556.666 526.701 556.569 526.813 cv
556.194 527.253 li
556.066 527.397 556.002 527.533 556.002 527.629 cv
556.002 528.172 li
556.002 528.269 556.074 528.364 556.154 528.46 cv
556.338 528.692 li
556.434 528.812 556.706 528.812 556.921 528.812 cv
557.857 528.812 li
cp
555.234 527.477 mo
555.234 527.213 555.378 526.997 555.658 526.717 cv
555.794 526.589 li
554.179 526.589 li
553.915 526.589 553.651 526.533 553.651 526.206 cv
553.651 525.878 553.915 525.822 554.179 525.822 cv
559.008 525.822 li
559.272 525.822 559.544 525.878 559.544 526.206 cv
559.544 526.509 559.288 526.589 559.032 526.589 cv
558.984 526.589 li
559.152 526.757 li
559.376 526.997 559.544 527.261 559.544 527.493 cv
559.544 528.236 li
559.544 528.492 559.368 528.78 559.272 528.892 cv
559.048 529.156 li
558.776 529.476 558.568 529.58 558.161 529.58 cv
556.618 529.58 li
556.21 529.58 556.002 529.476 555.73 529.156 cv
555.506 528.892 li
555.298 528.652 555.234 528.476 555.234 528.156 cv
555.234 527.477 li
cp
f
557.513 522.725 mo
557.513 522.933 557.401 523.124 557.113 523.124 cv
556.825 523.124 556.713 522.933 556.713 522.725 cv
556.713 521.237 li
556.713 521.093 556.713 521.005 556.825 520.886 cv
556.945 520.758 557.057 520.758 557.225 520.758 cv
559.144 520.758 li
559.4 520.758 559.544 520.87 559.544 521.157 cv
559.544 521.445 559.4 521.557 559.144 521.557 cv
557.513 521.557 li
557.513 522.725 li
cp
f
556.002 510.989 mo
556.002 511.149 555.97 511.421 556.218 511.421 cv
556.346 511.421 556.394 511.325 556.441 511.213 cv
557.313 509.294 li
557.537 508.798 557.849 508.542 558.4 508.542 cv
559.176 508.542 559.544 509.07 559.544 509.806 cv
559.544 510.989 li
559.544 511.389 559.528 511.661 559.304 511.949 cv
559.192 512.092 559.048 512.3 558.856 512.3 cv
558.641 512.3 558.473 512.116 558.473 511.9 cv
558.473 511.781 558.513 511.693 558.608 511.604 cv
558.76 511.469 558.776 511.229 558.776 510.989 cv
558.776 509.95 li
558.776 509.678 558.8 509.31 558.353 509.31 cv
558.169 509.31 558.049 509.534 557.969 509.71 cv
557.146 511.517 li
556.953 511.94 556.706 512.188 556.21 512.188 cv
555.602 512.188 555.234 511.708 555.234 511.133 cv
555.234 509.822 li
555.234 509.398 555.258 509.222 555.498 508.934 cv
555.618 508.79 555.714 508.63 555.93 508.63 cv
556.146 508.63 556.313 508.814 556.313 509.022 cv
556.313 509.166 556.258 509.254 556.154 509.35 cv
556.018 509.478 556.002 509.614 556.002 509.822 cv
556.002 510.989 li
cp
f
558.113 505.773 mo
558.272 505.773 558.376 505.717 558.568 505.493 cv
558.712 505.325 558.776 505.205 558.776 504.965 cv
558.776 504.358 li
558.776 504.118 558.712 503.998 558.568 503.83 cv
558.376 503.606 558.272 503.55 558.113 503.55 cv
556.666 503.55 li
556.506 503.55 556.402 503.606 556.21 503.83 cv
556.066 503.998 556.002 504.118 556.002 504.358 cv
556.002 504.965 li
556.002 505.205 556.066 505.325 556.21 505.493 cv
556.402 505.717 556.506 505.773 556.666 505.773 cv
558.113 505.773 li
cp
556.666 506.541 mo
556.154 506.541 555.978 506.437 555.666 506.053 cv
555.354 505.677 555.234 505.501 555.234 504.965 cv
555.234 504.358 li
555.234 503.822 555.354 503.646 555.666 503.271 cv
555.978 502.887 556.154 502.783 556.666 502.783 cv
558.113 502.783 li
558.616 502.783 558.809 502.911 559.144 503.311 cv
559.48 503.71 559.544 503.87 559.544 504.358 cv
559.544 504.965 li
559.544 505.453 559.48 505.613 559.144 506.013 cv
558.809 506.413 558.616 506.541 558.113 506.541 cv
556.666 506.541 li
cp
f
556.521 498.518 mo
559.016 498.518 li
559.28 498.518 559.544 498.574 559.544 498.902 cv
559.544 499.229 559.28 499.286 559.016 499.286 cv
556.45 499.286 li
556.322 499.286 556.082 499.27 556.082 499.47 cv
556.082 499.558 556.154 499.613 556.21 499.677 cv
556.521 500.013 li
559.016 500.013 li
559.28 500.013 559.544 500.069 559.544 500.397 cv
559.544 500.725 559.28 500.781 559.016 500.781 cv
555.778 500.781 li
555.506 500.781 555.234 500.709 555.234 500.381 cv
555.234 500.189 555.362 500.061 555.538 500.013 cv
555.49 499.949 li
555.338 499.75 555.234 499.629 555.234 499.366 cv
555.234 499.07 555.378 498.838 555.618 498.662 cv
555.554 498.598 li
555.314 498.358 555.234 498.262 555.234 497.926 cv
555.234 497.67 555.346 497.438 555.546 497.287 cv
555.794 497.095 556.018 497.111 556.313 497.103 cv
558.968 497.023 li
559.24 497.015 559.544 497.055 559.544 497.398 cv
559.544 497.71 559.28 497.774 559.024 497.782 cv
556.49 497.862 li
556.354 497.871 556.082 497.831 556.082 498.038 cv
556.082 498.15 556.274 498.294 556.346 498.358 cv
556.521 498.518 li
cp
f
557.177 494.253 mo
557.177 492.031 li
556.713 492.031 li
556.569 492.031 556.45 492.022 556.354 492.126 cv
556.098 492.422 li
556.01 492.519 556.002 492.67 556.002 492.79 cv
556.002 493.438 li
556.002 493.582 556.002 493.702 556.09 493.83 cv
556.282 494.094 li
556.354 494.189 556.41 494.253 556.634 494.253 cv
557.177 494.253 li
cp
559.544 493.614 mo
559.544 493.934 559.544 494.062 559.336 494.301 cv
559.048 494.629 li
558.776 494.933 558.601 495.021 558.185 495.021 cv
556.706 495.021 li
556.298 495.021 556.058 494.965 555.786 494.646 cv
555.554 494.374 li
555.242 494.014 555.234 493.838 555.234 493.526 cv
555.234 492.822 li
555.234 492.446 555.274 492.271 555.514 491.975 cv
555.762 491.663 li
556.042 491.311 556.338 491.263 556.762 491.263 cv
557.377 491.263 li
557.817 491.263 557.945 491.335 557.945 491.791 cv
557.945 494.253 li
558.201 494.253 li
558.272 494.253 558.369 494.197 558.425 494.142 cv
558.632 493.95 li
558.744 493.846 558.776 493.694 558.776 493.438 cv
558.776 491.791 li
558.776 491.535 558.833 491.263 559.16 491.263 cv
559.496 491.263 559.544 491.567 559.544 491.791 cv
559.544 493.614 li
cp
f
555.802 483.501 mo
555.522 483.501 555.234 483.47 555.234 483.118 cv
555.234 482.814 555.49 482.734 555.746 482.734 cv
556.058 482.734 li
555.562 482.134 li
555.386 481.918 555.234 481.694 555.234 481.455 cv
555.234 480.839 li
555.234 480.543 555.33 480.295 555.538 480.087 cv
555.794 479.832 556.058 479.744 556.41 479.744 cv
556.673 479.744 556.945 479.792 556.945 480.119 cv
556.945 480.399 556.722 480.511 556.474 480.511 cv
556.346 480.511 556.25 480.511 556.138 480.591 cv
556.002 480.687 556.002 480.871 556.002 481.055 cv
556.002 481.279 li
556.002 481.423 556.074 481.526 556.186 481.663 cv
557.073 482.734 li
559.016 482.734 li
559.28 482.734 559.544 482.79 559.544 483.118 cv
559.544 483.445 559.28 483.501 559.016 483.501 cv
555.802 483.501 li
cp
f
558.776 475.463 mo
558.776 474.887 li
558.776 474.631 558.833 474.359 559.16 474.359 cv
559.496 474.359 559.544 474.664 559.544 474.887 cv
559.544 476.838 li
559.544 477.062 559.496 477.366 559.16 477.366 cv
558.833 477.366 558.776 477.094 558.776 476.838 cv
558.776 476.23 li
556.002 476.23 li
556.002 476.838 li
556.002 477.062 555.954 477.366 555.618 477.366 cv
555.29 477.366 555.234 477.094 555.234 476.838 cv
555.234 476.031 li
555.234 475.591 555.314 475.463 555.77 475.463 cv
558.776 475.463 li
cp
553.683 476.623 mo
553.411 476.623 553.323 476.471 553.323 476.263 cv
553.323 475.823 li
553.323 475.615 553.411 475.463 553.683 475.463 cv
554.051 475.463 li
554.323 475.463 554.411 475.615 554.411 475.823 cv
554.411 476.263 li
554.411 476.471 554.323 476.623 554.051 476.623 cv
553.683 476.623 li
cp
f
557.721 471.214 mo
557.881 471.214 558.049 471.207 558.121 471.119 cv
558.376 470.799 li
558.425 470.743 558.449 470.671 558.449 470.575 cv
558.449 470.015 li
558.449 469.919 558.369 469.807 558.249 469.663 cv
557.761 469.072 li
557.713 469.016 557.609 468.992 557.505 468.992 cv
556.945 468.992 li
556.841 468.992 556.737 469.016 556.689 469.072 cv
556.202 469.663 li
556.082 469.807 556.002 469.919 556.002 470.015 cv
556.002 470.575 li
556.002 470.671 556.026 470.743 556.074 470.799 cv
556.33 471.119 li
556.402 471.207 556.569 471.214 556.729 471.214 cv
557.721 471.214 li
cp
556.666 471.982 mo
556.306 471.982 555.986 471.878 555.858 471.718 cv
555.418 471.158 li
555.29 470.999 555.234 470.878 555.234 470.679 cv
555.234 469.935 li
555.234 469.727 555.386 469.479 555.618 469.184 cv
555.77 468.992 li
555.682 468.992 li
555.442 468.992 555.234 468.864 555.234 468.6 cv
555.234 468.264 555.514 468.224 555.77 468.224 cv
559.52 468.224 li
560.216 468.224 560.359 468.28 560.631 468.6 cv
560.847 468.855 li
561.127 469.191 561.175 469.383 561.175 469.815 cv
561.175 471.086 li
561.175 471.311 561.127 471.614 560.791 471.614 cv
560.463 471.614 560.407 471.342 560.407 471.086 cv
560.407 469.679 li
560.407 469.52 560.335 469.416 560.231 469.295 cv
560.056 469.104 li
559.992 469.04 559.88 468.992 559.736 468.992 cv
558.681 468.992 li
558.84 469.151 li
559.016 469.328 559.216 469.567 559.216 469.783 cv
559.216 470.687 li
559.216 470.847 559.192 471.03 558.984 471.262 cv
558.553 471.742 li
558.345 471.966 558.145 471.982 557.833 471.982 cv
556.666 471.982 li
cp
f
556.002 464.08 mo
556.002 464.159 556.026 464.239 556.074 464.319 cv
556.786 465.455 li
559.016 465.455 li
559.28 465.455 559.544 465.511 559.544 465.838 cv
559.544 466.166 559.28 466.222 559.016 466.222 cv
554.179 466.222 li
553.915 466.222 553.651 466.166 553.651 465.838 cv
553.651 465.511 553.915 465.455 554.179 465.455 cv
555.898 465.455 li
555.49 464.831 li
555.362 464.631 555.234 464.399 555.234 464.144 cv
555.234 463.632 li
555.234 463.479 555.234 463.208 555.514 462.888 cv
555.81 462.544 556.138 462.56 556.554 462.544 cv
558.968 462.464 li
559.24 462.456 559.544 462.496 559.544 462.84 cv
559.544 463.152 559.28 463.216 559.024 463.224 cv
556.658 463.304 li
556.29 463.32 556.002 463.296 556.002 463.728 cv
556.002 464.08 li
cp
f
558.097 458.919 mo
558.528 458.919 558.776 458.936 558.776 458.408 cv
558.776 458.016 li
558.776 457.704 558.752 457.56 558.44 457.48 cv
558.257 457.432 558.129 457.288 558.129 457.096 cv
558.129 456.88 558.297 456.705 558.513 456.705 cv
558.729 456.705 559 456.84 559.152 456.968 cv
559.488 457.248 559.544 457.616 559.544 458.024 cv
559.544 458.416 li
559.544 458.799 559.456 459.135 559.16 459.407 cv
558.833 459.703 558.504 459.687 558.089 459.687 cv
556.002 459.687 li
556.002 459.935 li
556.002 460.159 555.954 460.462 555.618 460.462 cv
555.29 460.462 555.234 460.19 555.234 459.935 cv
555.234 459.687 li
554.451 459.687 li
554.187 459.687 553.923 459.631 553.923 459.303 cv
553.923 458.975 554.187 458.919 554.451 458.919 cv
555.234 458.919 li
555.234 457.632 li
555.234 457.376 555.29 457.104 555.618 457.104 cv
555.954 457.104 556.002 457.408 556.002 457.632 cv
556.002 458.919 li
558.097 458.919 li
cp
f
556.002 453.392 mo
556.002 453.551 555.97 453.823 556.218 453.823 cv
556.346 453.823 556.394 453.727 556.441 453.615 cv
557.313 451.696 li
557.537 451.201 557.849 450.945 558.4 450.945 cv
559.176 450.945 559.544 451.473 559.544 452.208 cv
559.544 453.392 li
559.544 453.791 559.528 454.063 559.304 454.351 cv
559.192 454.495 559.048 454.703 558.856 454.703 cv
558.641 454.703 558.473 454.519 558.473 454.303 cv
558.473 454.183 558.513 454.095 558.608 454.007 cv
558.76 453.871 558.776 453.631 558.776 453.392 cv
558.776 452.352 li
558.776 452.08 558.8 451.712 558.353 451.712 cv
558.169 451.712 558.049 451.936 557.969 452.112 cv
557.146 453.919 li
556.953 454.343 556.706 454.591 556.21 454.591 cv
555.602 454.591 555.234 454.111 555.234 453.535 cv
555.234 452.224 li
555.234 451.8 555.258 451.625 555.498 451.336 cv
555.618 451.192 555.714 451.033 555.93 451.033 cv
556.146 451.033 556.313 451.217 556.313 451.424 cv
556.313 451.568 556.258 451.656 556.154 451.752 cv
556.018 451.88 556.002 452.016 556.002 452.224 cv
556.002 453.392 li
cp
f
555.802 443.183 mo
555.522 443.183 555.234 443.151 555.234 442.799 cv
555.234 442.496 555.49 442.416 555.746 442.416 cv
556.058 442.416 li
555.562 441.816 li
555.386 441.6 555.234 441.376 555.234 441.136 cv
555.234 440.521 li
555.234 440.225 555.33 439.977 555.538 439.769 cv
555.794 439.513 556.058 439.425 556.41 439.425 cv
556.673 439.425 556.945 439.473 556.945 439.801 cv
556.945 440.081 556.722 440.193 556.474 440.193 cv
556.346 440.193 556.25 440.193 556.138 440.273 cv
556.002 440.369 556.002 440.553 556.002 440.736 cv
556.002 440.96 li
556.002 441.104 556.074 441.208 556.186 441.344 cv
557.073 442.416 li
559.016 442.416 li
559.28 442.416 559.544 442.472 559.544 442.799 cv
559.544 443.127 559.28 443.183 559.016 443.183 cv
555.802 443.183 li
cp
f
557.177 436.656 mo
557.177 434.433 li
556.713 434.433 li
556.569 434.433 556.45 434.425 556.354 434.529 cv
556.098 434.825 li
556.01 434.921 556.002 435.073 556.002 435.192 cv
556.002 435.84 li
556.002 435.984 556.002 436.104 556.09 436.232 cv
556.282 436.496 li
556.354 436.592 556.41 436.656 556.634 436.656 cv
557.177 436.656 li
cp
559.544 436.016 mo
559.544 436.336 559.544 436.464 559.336 436.704 cv
559.048 437.032 li
558.776 437.335 558.601 437.423 558.185 437.423 cv
556.706 437.423 li
556.298 437.423 556.058 437.367 555.786 437.048 cv
555.554 436.776 li
555.242 436.416 555.234 436.24 555.234 435.928 cv
555.234 435.225 li
555.234 434.849 555.274 434.673 555.514 434.377 cv
555.762 434.065 li
556.042 433.713 556.338 433.666 556.762 433.666 cv
557.377 433.666 li
557.817 433.666 557.945 433.737 557.945 434.193 cv
557.945 436.656 li
558.201 436.656 li
558.272 436.656 558.369 436.6 558.425 436.544 cv
558.632 436.352 li
558.744 436.248 558.776 436.096 558.776 435.84 cv
558.776 434.193 li
558.776 433.938 558.833 433.666 559.16 433.666 cv
559.496 433.666 559.544 433.969 559.544 434.193 cv
559.544 436.016 li
cp
f
556.002 430.353 mo
556.002 430.512 555.97 430.784 556.218 430.784 cv
556.346 430.784 556.394 430.688 556.441 430.576 cv
557.313 428.657 li
557.537 428.162 557.849 427.906 558.4 427.906 cv
559.176 427.906 559.544 428.434 559.544 429.169 cv
559.544 430.353 li
559.544 430.752 559.528 431.024 559.304 431.312 cv
559.192 431.456 559.048 431.664 558.856 431.664 cv
558.641 431.664 558.473 431.479 558.473 431.264 cv
558.473 431.144 558.513 431.056 558.608 430.968 cv
558.76 430.832 558.776 430.592 558.776 430.353 cv
558.776 429.313 li
558.776 429.041 558.8 428.673 558.353 428.673 cv
558.169 428.673 558.049 428.897 557.969 429.073 cv
557.146 430.88 li
556.953 431.304 556.706 431.552 556.21 431.552 cv
555.602 431.552 555.234 431.072 555.234 430.496 cv
555.234 429.185 li
555.234 428.761 555.258 428.585 555.498 428.297 cv
555.618 428.153 555.714 427.994 555.93 427.994 cv
556.146 427.994 556.313 428.178 556.313 428.385 cv
556.313 428.529 556.258 428.617 556.154 428.713 cv
556.018 428.841 556.002 428.977 556.002 429.185 cv
556.002 430.353 li
cp
f
557.177 425.136 mo
557.177 422.914 li
556.713 422.914 li
556.569 422.914 556.45 422.905 556.354 423.009 cv
556.098 423.305 li
556.01 423.401 556.002 423.553 556.002 423.673 cv
556.002 424.321 li
556.002 424.465 556.002 424.584 556.09 424.712 cv
556.282 424.977 li
556.354 425.072 556.41 425.136 556.634 425.136 cv
557.177 425.136 li
cp
559.544 424.497 mo
559.544 424.816 559.544 424.944 559.336 425.184 cv
559.048 425.512 li
558.776 425.816 558.601 425.904 558.185 425.904 cv
556.706 425.904 li
556.298 425.904 556.058 425.848 555.786 425.528 cv
555.554 425.256 li
555.242 424.896 555.234 424.721 555.234 424.409 cv
555.234 423.705 li
555.234 423.329 555.274 423.153 555.514 422.857 cv
555.762 422.546 li
556.042 422.194 556.338 422.146 556.762 422.146 cv
557.377 422.146 li
557.817 422.146 557.945 422.218 557.945 422.674 cv
557.945 425.136 li
558.201 425.136 li
558.272 425.136 558.369 425.08 558.425 425.024 cv
558.632 424.833 li
558.744 424.729 558.776 424.577 558.776 424.321 cv
558.776 422.674 li
558.776 422.418 558.833 422.146 559.16 422.146 cv
559.496 422.146 559.544 422.45 559.544 422.674 cv
559.544 424.497 li
cp
f
555.802 420.144 mo
555.522 420.144 555.234 420.112 555.234 419.76 cv
555.234 419.457 555.49 419.376 555.746 419.376 cv
556.058 419.376 li
555.562 418.777 li
555.386 418.561 555.234 418.337 555.234 418.097 cv
555.234 417.481 li
555.234 417.186 555.33 416.938 555.538 416.73 cv
555.794 416.474 556.058 416.386 556.41 416.386 cv
556.673 416.386 556.945 416.434 556.945 416.762 cv
556.945 417.042 556.722 417.154 556.474 417.154 cv
556.346 417.154 556.25 417.154 556.138 417.234 cv
556.002 417.33 556.002 417.514 556.002 417.697 cv
556.002 417.921 li
556.002 418.065 556.074 418.169 556.186 418.305 cv
557.073 419.376 li
559.016 419.376 li
559.28 419.376 559.544 419.433 559.544 419.76 cv
559.544 420.088 559.28 420.144 559.016 420.144 cv
555.802 420.144 li
cp
f
556.194 411.394 mo
555.802 411.394 li
555.53 411.394 555.234 411.346 555.234 411.002 cv
555.234 410.73 555.45 410.626 555.698 410.626 cv
556.242 410.626 li
556.37 410.626 556.434 410.658 556.554 410.714 cv
559.064 411.858 li
559.224 411.93 559.544 412.065 559.544 412.257 cv
559.544 412.753 li
559.544 412.945 559.224 413.081 559.064 413.153 cv
556.554 414.296 li
556.434 414.353 556.37 414.384 556.242 414.384 cv
555.698 414.384 li
555.45 414.384 555.234 414.28 555.234 414.009 cv
555.234 413.665 555.53 413.617 555.802 413.617 cv
556.194 413.617 li
558.744 412.505 li
556.194 411.394 li
cp
f
557.177 407.857 mo
557.177 405.634 li
556.713 405.634 li
556.569 405.634 556.45 405.626 556.354 405.73 cv
556.098 406.026 li
556.01 406.122 556.002 406.274 556.002 406.394 cv
556.002 407.042 li
556.002 407.186 556.002 407.305 556.09 407.433 cv
556.282 407.697 li
556.354 407.793 556.41 407.857 556.634 407.857 cv
557.177 407.857 li
cp
559.544 407.217 mo
559.544 407.537 559.544 407.665 559.336 407.905 cv
559.048 408.233 li
558.776 408.537 558.601 408.625 558.185 408.625 cv
556.706 408.625 li
556.298 408.625 556.058 408.568 555.786 408.249 cv
555.554 407.977 li
555.242 407.617 555.234 407.441 555.234 407.129 cv
555.234 406.426 li
555.234 406.05 555.274 405.874 555.514 405.578 cv
555.762 405.267 li
556.042 404.915 556.338 404.867 556.762 404.867 cv
557.377 404.867 li
557.817 404.867 557.945 404.938 557.945 405.395 cv
557.945 407.857 li
558.201 407.857 li
558.272 407.857 558.369 407.801 558.425 407.745 cv
558.632 407.553 li
558.744 407.449 558.776 407.297 558.776 407.042 cv
558.776 405.395 li
558.776 405.139 558.833 404.867 559.16 404.867 cv
559.496 404.867 559.544 405.17 559.544 405.395 cv
559.544 407.217 li
cp
f
557.857 402.097 mo
558.073 402.097 558.345 402.097 558.44 401.978 cv
558.625 401.746 li
558.705 401.649 558.776 401.554 558.776 401.458 cv
558.776 400.914 li
558.776 400.818 558.712 400.682 558.584 400.538 cv
558.208 400.098 li
558.113 399.986 558.017 399.875 557.873 399.875 cv
556.905 399.875 li
556.762 399.875 556.666 399.986 556.569 400.098 cv
556.194 400.538 li
556.066 400.682 556.002 400.818 556.002 400.914 cv
556.002 401.458 li
556.002 401.554 556.074 401.649 556.154 401.746 cv
556.338 401.978 li
556.434 402.097 556.706 402.097 556.921 402.097 cv
557.857 402.097 li
cp
555.234 400.762 mo
555.234 400.498 555.378 400.282 555.658 400.002 cv
555.794 399.875 li
554.179 399.875 li
553.915 399.875 553.651 399.818 553.651 399.491 cv
553.651 399.163 553.915 399.107 554.179 399.107 cv
559.008 399.107 li
559.272 399.107 559.544 399.163 559.544 399.491 cv
559.544 399.794 559.288 399.875 559.032 399.875 cv
558.984 399.875 li
559.152 400.042 li
559.376 400.282 559.544 400.546 559.544 400.778 cv
559.544 401.521 li
559.544 401.777 559.368 402.065 559.272 402.177 cv
559.048 402.441 li
558.776 402.761 558.568 402.865 558.161 402.865 cv
556.618 402.865 li
556.21 402.865 556.002 402.761 555.73 402.441 cv
555.506 402.177 li
555.298 401.938 555.234 401.761 555.234 401.441 cv
555.234 400.762 li
cp
f
565.602 665.671 mo
565.602 665.751 565.626 665.831 565.674 665.911 cv
566.386 667.046 li
568.616 667.046 li
568.88 667.046 569.144 667.103 569.144 667.431 cv
569.144 667.758 568.88 667.813 568.616 667.813 cv
563.779 667.813 li
563.515 667.813 563.251 667.758 563.251 667.431 cv
563.251 667.103 563.515 667.046 563.779 667.046 cv
565.498 667.046 li
565.09 666.423 li
564.962 666.223 564.834 665.991 564.834 665.735 cv
564.834 665.224 li
564.834 665.071 564.834 664.8 565.114 664.479 cv
565.41 664.136 565.738 664.151 566.154 664.136 cv
568.568 664.056 li
568.84 664.048 569.144 664.088 569.144 664.432 cv
569.144 664.743 568.88 664.808 568.625 664.815 cv
566.258 664.896 li
565.89 664.911 565.602 664.888 565.602 665.319 cv
565.602 665.671 li
cp
f
567.697 660.511 mo
568.128 660.511 568.376 660.527 568.376 659.999 cv
568.376 659.607 li
568.376 659.296 568.353 659.151 568.041 659.071 cv
567.857 659.024 567.729 658.88 567.729 658.688 cv
567.729 658.472 567.896 658.296 568.113 658.296 cv
568.329 658.296 568.601 658.433 568.752 658.56 cv
569.088 658.84 569.144 659.208 569.144 659.616 cv
569.144 660.007 li
569.144 660.392 569.056 660.728 568.76 660.999 cv
568.433 661.295 568.104 661.278 567.689 661.278 cv
565.602 661.278 li
565.602 661.526 li
565.602 661.751 565.554 662.054 565.218 662.054 cv
564.891 662.054 564.834 661.782 564.834 661.526 cv
564.834 661.278 li
564.051 661.278 li
563.787 661.278 563.523 661.223 563.523 660.896 cv
563.523 660.567 563.787 660.511 564.051 660.511 cv
564.834 660.511 li
564.834 659.224 li
564.834 658.968 564.891 658.696 565.218 658.696 cv
565.554 658.696 565.602 659 565.602 659.224 cv
565.602 660.511 li
567.697 660.511 li
cp
f
567.697 654.751 mo
568.128 654.751 568.376 654.768 568.376 654.239 cv
568.376 653.848 li
568.376 653.536 568.353 653.392 568.041 653.312 cv
567.857 653.265 567.729 653.12 567.729 652.929 cv
567.729 652.712 567.896 652.536 568.113 652.536 cv
568.329 652.536 568.601 652.673 568.752 652.8 cv
569.088 653.08 569.144 653.448 569.144 653.856 cv
569.144 654.247 li
569.144 654.632 569.056 654.968 568.76 655.239 cv
568.433 655.535 568.104 655.519 567.689 655.519 cv
565.602 655.519 li
565.602 655.767 li
565.602 655.991 565.554 656.294 565.218 656.294 cv
564.891 656.294 564.834 656.022 564.834 655.767 cv
564.834 655.519 li
564.051 655.519 li
563.787 655.519 563.523 655.463 563.523 655.136 cv
563.523 654.808 563.787 654.751 564.051 654.751 cv
564.834 654.751 li
564.834 653.464 li
564.834 653.208 564.891 652.937 565.218 652.937 cv
565.554 652.937 565.602 653.24 565.602 653.464 cv
565.602 654.751 li
567.697 654.751 li
cp
f
566.554 647.544 mo
566.41 647.544 566.322 647.585 566.218 647.704 cv
565.738 648.28 li
565.674 648.353 565.602 648.44 565.602 648.544 cv
565.602 648.743 li
565.602 648.855 565.746 648.991 565.826 649.071 cv
566.282 649.552 li
566.434 649.711 566.521 649.767 566.689 649.767 cv
567.441 649.767 li
567.553 649.767 567.697 649.735 567.769 649.655 cv
568.32 649.071 li
568.433 648.96 568.536 648.84 568.536 648.743 cv
568.536 648.544 li
568.536 648.44 568.464 648.353 568.4 648.28 cv
567.921 647.704 li
567.817 647.585 567.729 647.544 567.585 647.544 cv
566.554 647.544 li
cp
567.481 646.776 mo
568.033 646.776 568.241 646.817 568.592 647.265 cv
568.96 647.729 li
569.088 647.888 569.304 648.136 569.304 648.344 cv
569.304 648.864 li
569.304 649.208 569.08 649.367 568.848 649.615 cv
568.704 649.767 li
570.248 649.767 li
570.511 649.767 570.775 649.823 570.775 650.151 cv
570.775 650.479 570.511 650.534 570.248 650.534 cv
565.402 650.534 li
565.13 650.534 564.834 650.503 564.834 650.151 cv
564.834 649.839 565.082 649.767 565.338 649.767 cv
565.434 649.767 li
565.298 649.615 li
565.122 649.415 564.834 649.111 564.834 648.896 cv
564.834 648.368 li
564.834 648.185 565.026 647.937 565.186 647.729 cv
565.546 647.265 li
565.898 646.817 566.114 646.776 566.657 646.776 cv
567.481 646.776 li
cp
f
568.128 643.184 mo
568.128 643.36 568.128 643.487 567.977 643.6 cv
567.857 643.688 567.769 643.688 567.617 643.688 cv
567.169 643.688 li
567.017 643.688 566.929 643.688 566.81 643.6 cv
566.657 643.487 566.657 643.36 566.657 643.184 cv
566.657 642.608 li
566.657 642.433 566.657 642.304 566.81 642.192 cv
566.929 642.104 567.017 642.104 567.169 642.104 cv
567.617 642.104 li
567.769 642.104 567.857 642.104 567.977 642.192 cv
568.128 642.304 568.128 642.433 568.128 642.608 cv
568.128 643.184 li
cp
565.41 643.184 mo
565.41 643.36 565.41 643.487 565.258 643.6 cv
565.138 643.688 565.05 643.688 564.898 643.688 cv
564.451 643.688 li
564.299 643.688 564.211 643.688 564.091 643.6 cv
563.939 643.487 563.939 643.36 563.939 643.184 cv
563.939 642.608 li
563.939 642.433 563.939 642.304 564.091 642.192 cv
564.211 642.104 564.299 642.104 564.451 642.104 cv
564.898 642.104 li
565.05 642.104 565.138 642.104 565.258 642.192 cv
565.41 642.304 565.41 642.433 565.41 642.608 cv
565.41 643.184 li
cp
f
568.864 638.319 mo
569.032 638.415 569.144 638.512 569.144 638.712 cv
569.144 638.911 568.976 639.111 568.768 639.111 cv
568.616 639.111 568.48 639.015 568.353 638.935 cv
563.228 635.944 li
563.067 635.849 562.923 635.753 562.923 635.554 cv
562.923 635.345 563.091 635.161 563.299 635.161 cv
563.427 635.161 563.523 635.201 563.611 635.249 cv
568.864 638.319 li
cp
f
568.864 632.56 mo
569.032 632.655 569.144 632.752 569.144 632.952 cv
569.144 633.151 568.976 633.352 568.768 633.352 cv
568.616 633.352 568.48 633.255 568.353 633.175 cv
563.228 630.185 li
563.067 630.089 562.923 629.993 562.923 629.794 cv
562.923 629.585 563.091 629.401 563.299 629.401 cv
563.427 629.401 563.523 629.441 563.611 629.489 cv
568.864 632.56 li
cp
f
566.386 626.728 mo
568.616 626.728 li
568.88 626.728 569.144 626.784 569.144 627.112 cv
569.144 627.439 568.88 627.495 568.616 627.495 cv
565.402 627.495 li
565.122 627.495 564.834 627.464 564.834 627.112 cv
564.834 626.769 565.122 626.728 565.394 626.728 cv
565.482 626.728 li
565.498 626.728 li
565.09 626.104 li
564.962 625.904 564.834 625.688 564.834 625.441 cv
564.834 624.873 li
564.834 624.577 564.915 624.394 565.114 624.162 cv
565.41 623.818 565.738 623.833 566.154 623.818 cv
568.568 623.738 li
568.84 623.729 569.144 623.77 569.144 624.113 cv
569.144 624.425 568.88 624.489 568.625 624.497 cv
566.258 624.577 li
565.786 624.593 565.602 624.633 565.602 625.097 cv
565.602 625.353 li
565.602 625.433 565.626 625.513 565.674 625.593 cv
566.386 626.728 li
cp
f
566.777 620.968 mo
566.777 618.746 li
566.313 618.746 li
566.17 618.746 566.05 618.737 565.954 618.841 cv
565.698 619.137 li
565.61 619.233 565.602 619.385 565.602 619.505 cv
565.602 620.153 li
565.602 620.297 565.602 620.417 565.69 620.544 cv
565.882 620.809 li
565.954 620.904 566.01 620.968 566.233 620.968 cv
566.777 620.968 li
cp
569.144 620.329 mo
569.144 620.648 569.144 620.776 568.936 621.016 cv
568.648 621.344 li
568.376 621.648 568.201 621.736 567.785 621.736 cv
566.306 621.736 li
565.898 621.736 565.658 621.68 565.386 621.36 cv
565.154 621.088 li
564.842 620.729 564.834 620.553 564.834 620.241 cv
564.834 619.537 li
564.834 619.161 564.875 618.985 565.114 618.689 cv
565.362 618.378 li
565.642 618.026 565.938 617.978 566.361 617.978 cv
566.977 617.978 li
567.417 617.978 567.545 618.05 567.545 618.506 cv
567.545 620.968 li
567.801 620.968 li
567.873 620.968 567.969 620.912 568.024 620.856 cv
568.232 620.665 li
568.345 620.561 568.376 620.409 568.376 620.153 cv
568.376 618.506 li
568.376 618.25 568.433 617.978 568.76 617.978 cv
569.096 617.978 569.144 618.282 569.144 618.506 cv
569.144 620.329 li
cp
f
567.697 614.433 mo
568.128 614.433 568.376 614.449 568.376 613.921 cv
568.376 613.529 li
568.376 613.218 568.353 613.074 568.041 612.994 cv
567.857 612.946 567.729 612.802 567.729 612.61 cv
567.729 612.394 567.896 612.218 568.113 612.218 cv
568.329 612.218 568.601 612.354 568.752 612.482 cv
569.088 612.762 569.144 613.13 569.144 613.538 cv
569.144 613.929 li
569.144 614.313 569.056 614.649 568.76 614.921 cv
568.433 615.217 568.104 615.201 567.689 615.201 cv
565.602 615.201 li
565.602 615.448 li
565.602 615.672 565.554 615.976 565.218 615.976 cv
564.891 615.976 564.834 615.704 564.834 615.448 cv
564.834 615.201 li
564.051 615.201 li
563.787 615.201 563.523 615.145 563.523 614.817 cv
563.523 614.489 563.787 614.433 564.051 614.433 cv
564.834 614.433 li
564.834 613.146 li
564.834 612.89 564.891 612.618 565.218 612.618 cv
565.554 612.618 565.602 612.922 565.602 613.146 cv
565.602 614.433 li
567.697 614.433 li
cp
f
566.386 609.449 mo
568.616 609.449 li
568.88 609.449 569.144 609.505 569.144 609.833 cv
569.144 610.16 568.88 610.216 568.616 610.216 cv
565.402 610.216 li
565.122 610.216 564.834 610.185 564.834 609.833 cv
564.834 609.489 565.122 609.449 565.394 609.449 cv
565.482 609.449 li
565.498 609.449 li
565.09 608.825 li
564.962 608.625 564.834 608.409 564.834 608.162 cv
564.834 607.594 li
564.834 607.298 564.915 607.114 565.114 606.882 cv
565.41 606.539 565.738 606.554 566.154 606.539 cv
568.568 606.458 li
568.84 606.45 569.144 606.49 569.144 606.834 cv
569.144 607.146 568.88 607.21 568.625 607.218 cv
566.258 607.298 li
565.786 607.314 565.602 607.354 565.602 607.818 cv
565.602 608.074 li
565.602 608.153 565.626 608.233 565.674 608.313 cv
566.386 609.449 li
cp
f
568.376 602.178 mo
568.376 601.602 li
568.376 601.346 568.433 601.074 568.76 601.074 cv
569.096 601.074 569.144 601.378 569.144 601.602 cv
569.144 603.553 li
569.144 603.777 569.096 604.081 568.76 604.081 cv
568.433 604.081 568.376 603.809 568.376 603.553 cv
568.376 602.945 li
565.602 602.945 li
565.602 603.553 li
565.602 603.777 565.554 604.081 565.218 604.081 cv
564.891 604.081 564.834 603.809 564.834 603.553 cv
564.834 602.746 li
564.834 602.306 564.915 602.178 565.37 602.178 cv
568.376 602.178 li
cp
563.283 603.337 mo
563.011 603.337 562.923 603.186 562.923 602.978 cv
562.923 602.538 li
562.923 602.33 563.011 602.178 563.283 602.178 cv
563.651 602.178 li
563.923 602.178 564.011 602.33 564.011 602.538 cv
564.011 602.978 li
564.011 603.186 563.923 603.337 563.651 603.337 cv
563.283 603.337 li
cp
f
566.386 597.929 mo
568.616 597.929 li
568.88 597.929 569.144 597.985 569.144 598.313 cv
569.144 598.641 568.88 598.697 568.616 598.697 cv
565.402 598.697 li
565.122 598.697 564.834 598.665 564.834 598.313 cv
564.834 597.969 565.122 597.929 565.394 597.929 cv
565.482 597.929 li
565.498 597.929 li
565.09 597.306 li
564.962 597.105 564.834 596.89 564.834 596.642 cv
564.834 596.074 li
564.834 595.778 564.915 595.595 565.114 595.363 cv
565.41 595.019 565.738 595.035 566.154 595.019 cv
568.568 594.939 li
568.84 594.931 569.144 594.971 569.144 595.314 cv
569.144 595.626 568.88 595.69 568.625 595.698 cv
566.258 595.778 li
565.786 595.794 565.602 595.834 565.602 596.298 cv
565.602 596.554 li
565.602 596.634 565.626 596.714 565.674 596.794 cv
566.386 597.929 li
cp
f
569.36 589.555 mo
569.784 589.555 570.111 589.555 570.439 589.867 cv
570.775 590.179 570.775 590.506 570.775 590.762 cv
570.775 591.402 li
570.775 591.618 570.751 591.874 570.559 592.122 cv
570.392 592.345 570.047 592.562 569.76 592.562 cv
569.552 592.562 569.384 592.385 569.384 592.186 cv
569.384 591.978 569.496 591.85 569.688 591.794 cv
569.976 591.714 570.008 591.586 570.008 591.298 cv
570.008 590.794 li
570.008 590.307 569.808 590.322 569.36 590.322 cv
565.602 590.322 li
565.602 591.25 li
565.602 591.474 565.554 591.778 565.218 591.778 cv
564.891 591.778 564.834 591.506 564.834 591.25 cv
564.834 590.123 li
564.834 589.683 564.915 589.555 565.37 589.555 cv
569.36 589.555 li
cp
563.283 590.714 mo
563.011 590.714 562.923 590.563 562.923 590.354 cv
562.923 589.915 li
562.923 589.707 563.011 589.555 563.283 589.555 cv
563.651 589.555 li
563.923 589.555 564.011 589.707 564.011 589.915 cv
564.011 590.354 li
564.011 590.563 563.923 590.714 563.651 590.714 cv
563.283 590.714 li
cp
f
567.217 585.898 mo
567.217 586.106 567.273 586.41 567.553 586.41 cv
568.064 586.41 li
568.32 586.41 568.376 586.098 568.376 585.914 cv
568.376 585.066 li
567.937 584.219 li
567.769 584.219 li
567.345 584.219 567.217 584.339 567.217 584.763 cv
567.217 585.898 li
cp
565.602 585.89 mo
565.602 586.114 565.554 586.418 565.218 586.418 cv
564.891 586.418 564.834 586.146 564.834 585.89 cv
564.834 584.834 li
564.834 584.435 564.875 584.147 565.178 583.843 cv
565.474 583.547 565.706 583.507 566.09 583.5 cv
568.696 583.419 li
568.92 583.411 569.144 583.523 569.144 583.779 cv
569.144 583.979 568.976 584.179 568.76 584.171 cv
569.032 584.699 li
569.144 584.915 569.144 584.922 569.144 585.17 cv
569.144 585.906 li
569.144 586.25 569.104 586.498 568.872 586.777 cv
568.608 587.097 568.329 587.177 567.929 587.177 cv
567.593 587.177 li
567.225 587.177 566.993 587.089 566.737 586.802 cv
566.505 586.538 566.45 586.242 566.45 585.906 cv
566.45 584.259 li
566.273 584.259 li
565.698 584.259 565.602 584.387 565.602 584.938 cv
565.602 585.89 li
cp
f
568.121 579.826 mo
568.121 580.002 568.121 580.13 567.969 580.242 cv
567.849 580.33 567.761 580.33 567.609 580.33 cv
567.161 580.33 li
567.009 580.33 566.921 580.33 566.801 580.242 cv
566.649 580.13 566.649 580.002 566.649 579.826 cv
566.649 579.251 li
566.649 579.075 566.649 578.947 566.801 578.835 cv
566.921 578.747 567.009 578.747 567.161 578.747 cv
567.609 578.747 li
567.761 578.747 567.849 578.747 567.969 578.835 cv
568.121 578.947 568.121 579.075 568.121 579.251 cv
568.121 579.826 li
cp
f
566.617 575.658 mo
566.146 575.658 565.914 575.57 565.61 575.202 cv
565.138 574.634 li
564.842 574.274 564.834 574.091 564.834 573.643 cv
564.834 572.428 li
564.834 572.172 564.891 571.9 565.218 571.9 cv
565.554 571.9 565.602 572.204 565.602 572.428 cv
565.602 573.779 li
565.602 573.931 565.682 574.083 565.794 574.219 cv
566.186 574.682 li
566.282 574.802 566.361 574.89 566.514 574.89 cv
567.465 574.89 li
567.617 574.89 567.697 574.802 567.793 574.682 cv
568.185 574.219 li
568.296 574.083 568.376 573.931 568.376 573.779 cv
568.376 572.428 li
568.376 572.204 568.424 571.9 568.76 571.9 cv
569.088 571.9 569.144 572.172 569.144 572.428 cv
569.144 573.643 li
569.144 574.091 569.136 574.274 568.84 574.634 cv
568.369 575.202 li
568.064 575.57 567.833 575.658 567.361 575.658 cv
566.617 575.658 li
cp
f
567.713 569.13 mo
567.873 569.13 567.977 569.074 568.168 568.851 cv
568.313 568.683 568.376 568.563 568.376 568.323 cv
568.376 567.715 li
568.376 567.476 568.313 567.355 568.168 567.188 cv
567.977 566.964 567.873 566.908 567.713 566.908 cv
566.266 566.908 li
566.105 566.908 566.002 566.964 565.81 567.188 cv
565.666 567.355 565.602 567.476 565.602 567.715 cv
565.602 568.323 li
565.602 568.563 565.666 568.683 565.81 568.851 cv
566.002 569.074 566.105 569.13 566.266 569.13 cv
567.713 569.13 li
cp
566.266 569.898 mo
565.754 569.898 565.578 569.794 565.266 569.41 cv
564.954 569.035 564.834 568.858 564.834 568.323 cv
564.834 567.715 li
564.834 567.18 564.954 567.003 565.266 566.628 cv
565.578 566.244 565.754 566.14 566.266 566.14 cv
567.713 566.14 li
568.217 566.14 568.408 566.268 568.744 566.668 cv
569.08 567.067 569.144 567.228 569.144 567.715 cv
569.144 568.323 li
569.144 568.811 569.08 568.971 568.744 569.37 cv
568.408 569.77 568.217 569.898 567.713 569.898 cv
566.266 569.898 li
cp
f
566.122 561.875 mo
568.616 561.875 li
568.88 561.875 569.144 561.932 569.144 562.259 cv
569.144 562.587 568.88 562.643 568.616 562.643 cv
566.05 562.643 li
565.922 562.643 565.682 562.627 565.682 562.827 cv
565.682 562.915 565.754 562.971 565.81 563.035 cv
566.122 563.371 li
568.616 563.371 li
568.88 563.371 569.144 563.427 569.144 563.754 cv
569.144 564.082 568.88 564.138 568.616 564.138 cv
565.378 564.138 li
565.106 564.138 564.834 564.066 564.834 563.738 cv
564.834 563.546 564.962 563.418 565.138 563.371 cv
565.09 563.307 li
564.938 563.107 564.834 562.987 564.834 562.723 cv
564.834 562.427 564.979 562.195 565.218 562.02 cv
565.154 561.956 li
564.915 561.716 564.834 561.62 564.834 561.284 cv
564.834 561.028 564.946 560.796 565.146 560.644 cv
565.394 560.452 565.618 560.468 565.914 560.46 cv
568.568 560.38 li
568.84 560.372 569.144 560.412 569.144 560.756 cv
569.144 561.068 568.88 561.132 568.625 561.14 cv
566.09 561.22 li
565.954 561.228 565.682 561.188 565.682 561.396 cv
565.682 561.508 565.874 561.651 565.946 561.716 cv
566.122 561.875 li
cp
f
.708661 lw
0 lc
10 ml
71.374 595.108 mo
84.29 595.108 94.7598 605.578 94.7598 618.494 cv
94.7598 631.409 84.29 641.88 71.374 641.88 cv
58.4585 641.88 47.9883 631.409 47.9883 618.494 cv
47.9883 605.578 58.4585 595.108 71.374 595.108 cv
cp
1 0 0 rgb
@
71.374 510.069 mo
84.29 510.069 94.7598 520.539 94.7598 533.455 cv
94.7598 546.37 84.29 556.84 71.374 556.84 cv
58.4585 556.84 47.9883 546.37 47.9883 533.455 cv
47.9883 520.539 58.4585 510.069 71.374 510.069 cv
cp
@
71.374 425.029 mo
84.29 425.029 94.7598 435.5 94.7598 448.416 cv
94.7598 461.331 84.29 471.8 71.374 471.8 cv
58.4585 471.8 47.9883 461.331 47.9883 448.416 cv
47.9883 435.5 58.4585 425.029 71.374 425.029 cv
cp
@
111.4 618.474 mo
111.4 618.51 li
116.279 619.915 li
116.279 617.088 li
111.4 618.474 li
cp
108.051 619.411 mo
107.564 619.267 107.132 619.068 107.132 618.492 cv
107.132 617.898 107.583 617.682 108.051 617.556 cv
120.24 614.081 li
120.672 613.955 121.141 614.441 121.141 614.945 cv
121.141 615.503 120.672 615.792 120.24 615.917 cv
118.08 616.583 li
118.08 620.419 li
120.24 621.103 li
120.672 621.229 121.141 621.517 121.141 622.075 cv
121.141 622.58 120.672 623.065 120.24 622.939 cv
108.051 619.411 li
cp
0 0 0 rgb
f
119.34 536.1 mo
119.34 532.859 li
119.34 531.563 118.764 530.806 117.396 530.806 cv
115.883 530.806 115.037 531.221 115.037 532.859 cv
115.037 536.1 li
119.34 536.1 li
cp
113.236 536.1 mo
113.236 532.859 li
113.236 531.563 112.66 530.806 111.292 530.806 cv
109.779 530.806 108.933 531.221 108.933 532.859 cv
108.933 536.1 li
113.236 536.1 li
cp
107.132 537.9 mo
107.132 532.859 li
107.132 530.212 108.753 529.006 111.292 529.006 cv
112.336 529.006 113.291 529.24 114.137 530.194 cv
115.109 529.168 116.063 529.006 117.396 529.006 cv
119.754 529.006 121.141 530.572 121.141 532.859 cv
121.141 537.9 li
107.132 537.9 li
cp
f
121.141 448.017 mo
121.141 449.367 120.601 450.141 119.43 450.717 cv
116.081 452.374 li
115.469 452.68 114.893 452.86 114.19 452.86 cv
113.398 452.86 112.912 452.716 112.192 452.356 cv
108.861 450.699 li
107.619 450.087 107.132 449.313 107.132 447.926 cv
107.132 444.866 li
107.132 444.469 107.349 443.965 108.033 443.965 cv
108.681 443.965 108.933 444.451 108.933 444.866 cv
108.933 447.873 li
108.933 448.646 109.005 448.772 109.689 449.115 cv
112.822 450.681 li
113.308 450.916 113.632 451.06 114.19 451.06 cv
114.695 451.06 115.001 450.897 115.433 450.681 cv
118.548 449.151 li
119.286 448.791 119.34 448.611 119.34 447.8 cv
119.34 444.866 li
119.34 444.469 119.556 443.965 120.24 443.965 cv
120.889 443.965 121.141 444.451 121.141 444.866 cv
121.141 448.017 li
cp
f
48.5498 703.533 mo
93.8789 703.533 li
1 0 0 rgb
@
.354492 703.533 mo
.354492 583.064 li
@
48.4614 363.376 mo
93.8159 363.376 li
@
142.086 703.533 mo
142.086 363.376 li
@
157.663 703.533 mo
200.063 703.533 li
@
157.663 363.376 mo
200.07 363.376 li
@
623.977 703.533 mo
623.977 363.376 li
@
.354492 363.376 mo
.354492 357.693 li
@
14.5273 361.973 mo
14.5273 357.693 li
@
1.75781 356.29 mo
.981934 356.29 .354492 356.917 .354492 357.693 cv
@
13.124 356.29 mo
13.8999 356.29 14.5273 356.917 14.5273 357.693 cv
@
1.75781 356.29 mo
13.124 356.29 li
@
15.9307 363.376 mo
15.1548 363.376 14.5273 362.749 14.5273 361.973 cv
@
142.086 363.376 mo
142.086 357.693 li
@
127.914 361.973 mo
127.914 357.693 li
@
140.683 356.29 mo
141.459 356.29 142.086 356.917 142.086 357.693 cv
@
129.317 356.29 mo
128.541 356.29 127.914 356.917 127.914 357.693 cv
@
140.683 356.29 mo
129.317 356.29 li
@
126.51 363.376 mo
127.286 363.376 127.914 362.749 127.914 361.973 cv
@
142.086 703.533 mo
142.086 709.217 li
@
127.914 704.937 mo
127.914 709.217 li
@
140.683 710.619 mo
141.459 710.619 142.086 709.992 142.086 709.217 cv
@
129.317 710.619 mo
128.541 710.619 127.914 709.992 127.914 709.217 cv
@
140.683 710.619 mo
129.317 710.619 li
@
126.51 703.533 mo
127.286 703.533 127.914 704.16 127.914 704.937 cv
@
.354492 703.533 mo
.354492 709.217 li
@
14.5273 704.937 mo
14.5273 709.217 li
@
1.75781 710.619 mo
.981934 710.619 .354492 709.992 .354492 709.217 cv
@
13.124 710.619 mo
13.8999 710.619 14.5273 709.992 14.5273 709.217 cv
@
1.75781 710.619 mo
13.124 710.619 li
@
15.9307 703.533 mo
15.1548 703.533 14.5273 704.16 14.5273 704.937 cv
@
15.9307 703.533 mo
34.356 703.533 li
@
34.3701 703.533 mo
35.1538 703.533 35.7871 702.899 35.7871 702.115 cv
@
35.7871 702.115 mo
35.7871 683.577 li
@
35.7871 683.577 mo
35.7871 682.794 35.1538 682.161 34.3701 682.161 cv
@
35.7959 670.886 mo
35.7959 671.67 35.1626 672.304 34.3789 672.304 cv
@
35.7891 670.894 mo
35.7891 662.39 li
@
35.791 662.39 mo
35.791 661.605 36.4243 660.972 37.208 660.972 cv
@
37.2012 660.972 mo
45.7051 660.972 li
@
33.3066 680.786 mo
33.3066 681.569 33.9399 682.203 34.7236 682.203 cv
@
33.3066 673.706 mo
33.3066 672.923 33.9399 672.29 34.7236 672.29 cv
@
33.3135 680.786 mo
33.3135 673.7 li
@
48.5498 703.533 mo
47.7661 703.533 47.1328 702.899 47.1328 702.115 cv
@
47.1328 702.115 mo
47.1328 683.577 li
@
47.1328 683.577 mo
47.1328 682.794 47.7661 682.161 48.5498 682.161 cv
@
47.124 670.886 mo
47.124 671.67 47.7573 672.304 48.541 672.304 cv
@
47.1309 670.894 mo
47.1309 662.39 li
@
47.1221 662.39 mo
47.1221 661.605 46.4888 660.972 45.7051 660.972 cv
@
49.6133 680.786 mo
49.6133 681.569 48.98 682.203 48.1963 682.203 cv
@
49.6133 673.706 mo
49.6133 672.923 48.98 672.29 48.1963 672.29 cv
@
49.6064 680.786 mo
49.6064 673.7 li
@
48.4614 363.376 mo
47.6777 363.376 47.0444 364.01 47.0444 364.793 cv
@
47.0444 364.793 mo
47.0444 383.332 li
@
47.0444 383.332 mo
47.0444 384.115 47.6777 384.749 48.4614 384.749 cv
@
47.0356 396.023 mo
47.0356 395.239 47.6689 394.606 48.4526 394.606 cv
@
47.0425 396.016 mo
47.0425 404.52 li
@
47.0405 404.52 mo
47.0405 405.304 46.4072 405.937 45.6235 405.937 cv
@
45.6304 405.937 mo
37.1265 405.937 li
@
49.5249 386.123 mo
49.5249 385.339 48.8916 384.706 48.1079 384.706 cv
@
49.5249 393.203 mo
49.5249 393.986 48.8916 394.62 48.1079 394.62 cv
@
49.5181 386.123 mo
49.5181 393.209 li
@
34.2817 363.376 mo
35.0654 363.376 35.6987 364.01 35.6987 364.793 cv
@
35.6987 364.793 mo
35.6987 383.332 li
@
35.6987 383.332 mo
35.6987 384.115 35.0654 384.749 34.2817 384.749 cv
@
35.7075 396.023 mo
35.7075 395.239 35.0742 394.606 34.2905 394.606 cv
@
35.7007 396.016 mo
35.7007 404.52 li
@
35.7095 404.52 mo
35.7095 405.304 36.3428 405.937 37.1265 405.937 cv
@
33.2183 386.123 mo
33.2183 385.339 33.8516 384.706 34.6353 384.706 cv
@
33.2183 393.203 mo
33.2183 393.986 33.8516 394.62 34.6353 394.62 cv
@
33.2251 386.123 mo
33.2251 393.209 li
@
15.9307 363.376 mo
34.356 363.376 li
@
126.51 703.533 mo
108.085 703.533 li
@
93.8789 703.533 mo
94.6626 703.533 95.2959 702.899 95.2959 702.115 cv
@
95.2959 702.115 mo
95.2959 683.577 li
@
95.2959 683.577 mo
95.2959 682.794 94.6626 682.161 93.8789 682.161 cv
@
95.3047 670.886 mo
95.3047 671.67 94.6714 672.304 93.8877 672.304 cv
@
95.2979 670.894 mo
95.2979 662.39 li
@
95.2998 662.39 mo
95.2998 661.605 95.9331 660.972 96.7168 660.972 cv
@
96.71 660.972 mo
105.214 660.972 li
@
92.8154 680.786 mo
92.8154 681.569 93.4487 682.203 94.2324 682.203 cv
@
92.8154 673.706 mo
92.8154 672.923 93.4487 672.29 94.2324 672.29 cv
@
92.8223 680.786 mo
92.8223 673.7 li
@
108.059 703.533 mo
107.275 703.533 106.642 702.899 106.642 702.115 cv
@
106.642 702.115 mo
106.642 683.577 li
@
106.642 683.577 mo
106.642 682.794 107.275 682.161 108.059 682.161 cv
@
106.633 670.886 mo
106.633 671.67 107.266 672.304 108.05 672.304 cv
@
106.64 670.894 mo
106.64 662.39 li
@
106.631 662.39 mo
106.631 661.605 105.998 660.972 105.214 660.972 cv
@
109.122 680.786 mo
109.122 681.569 108.489 682.203 107.705 682.203 cv
@
109.122 673.706 mo
109.122 672.923 108.489 672.29 107.705 672.29 cv
@
109.115 680.786 mo
109.115 673.7 li
@
126.51 363.376 mo
108.085 363.376 li
@
108.092 363.376 mo
107.308 363.376 106.675 364.01 106.675 364.793 cv
@
106.675 364.793 mo
106.675 383.332 li
@
106.675 383.332 mo
106.675 384.115 107.308 384.749 108.092 384.749 cv
@
106.666 396.023 mo
106.666 395.239 107.299 394.606 108.083 394.606 cv
@
106.673 396.016 mo
106.673 404.52 li
@
106.671 404.52 mo
106.671 405.304 106.038 405.937 105.254 405.937 cv
@
105.261 405.937 mo
96.7568 405.937 li
@
109.155 386.123 mo
109.155 385.339 108.522 384.706 107.738 384.706 cv
@
109.155 393.203 mo
109.155 393.986 108.522 394.62 107.738 394.62 cv
@
109.148 386.123 mo
109.148 393.209 li
@
93.9121 363.376 mo
94.6958 363.376 95.3291 364.01 95.3291 364.793 cv
@
95.3291 364.793 mo
95.3291 383.332 li
@
95.3291 383.332 mo
95.3291 384.115 94.6958 384.749 93.9121 384.749 cv
@
95.3379 396.023 mo
95.3379 395.239 94.7046 394.606 93.9209 394.606 cv
@
95.3311 396.016 mo
95.3311 404.52 li
@
95.3398 404.52 mo
95.3398 405.304 95.9731 405.937 96.7568 405.937 cv
@
92.8486 386.123 mo
92.8486 385.339 93.4819 384.706 94.2656 384.706 cv
@
92.8486 393.203 mo
92.8486 393.986 93.4819 394.62 94.2656 394.62 cv
@
92.8555 386.123 mo
92.8555 393.209 li
@
200.063 703.533 mo
200.847 703.533 201.48 702.899 201.48 702.115 cv
@
201.48 702.115 mo
201.48 683.577 li
@
201.48 683.577 mo
201.48 682.794 200.847 682.161 200.063 682.161 cv
@
201.489 670.886 mo
201.489 671.67 200.856 672.304 200.072 672.304 cv
@
201.482 670.894 mo
201.482 662.39 li
@
201.484 662.39 mo
201.484 661.605 202.118 660.972 202.901 660.972 cv
@
202.895 660.972 mo
211.398 660.972 li
@
199 680.786 mo
199 681.569 199.633 682.203 200.417 682.203 cv
@
199 673.706 mo
199 672.923 199.633 672.29 200.417 672.29 cv
@
199.007 680.786 mo
199.007 673.7 li
@
214.243 703.533 mo
213.459 703.533 212.826 702.899 212.826 702.115 cv
@
212.826 702.115 mo
212.826 683.577 li
@
212.826 683.577 mo
212.826 682.794 213.459 682.161 214.243 682.161 cv
@
212.817 670.886 mo
212.817 671.67 213.451 672.304 214.234 672.304 cv
@
212.824 670.894 mo
212.824 662.39 li
@
212.815 662.39 mo
212.815 661.605 212.182 660.972 211.398 660.972 cv
@
215.307 680.786 mo
215.307 681.569 214.673 682.203 213.89 682.203 cv
@
215.307 673.706 mo
215.307 672.923 214.673 672.29 213.89 672.29 cv
@
215.3 680.786 mo
215.3 673.7 li
@
214.25 363.376 mo
213.466 363.376 212.833 364.01 212.833 364.793 cv
@
212.833 364.793 mo
212.833 383.332 li
@
212.833 383.332 mo
212.833 384.115 213.466 384.749 214.25 384.749 cv
@
212.824 396.023 mo
212.824 395.239 213.458 394.606 214.241 394.606 cv
@
212.831 396.016 mo
212.831 404.52 li
@
212.829 404.52 mo
212.829 405.304 212.196 405.937 211.412 405.937 cv
@
211.419 405.937 mo
202.915 405.937 li
@
215.313 386.123 mo
215.313 385.339 214.68 384.706 213.896 384.706 cv
@
215.313 393.203 mo
215.313 393.986 214.68 394.62 213.896 394.62 cv
@
215.307 386.123 mo
215.307 393.209 li
@
200.07 363.376 mo
200.854 363.376 201.487 364.01 201.487 364.793 cv
@
201.487 364.793 mo
201.487 383.332 li
@
201.487 383.332 mo
201.487 384.115 200.854 384.749 200.07 384.749 cv
@
201.496 396.023 mo
201.496 395.239 200.863 394.606 200.079 394.606 cv
@
201.489 396.016 mo
201.489 404.52 li
@
201.498 404.52 mo
201.498 405.304 202.131 405.937 202.915 405.937 cv
@
199.007 386.123 mo
199.007 385.339 199.64 384.706 200.424 384.706 cv
@
199.007 393.203 mo
199.007 393.986 199.64 394.62 200.424 394.62 cv
@
199.014 386.123 mo
199.014 393.209 li
@
416.907 703.533 mo
417.691 703.533 418.324 702.899 418.324 702.115 cv
level3{
gsave
clp
[0 -1.41797 1.41797 0 417.616 703.533 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.137255 .121569 .12549 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41797 1.41797 0 417.616 703.533 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8Mupqtg-`q"OLTo^hYEnaQ#8mHj3*lKRNqk2tddj5T%Ui8<DIgtUQ:g"=p-e^W*tda?FfcHa\YbK@rJ
a2c3=`5BI._8*h"]tCth]",>[[^ENMZa-j?YHP+2XK/A#WMl_lV50l]U7n6PSt2FBS!ob4Q^=#'P`q8m
OH>N`NJrdQMM[.EL4t;6K7\Z)IsuipI!^0bG^+FUF`_\FEcH&:DJa3+CMIQsB4baeA7K(W?sm>J?!LT;
=]nj.<`N*t;c6Ih:JOVY9M7uL84Q0>779L05s[b#5!;"i4$#A]2`<NN1c$mA0J>(3/M&D%.4HYm-7'o^
~>
<~s8Mupqtg-`p\4CSo^hYDnF5o7mHj0(l07Epk2k[aio8qThqm2EgY:H8f[n^)eC;sqdEp4bc-=JUb/q`F
`l?!9_ns7*^V@Lr]Xtbc\@B#V[C!9GZ*CO:Y-"e+WiE%sVl$;dUSFQWTV%gHS=H(;R@'>,Q'IStP*(ie
NfK*XMi*@ILPLV<KS+l-J:N,uI=-BfH$OXYG'.nJEcQ/=Df0E.CMR[!BP1pgA7T1Z@:3GK?!U]>>$4s/
<`W4";c6Ih:JX_[9M7uL84Z6?779L05s[b#5!;"i3]]8\2`<NM1G^d@0J>%1/1`;$.4?Pj,paf]+sA'N
~>
<~s8Mupqtg-`q"OLTo^hYDnaQ#8mHj0(lKRNqk2k[aj5T%Uhqm2FgtUQ9f[n^*e^W'rdEp4ccHXSVb/q`G
a2Z*:_ns:,^q[Us]Xtee\[],W[C!<IZE^X;Y-"h-X/`.tVl-DgUnaZXTV.pKSXc1<R@0G/QBd\uP*1rh
O,f3YN/NRMLkg_=KnP)1JUi6!IXQTjH?jaZGBS+NF)l8?E,TW2Chmd#BkV-kARo:\@UWYO?<pf@>?Y03
=&r@%<)Z[l:esk^9h\2P8OuBB7R]^46:!n&5<_4m4$,J`3&``Q1c.!D0eb75/M/M(.Ocbn-71#a,9e9R
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
416.907 703.533 mo
417.691 703.533 418.324 702.899 418.324 702.115 cv
1 0 0 rgb
@
418.324 702.115 mo
418.324 683.577 li
level3{
gsave
clp
[0 -18.5381 18.5381 0 418.324 702.115 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -18.5381 18.5381 0 418.324 702.115 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.324 702.115 mo
418.324 683.577 li
1 0 0 rgb
@
418.324 683.577 mo
418.324 682.794 417.691 682.161 416.907 682.161 cv
level3{
gsave
clp
[0 -1.41602 1.41602 0 417.616 683.577 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41602 1.41602 0 417.616 683.577 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.324 683.577 mo
418.324 682.794 417.691 682.161 416.907 682.161 cv
1 0 0 rgb
@
418.333 670.886 mo
418.333 671.67 417.7 672.304 416.916 672.304 cv
level3{
gsave
clp
[0 -1.41797 1.41797 0 417.625 672.304 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41797 1.41797 0 417.625 672.304 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.333 670.886 mo
418.333 671.67 417.7 672.304 416.916 672.304 cv
1 0 0 rgb
@
418.326 670.894 mo
418.326 662.39 li
level3{
gsave
clp
[0 -8.50391 8.50391 0 418.326 670.894 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -8.50391 8.50391 0 418.326 670.894 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.326 670.894 mo
418.326 662.39 li
1 0 0 rgb
@
418.328 662.39 mo
418.328 661.605 418.961 660.972 419.745 660.972 cv
level3{
gsave
clp
[0 -1.41797 1.41797 0 419.037 662.39 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41797 1.41797 0 419.037 662.39 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.328 662.39 mo
418.328 661.605 418.961 660.972 419.745 660.972 cv
1 0 0 rgb
@
419.738 660.972 mo
428.242 660.972 li
level3{
gsave
clp
[0 -.001 .001 0 423.99 660.972 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -.001 .001 0 423.99 660.972 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
419.738 660.972 mo
428.242 660.972 li
1 0 0 rgb
@
415.844 680.786 mo
415.844 681.569 416.477 682.203 417.261 682.203 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 416.552 682.203 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 416.552 682.203 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
415.844 680.786 mo
415.844 681.569 416.477 682.203 417.261 682.203 cv
1 0 0 rgb
@
415.844 673.706 mo
415.844 672.923 416.477 672.29 417.261 672.29 cv
level3{
gsave
clp
[0 -1.41602 1.41602 0 416.552 673.706 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41602 1.41602 0 416.552 673.706 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
415.844 673.706 mo
415.844 672.923 416.477 672.29 417.261 672.29 cv
1 0 0 rgb
@
415.851 680.786 mo
415.851 673.7 li
level3{
gsave
clp
[0 -7.08594 7.08594 0 415.851 680.786 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -7.08594 7.08594 0 415.851 680.786 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
415.851 680.786 mo
415.851 673.7 li
1 0 0 rgb
@
431.087 703.533 mo
430.303 703.533 429.67 702.899 429.67 702.115 cv
level3{
gsave
clp
[0 -1.41797 1.41797 0 430.378 703.533 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41797 1.41797 0 430.378 703.533 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
431.087 703.533 mo
430.303 703.533 429.67 702.899 429.67 702.115 cv
1 0 0 rgb
@
429.67 702.115 mo
429.67 683.577 li
level3{
gsave
clp
[0 -18.5381 18.5381 0 429.67 702.115 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -18.5381 18.5381 0 429.67 702.115 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.67 702.115 mo
429.67 683.577 li
1 0 0 rgb
@
429.67 683.577 mo
429.67 682.794 430.303 682.161 431.087 682.161 cv
level3{
gsave
clp
[0 -1.41602 1.41602 0 430.378 683.577 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41602 1.41602 0 430.378 683.577 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.67 683.577 mo
429.67 682.794 430.303 682.161 431.087 682.161 cv
1 0 0 rgb
@
429.661 670.886 mo
429.661 671.67 430.294 672.304 431.078 672.304 cv
level3{
gsave
clp
[0 -1.41797 1.41797 0 430.37 672.304 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41797 1.41797 0 430.37 672.304 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.661 670.886 mo
429.661 671.67 430.294 672.304 431.078 672.304 cv
1 0 0 rgb
@
429.668 670.894 mo
429.668 662.39 li
level3{
gsave
clp
[0 -8.50391 8.50391 0 429.668 670.894 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -8.50391 8.50391 0 429.668 670.894 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.668 670.894 mo
429.668 662.39 li
1 0 0 rgb
@
429.659 662.39 mo
429.659 661.605 429.026 660.972 428.242 660.972 cv
level3{
gsave
clp
[0 -1.41797 1.41797 0 428.951 662.39 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41797 1.41797 0 428.951 662.39 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.659 662.39 mo
429.659 661.605 429.026 660.972 428.242 660.972 cv
1 0 0 rgb
@
432.15 680.786 mo
432.15 681.569 431.517 682.203 430.733 682.203 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 431.442 682.203 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 431.442 682.203 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
432.15 680.786 mo
432.15 681.569 431.517 682.203 430.733 682.203 cv
1 0 0 rgb
@
432.15 673.706 mo
432.15 672.923 431.517 672.29 430.733 672.29 cv
level3{
gsave
clp
[0 -1.41602 1.41602 0 431.442 673.706 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41602 1.41602 0 431.442 673.706 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
432.15 673.706 mo
432.15 672.923 431.517 672.29 430.733 672.29 cv
1 0 0 rgb
@
432.144 680.786 mo
432.144 673.7 li
level3{
gsave
clp
[0 -7.08594 7.08594 0 432.144 680.786 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -7.08594 7.08594 0 432.144 680.786 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
432.144 680.786 mo
432.144 673.7 li
1 0 0 rgb
@
431.094 363.376 mo
430.31 363.376 429.677 364.01 429.677 364.793 cv
level3{
gsave
clp
[0 -1.41748 1.41748 0 430.385 364.793 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41748 1.41748 0 430.385 364.793 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
431.094 363.376 mo
430.31 363.376 429.677 364.01 429.677 364.793 cv
1 0 0 rgb
@
429.677 364.793 mo
429.677 383.332 li
level3{
gsave
clp
[0 -18.5381 18.5381 0 429.677 383.332 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -18.5381 18.5381 0 429.677 383.332 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.677 364.793 mo
429.677 383.332 li
1 0 0 rgb
@
429.677 383.332 mo
429.677 384.115 430.31 384.749 431.094 384.749 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 430.385 384.749 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 430.385 384.749 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.677 383.332 mo
429.677 384.115 430.31 384.749 431.094 384.749 cv
1 0 0 rgb
@
429.668 396.023 mo
429.668 395.239 430.301 394.606 431.085 394.606 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 430.376 396.023 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 430.376 396.023 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.668 396.023 mo
429.668 395.239 430.301 394.606 431.085 394.606 cv
1 0 0 rgb
@
429.675 396.016 mo
429.675 404.52 li
level3{
gsave
clp
[0 -8.50391 8.50391 0 429.675 404.52 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -8.50391 8.50391 0 429.675 404.52 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.675 396.016 mo
429.675 404.52 li
1 0 0 rgb
@
429.673 404.52 mo
429.673 405.304 429.04 405.937 428.256 405.937 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 428.964 405.937 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 428.964 405.937 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
429.673 404.52 mo
429.673 405.304 429.04 405.937 428.256 405.937 cv
1 0 0 rgb
@
428.263 405.937 mo
419.759 405.937 li
level3{
gsave
clp
[0 -.001 .001 0 424.011 405.937 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -.001 .001 0 424.011 405.937 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
428.263 405.937 mo
419.759 405.937 li
1 0 0 rgb
@
432.157 386.123 mo
432.157 385.339 431.524 384.706 430.74 384.706 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 431.449 386.123 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 431.449 386.123 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
432.157 386.123 mo
432.157 385.339 431.524 384.706 430.74 384.706 cv
1 0 0 rgb
@
432.157 393.203 mo
432.157 393.986 431.524 394.62 430.74 394.62 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 431.449 394.62 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 431.449 394.62 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
432.157 393.203 mo
432.157 393.986 431.524 394.62 430.74 394.62 cv
1 0 0 rgb
@
432.15 386.123 mo
432.15 393.209 li
level3{
gsave
clp
[0 -7.08643 7.08643 0 432.15 393.209 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -7.08643 7.08643 0 432.15 393.209 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
432.15 386.123 mo
432.15 393.209 li
1 0 0 rgb
@
416.914 363.376 mo
417.698 363.376 418.331 364.01 418.331 364.793 cv
level3{
gsave
clp
[0 -1.41748 1.41748 0 417.623 364.793 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41748 1.41748 0 417.623 364.793 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
416.914 363.376 mo
417.698 363.376 418.331 364.01 418.331 364.793 cv
1 0 0 rgb
@
418.331 364.793 mo
418.331 383.332 li
level3{
gsave
clp
[0 -18.5381 18.5381 0 418.331 383.332 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -18.5381 18.5381 0 418.331 383.332 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.331 364.793 mo
418.331 383.332 li
1 0 0 rgb
@
418.331 383.332 mo
418.331 384.115 417.698 384.749 416.914 384.749 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 417.623 384.749 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 417.623 384.749 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.331 383.332 mo
418.331 384.115 417.698 384.749 416.914 384.749 cv
1 0 0 rgb
@
418.34 396.023 mo
418.34 395.239 417.707 394.606 416.923 394.606 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 417.631 396.023 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 417.631 396.023 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.34 396.023 mo
418.34 395.239 417.707 394.606 416.923 394.606 cv
1 0 0 rgb
@
418.333 396.016 mo
418.333 404.52 li
level3{
gsave
clp
[0 -8.50391 8.50391 0 418.333 404.52 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -8.50391 8.50391 0 418.333 404.52 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.333 396.016 mo
418.333 404.52 li
1 0 0 rgb
@
418.342 404.52 mo
418.342 405.304 418.975 405.937 419.759 405.937 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 419.05 405.937 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 419.05 405.937 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.342 404.52 mo
418.342 405.304 418.975 405.937 419.759 405.937 cv
1 0 0 rgb
@
415.851 386.123 mo
415.851 385.339 416.484 384.706 417.268 384.706 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 416.559 386.123 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 416.559 386.123 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
415.851 386.123 mo
415.851 385.339 416.484 384.706 417.268 384.706 cv
1 0 0 rgb
@
415.851 393.203 mo
415.851 393.986 416.484 394.62 417.268 394.62 cv
level3{
gsave
clp
[0 -1.41699 1.41699 0 416.559 394.62 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -1.41699 1.41699 0 416.559 394.62 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
415.851 393.203 mo
415.851 393.986 416.484 394.62 417.268 394.62 cv
1 0 0 rgb
@
415.857 386.123 mo
415.857 393.209 li
level3{
gsave
clp
[0 -7.08643 7.08643 0 415.857 393.209 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -7.08643 7.08643 0 415.857 393.209 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
415.857 386.123 mo
415.857 393.209 li
1 0 0 rgb
@
574.363 703.533 mo
575.147 703.533 575.78 702.899 575.78 702.115 cv
@
575.78 702.115 mo
575.78 683.577 li
@
575.78 683.577 mo
575.78 682.794 575.147 682.161 574.363 682.161 cv
@
575.789 670.886 mo
575.789 671.67 575.156 672.304 574.372 672.304 cv
@
575.782 670.894 mo
575.782 662.39 li
@
575.784 662.39 mo
575.784 661.605 576.417 660.972 577.201 660.972 cv
@
577.194 660.972 mo
585.698 660.972 li
@
573.3 680.786 mo
573.3 681.569 573.933 682.203 574.717 682.203 cv
@
573.3 673.706 mo
573.3 672.923 573.933 672.29 574.717 672.29 cv
@
573.307 680.786 mo
573.307 673.7 li
@
588.543 703.533 mo
587.759 703.533 587.126 702.899 587.126 702.115 cv
@
587.126 702.115 mo
587.126 683.577 li
@
587.126 683.577 mo
587.126 682.794 587.759 682.161 588.543 682.161 cv
@
587.117 670.886 mo
587.117 671.67 587.75 672.304 588.534 672.304 cv
@
587.124 670.894 mo
587.124 662.39 li
@
587.115 662.39 mo
587.115 661.605 586.482 660.972 585.698 660.972 cv
@
589.606 680.786 mo
589.606 681.569 588.973 682.203 588.189 682.203 cv
@
589.606 673.706 mo
589.606 672.923 588.973 672.29 588.189 672.29 cv
@
589.6 680.786 mo
589.6 673.7 li
@
588.55 363.376 mo
587.766 363.376 587.133 364.01 587.133 364.793 cv
@
587.133 364.793 mo
587.133 383.332 li
@
587.133 383.332 mo
587.133 384.115 587.766 384.749 588.55 384.749 cv
@
587.124 396.023 mo
587.124 395.239 587.757 394.606 588.541 394.606 cv
@
587.131 396.016 mo
587.131 404.52 li
@
587.129 404.52 mo
587.129 405.304 586.496 405.937 585.712 405.937 cv
@
585.719 405.937 mo
577.215 405.937 li
@
589.613 386.123 mo
589.613 385.339 588.98 384.706 588.196 384.706 cv
@
589.613 393.203 mo
589.613 393.986 588.98 394.62 588.196 394.62 cv
@
589.606 386.123 mo
589.606 393.209 li
@
574.37 363.376 mo
575.154 363.376 575.787 364.01 575.787 364.793 cv
@
575.787 364.793 mo
575.787 383.332 li
@
575.787 383.332 mo
575.787 384.115 575.154 384.749 574.37 384.749 cv
@
575.796 396.023 mo
575.796 395.239 575.163 394.606 574.379 394.606 cv
@
575.789 396.016 mo
575.789 404.52 li
@
575.798 404.52 mo
575.798 405.304 576.431 405.937 577.215 405.937 cv
@
573.307 386.123 mo
573.307 385.339 573.94 384.706 574.724 384.706 cv
@
573.307 393.203 mo
573.307 393.986 573.94 394.62 574.724 394.62 cv
@
573.313 386.123 mo
573.313 393.209 li
@
214.243 703.533 mo
306.664 703.533 li
@
431.087 703.533 mo
494.028 703.533 li
@
588.543 703.533 mo
608.368 703.533 li
@
214.25 363.376 mo
307.085 363.376 li
@
431.094 363.376 mo
494.449 363.376 li
@
588.55 363.376 mo
608.368 363.376 li
@
156.259 704.937 mo
156.259 709.217 li
@
143.49 710.619 mo
142.714 710.619 142.086 709.992 142.086 709.217 cv
@
154.856 710.619 mo
155.632 710.619 156.259 709.992 156.259 709.217 cv
@
143.49 710.619 mo
154.856 710.619 li
@
156.259 361.973 mo
156.259 357.693 li
@
143.49 356.29 mo
142.714 356.29 142.086 356.917 142.086 357.693 cv
@
154.856 356.29 mo
155.632 356.29 156.259 356.917 156.259 357.693 cv
@
143.49 356.29 mo
154.856 356.29 li
@
157.663 363.376 mo
156.887 363.376 156.259 362.749 156.259 361.973 cv
@
308.067 704.937 mo
308.067 709.217 li
@
322.24 704.937 mo
322.24 709.217 li
@
309.471 710.619 mo
308.694 710.619 308.067 709.992 308.067 709.217 cv
@
320.837 710.619 mo
321.612 710.619 322.24 709.992 322.24 709.217 cv
@
309.471 710.619 mo
320.837 710.619 li
@
323.644 703.533 mo
322.867 703.533 322.24 704.16 322.24 704.937 cv
@
306.664 703.533 mo
307.439 703.533 308.067 704.16 308.067 704.937 cv
@
308.489 361.973 mo
308.489 357.693 li
@
322.662 361.973 mo
322.662 357.693 li
@
309.892 356.29 mo
309.116 356.29 308.489 356.917 308.489 357.693 cv
@
321.258 356.29 mo
322.034 356.29 322.662 356.917 322.662 357.693 cv
@
309.892 356.29 mo
321.258 356.29 li
@
324.065 363.376 mo
323.289 363.376 322.662 362.749 322.662 361.973 cv
@
307.085 363.376 mo
307.861 363.376 308.489 362.749 308.489 361.973 cv
@
495.432 704.937 mo
495.432 709.217 li
@
509.604 704.937 mo
509.604 709.217 li
@
496.835 710.619 mo
496.059 710.619 495.432 709.992 495.432 709.217 cv
@
508.201 710.619 mo
508.977 710.619 509.604 709.992 509.604 709.217 cv
@
496.835 710.619 mo
508.201 710.619 li
@
511.008 703.533 mo
510.231 703.533 509.604 704.16 509.604 704.937 cv
@
494.028 703.533 mo
494.804 703.533 495.432 704.16 495.432 704.937 cv
@
495.853 361.973 mo
495.853 357.693 li
@
510.025 361.973 mo
510.025 357.693 li
@
497.256 356.29 mo
496.479 356.29 495.853 356.917 495.853 357.693 cv
@
508.622 356.29 mo
509.397 356.29 510.025 356.917 510.025 357.693 cv
@
497.256 356.29 mo
508.622 356.29 li
@
511.429 363.376 mo
510.652 363.376 510.025 362.749 510.025 361.973 cv
@
494.449 363.376 mo
495.225 363.376 495.853 362.749 495.853 361.973 cv
@
623.944 363.376 mo
623.944 357.693 li
@
609.771 361.973 mo
609.771 357.693 li
@
622.542 356.29 mo
623.317 356.29 623.944 356.917 623.944 357.693 cv
@
611.175 356.29 mo
610.398 356.29 609.771 356.917 609.771 357.693 cv
@
622.542 356.29 mo
611.175 356.29 li
@
608.368 363.376 mo
609.145 363.376 609.771 362.749 609.771 361.973 cv
@
623.944 703.533 mo
623.944 709.217 li
@
609.771 704.937 mo
609.771 709.217 li
@
622.542 710.619 mo
623.317 710.619 623.944 709.992 623.944 709.217 cv
@
611.175 710.619 mo
610.398 710.619 609.771 709.992 609.771 709.217 cv
@
622.542 710.619 mo
611.175 710.619 li
@
608.368 703.533 mo
609.145 703.533 609.771 704.16 609.771 704.937 cv
@
511.429 363.376 mo
574.37 363.376 li
@
511.008 703.533 mo
574.363 703.533 li
@
.354492 568.884 mo
.354492 569.668 .988281 570.301 1.77197 570.301 cv
@
1.77197 570.301 mo
20.3101 570.301 li
@
20.3101 570.301 mo
21.0938 570.301 21.7271 569.668 21.7271 568.884 cv
@
33.0015 570.31 mo
32.2178 570.31 31.5845 569.677 31.5845 568.893 cv
@
32.9946 570.303 mo
41.4985 570.303 li
@
41.4985 570.305 mo
42.2822 570.305 42.9155 570.938 42.9155 571.722 cv
@
42.9155 571.715 mo
42.9155 580.219 li
@
23.1016 567.821 mo
22.3179 567.821 21.6846 568.454 21.6846 569.238 cv
@
30.1812 567.821 mo
30.9648 567.821 31.5981 568.454 31.5981 569.238 cv
@
23.1016 567.828 mo
30.188 567.828 li
@
.354492 583.064 mo
.354492 582.28 .988281 581.647 1.77197 581.647 cv
@
1.77197 581.647 mo
20.3101 581.647 li
@
20.3101 581.647 mo
21.0938 581.647 21.7271 582.28 21.7271 583.064 cv
@
33.0015 581.638 mo
32.2178 581.638 31.5845 582.271 31.5845 583.055 cv
@
32.9946 581.645 mo
41.4985 581.645 li
@
41.4985 581.636 mo
42.2822 581.636 42.9155 581.003 42.9155 580.219 cv
@
23.1016 584.127 mo
22.3179 584.127 21.6846 583.494 21.6846 582.71 cv
@
30.1812 584.127 mo
30.9648 584.127 31.5981 583.494 31.5981 582.71 cv
@
23.1016 584.121 mo
30.188 584.121 li
@
.354492 483.845 mo
.354492 484.628 .988281 485.262 1.77197 485.262 cv
@
1.77197 485.262 mo
20.3101 485.262 li
@
20.3101 485.262 mo
21.0938 485.262 21.7271 484.628 21.7271 483.845 cv
@
33.0015 485.271 mo
32.2178 485.271 31.5845 484.637 31.5845 483.854 cv
@
32.9946 485.264 mo
41.4985 485.264 li
@
41.4985 485.266 mo
42.2822 485.266 42.9155 485.899 42.9155 486.683 cv
@
42.9155 486.676 mo
42.9155 495.18 li
@
23.1016 482.781 mo
22.3179 482.781 21.6846 483.415 21.6846 484.198 cv
@
30.1812 482.781 mo
30.9648 482.781 31.5981 483.415 31.5981 484.198 cv
@
23.1016 482.788 mo
30.188 482.788 li
@
.354492 498.024 mo
.354492 497.241 .988281 496.607 1.77197 496.607 cv
@
1.77197 496.607 mo
20.3101 496.607 li
@
20.3101 496.607 mo
21.0938 496.607 21.7271 497.241 21.7271 498.024 cv
@
33.0015 496.599 mo
32.2178 496.599 31.5845 497.232 31.5845 498.016 cv
@
32.9946 496.605 mo
41.4985 496.605 li
@
41.4985 496.597 mo
42.2822 496.597 42.9155 495.963 42.9155 495.18 cv
@
23.1016 499.088 mo
22.3179 499.088 21.6846 498.455 21.6846 497.671 cv
@
30.1812 499.088 mo
30.9648 499.088 31.5981 498.455 31.5981 497.671 cv
@
23.1016 499.081 mo
30.188 499.081 li
@
157.677 703.52 mo
156.893 703.52 156.259 704.152 156.259 704.937 cv
@
323.644 703.533 mo
416.907 703.533 li
@
324.065 363.376 mo
416.914 363.376 li
@
.354492 568.884 mo
.354492 498.024 li
@
.354492 483.845 mo
.354492 363.376 li
@
1 lc
1 lj
814.999 713.788 mo
241.453 713.788 li
@
822.084 1103.55 mo
822.084 720.874 li
@
814.999 1110.64 mo
623.659 1110.64 li
@
822.084 1103.55 mo
822.084 1107.47 818.917 1110.64 814.999 1110.64 cv
@
814.999 713.788 mo
818.915 713.788 822.084 716.958 822.084 720.874 cv
@
243.829 713.788 mo
239.913 713.788 236.743 716.958 236.743 720.875 cv
@
236.743 720.876 mo
236.743 720.876 236.745 722.055 237.292 723.616 cv
237.84 725.178 238.817 725.795 238.817 725.795 cv
@
626.608 1110.64 mo
626.608 1110.64 624.981 1110.55 623.864 1110.09 cv
622.749 1109.63 621.338 1108.29 621.338 1108.29 cv
@
0 lc
0 lj
778.147 1087.81 mo
795.157 1087.81 li
795.157 1096.31 li
778.147 1096.31 li
778.147 1087.81 li
cp
@
650.588 1087.81 mo
667.596 1087.81 li
667.596 1096.31 li
650.588 1096.31 li
650.588 1087.81 li
cp
@
778.147 726.979 mo
795.157 726.979 li
795.157 735.482 li
778.147 735.482 li
778.147 726.979 li
cp
@
310.431 726.979 mo
327.439 726.979 li
327.439 735.482 li
310.431 735.482 li
310.431 726.979 li
cp
@
748.243 1092.06 mo
748.243 1089.63 750.209 1087.67 752.637 1087.67 cv
755.063 1087.67 757.03 1089.63 757.03 1092.06 cv
757.03 1094.49 755.063 1096.45 752.637 1096.45 cv
750.209 1096.45 748.243 1094.49 748.243 1092.06 cv
cp
@
688.715 1092.06 mo
688.715 1089.63 690.682 1087.67 693.108 1087.67 cv
695.536 1087.67 697.502 1089.63 697.502 1092.06 cv
697.502 1094.49 695.536 1096.45 693.108 1096.45 cv
690.682 1096.45 688.715 1094.49 688.715 1092.06 cv
cp
@
643.502 726.979 mo
660.51 726.979 li
660.51 735.482 li
643.502 735.482 li
643.502 726.979 li
cp
@
487.597 726.979 mo
504.605 726.979 li
504.605 735.482 li
487.597 735.482 li
487.597 726.979 li
cp
@
704.305 731.23 mo
704.305 728.804 706.272 726.837 708.7 726.837 cv
711.125 726.837 713.092 728.804 713.092 731.23 cv
713.092 733.657 711.125 735.624 708.7 735.624 cv
706.272 735.624 704.305 733.657 704.305 731.23 cv
cp
@
590.919 731.23 mo
590.919 728.804 592.887 726.837 595.313 726.837 cv
597.739 726.837 599.707 728.804 599.707 731.23 cv
599.707 733.657 597.739 735.624 595.313 735.624 cv
592.887 735.624 590.919 733.657 590.919 731.23 cv
cp
@
392.494 731.23 mo
392.494 728.804 394.461 726.837 396.889 726.837 cv
399.314 726.837 401.281 728.804 401.281 731.23 cv
401.281 733.657 399.314 735.624 396.889 735.624 cv
394.461 735.624 392.494 733.657 392.494 731.23 cv
cp
@
793.596 993.088 mo
793.596 990.661 795.563 988.694 797.991 988.694 cv
800.417 988.694 802.383 990.661 802.383 993.088 cv
802.383 995.515 800.417 997.481 797.991 997.481 cv
795.563 997.481 793.596 995.515 793.596 993.088 cv
cp
@
793.596 823.009 mo
793.596 820.582 795.563 818.615 797.991 818.615 cv
800.417 818.615 802.383 820.582 802.383 823.009 cv
802.383 825.436 800.417 827.402 797.991 827.402 cv
795.563 827.402 793.596 825.436 793.596 823.009 cv
cp
@
793.739 1058.29 mo
793.739 1041.28 li
802.243 1041.28 li
802.243 1058.29 li
793.739 1058.29 li
cp
@
793.739 920.696 mo
793.739 903.688 li
802.243 903.688 li
802.243 920.696 li
793.739 920.696 li
cp
@
793.739 782.493 mo
793.739 765.485 li
802.243 765.485 li
802.243 782.493 li
793.739 782.493 li
cp
@
608.907 1039.83 mo
607.191 1038.11 607.191 1035.33 608.907 1033.61 cv
610.624 1031.9 613.405 1031.9 615.12 1033.61 cv
616.837 1035.33 616.837 1038.11 615.12 1039.83 cv
613.405 1041.54 610.624 1041.54 608.907 1039.83 cv
cp
@
656.942 1087.66 mo
644.915 1075.64 li
650.928 1069.62 li
662.956 1081.65 li
656.942 1087.66 li
cp
@
538.505 969.225 mo
526.479 957.199 li
532.492 951.186 li
544.519 963.212 li
538.505 969.225 li
cp
@
406.02 836.74 mo
393.994 824.714 li
400.007 818.701 li
412.033 830.727 li
406.02 836.74 li
cp
@
324.398 755.118 mo
312.371 743.091 li
318.384 737.077 li
330.412 749.104 li
324.398 755.118 li
cp
@
455.575 886.496 mo
453.859 884.779 453.859 881.998 455.575 880.282 cv
457.291 878.566 460.072 878.566 461.789 880.282 cv
463.504 881.998 463.504 884.779 461.789 886.496 cv
460.072 888.211 457.291 888.211 455.575 886.496 cv
cp
@
344.236 775.157 mo
342.521 773.441 342.521 770.66 344.236 768.943 cv
345.953 767.228 348.734 767.228 350.45 768.943 cv
352.166 770.66 352.166 773.441 350.45 775.157 cv
348.734 776.873 345.953 776.873 344.236 775.157 cv
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 15.0.0%%For: (Brian Enigma) ()%%Title: (InfoNinja2.eps)%%CreationDate: 2/11/12 9:03 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6l],8mE@1MblQ,[@!RdJ]OnXcQ@%_79Pt(r!&gU*p_(ZcaRqhU9?5dXgI<;([A41eWR;;1qCj%bXY[LR)c!=1^BBI?0A6cj)%r7TD6hgY=^bHKfNFo1n4rT,K8dhD1[5'?$a:I<icp9Xehp$Z49H[+aglFuhQl"TLP*d:DDMikaF2#(Ct([p4pq!Rgu2t)7nmd5q!%hgTp$qs*R\Dh!$ns6]WOe$#Bn2?*1Eo]MRE?G6<He*X4!0E.U*/&2,PRr;V]rUS.Zo%WWiNGnjfoZa>rgR%A)2da;tQ^;'lHMO`t%?\L.NI[*_.BfNZnh>cg1aL<hZ]mTY<><Lr+ci!aF^\I\McbKC([!(i_>Qo?I=0G,$7kJ:7(9]pqX&lL=qtC!#kO7<B6Yk;Gqr[_O%pFkF;H)sO6b_pE>3lWD'^U@qHo[i7_$_rHR22o\lGkh-cbD3Rq?9`phb"nE@V=/p/G4^1k3IM\6YMQp:p"brfIldl4jd5m[hpNV3%(]=+'0AjMdooJ)*U\3OCrTuXi^H=M/5Q@Y=^&7/2Ic7Kf^A6r!N$l[08;"[,q9<uSO/bZ$U\pX:mdB1DSq$M"^%CABT,Jg/s5Lt8%qO;DZn1B-hN+P0gLEaM/Acs\]4T01^G56tYLJp;]DW\FC]qZp+r4TU=b2]Z+chg5ts#G4b`pY!V^Ad9FoCjn`,F$]Lk0k">BDi"[%NbRJ8SqJdI$)Kg;H0g[Ya02=dr_4H)HfaA(If8ipIX1c30;!ainsrJCc+E_bs8)a7oB8Opr#_X4m^lORhu2NYfC*:bDLU,I&q9fQ%bEoCtibq&oH;8O-0ei165<aSke][]oeR!Yo;t.t/F843KI/!Kjo=qtd2]MP:2_X(dj4ce=+.o>M:O]D<n_W,`&M:97'N#6en;"h#%jKm(+<(RhOf<nrE'YbY]ml0^Lrp&f.^Pn#(b,$Aao'bIarT.:KKCQlZ7Up?7a=m1m/cY;9J*HQLrNYnLi#R4?ir&+Fk?qQ0rr)&u%rL5IdDdUs5N",<`gTeWQN5bh^m8rj;qojO-?iTO5Gp!%aMgot5T)SQqe[bV\s.t/6gK39l5Q1Pm\)2W*X#GNR]D\8onED%P4b#1-%48n;KrqFSPA+BR=K_am,hgPJ&jjWC"J+JR/<]".Kh92#[EI=1(eUP@6gLE_`N\S:$eGD1WYJ0sIWR`KDhgB_G?dIVXoDMZ"k47[1%]+`Yqk%A'$lhJZp0h/M;8c+<9a(kE^$lFJJ+#u1IJHqK*I7-HKhu@g=82&kJq5r1!^[=09[-t3epFhp$T5NP7p[)<`s7l<T/$!jn%-`\7uVUG)91"uE)S6isU,6N&@&fs$@2#,CH\5pVuO1-hBp`I'?oCH%e^AdERo5FX)oo!Sp>ku">,_,\7$gV`7s5iXKYJ5KKf@*(^%mIPPj^OG_<jmW6CmJE6R5?&S]`a?H/1QJgUF19iW\$*Oig%+e4^HV\[-.htlY7LQln#aJ)`SeN^O+$S0o;C>%$O9^8m['iDs5D4l%kHA6AH27lD?Yl()EFaaOm?cQlD?'@mjN"mjU.[,";I"@hohfV^XZO-VpY_U?1G8ObZS0&h2G3^&rmm]3\ap?J"WtUCR6q<APYa^X%2l#/_]5Si5U5L27Qsu(%f%AtV]T)*!([pBOE[dfO;Tbu7RTd9o\*9FNdX?G_I`inTS8undPa6[1c0'J@+,VS_KQ6:S;G&OCoQ!lJ%bIQDnqsmQ)WiNjg)Jc@`Q<J()^#%8nXe+ia]rqr`]]FC!cpi4_C:TTfSnY>"G11?`RK%cgmRMPqdHJ<"*d\eOpX*0JI6?6\eo+$g%mH7@77_'W&Tg.=kiO]sp7&+]WhY/@:aeOfThMeVmN-9+6b;]'73su#"n]0CR1Wg`\4dQC'[uQC01'W%$]/c35Rl$`oUPWV_kOcdV%oZl:a]RF7#[kY.3rn\uG9^e?SRbPigHQ16m]/%/#0Z,L9_^t]0VKiH)@iTE'RU,X14BJ+e)Ch0@qqZ'!a[]uk_iu5jrQ;L.=oX;'%h_=_jp1<5:Vk/?Jk-*)ochh<Q^J=]Hl>P5ks7j.;`E_9S%b6us\WiN#>fo`LUY7ofcfO7^en[(0_RA4)h`mGaPNuIGOVt!t>rHM.%fuCUcmkL`OQ$$,=?4Sj8F6dsd2kF9ChSRaB)dDJ!35[et3m0S1f]4m@gG7H'\p;.Ijg*iVbO_UgcfHPNq0/pe0-s_WbBfBf8S`A*%0Uj]<X%.prb/mds/]p\]FZ@\T=b/`mDI`4mo>6Euk2_W6UB=u,[DXH1bue>[])5Z/Gq>gV(=Cr?5(5&Q4;Q/c==3cPJV:9Tl8E8I%[b["D%qE3:R,6SHa."uH4kdn^]Gk,,ho=Du>K<PshVRd-5!1s_5MSDl+)V<"mUQ(B_0,<9HAE*j_*>I,L\puG]DM3umGQNC/?q7e%E5!D5j$!rJl0mHa_qk:Ih;.npG4>.<NKmW7b$D_SGO[9oL?m+qkPOl,q0]msbb1T_=PdWUSTKnT0MYhrqf$n3HZsfXIC^:ZCSQAj%oJ2E?L0MFK\oC!jO7!Z;TbF8`f;[f,np%Q%?I7T>Z!d%@ni`&#^)=-2`W27.ieL,fL;S3op;R!_+`mkDcq(RLJ]\h<2"jodqoau4%G!G]UH0i87Yt*LbhD+#"R*uo=0S\?lDL=['s#_XeAkYW4IkG57;Mj/\otIs60P9Wgbh;BN\N]/ZN`jS90&r<rT3Za[K6B2`b3bS^%5%_HfH-_-+$nZb+!uE$`1V+YZl+@J^F>Hrh)f):/23Z&&$%n/Hn1`GAh,mO`@lsCh^?XX$H*"ILe)p5d9]!2Ee'@$VgMA3$_*$.&%DBC`s+#Ss3M;'DG`A*-/L"jYoiAef(E;nh2aBTd!F8O$aq9cOZIA/l=Zap$r*@\<Tjt`KVp;QF2Tq%400"[<kN[V["IeL`I\c$^C%nsfU.INO%Ygfd]*<K97NZ)Wkb;\.3hI!L&<<c%CqQeMI''e/m!a9k;'U(9*dq%.9<`eR/mJj)Bn0b9[#j$:hB.HBp_b:B?VP?)bQ%C/.sW8ZOjc2()?ZqJmFU:K-!bcC\9=aJVhb/$A2bVg+WI^F*+(IttMp^RouHmeN?U?B2S/:*5bQ76-rsnJ&T<[Xh\)P\SK*NThQs%DcapEWA7`kZS/+j;N4DnhB6F2OKATXWYhd?/<[A2dAdqPTaq=XKF3Q)%2t<V]`B$IAR1'Zhg6,]""Q6s7A\;p$`U-"XHJ=So$Uoo%Gqd%F%8PO\8%]k4nSW<eqqHn4,FcO-RW3;m1jE[W!If";2Y\an/`Y57r=!R+GV56d.\sE-q2KLE_31W_P_>2Q9&]f"TPXCY:(cn:%Z#M5J'5$IHdY4YN>Gi+$[<kcm#Bpu@l^#(CoCn6P^;Sa@=<>]GM94Y\lIVHC'9a4Jmo^q[#1&(tp`\Khgte1>3k5(C`lcRYR!WCu%LmYeak5N/tSX=b6k$FId'79I!U(?[@a5$X;\htosF^l1_9KmJ',gd,\s*t[r<_oPH]<A<KB/"``Sf#5!A+q7J9=[?&.!-/"_=tt7%QND;]O+r!F*q!u8E7mQJBda-2U$*#o'E<T'LB98gLN9i.NMD?_^^CPM]c/-uM%TC;+89ikn^jV!/40BOAXPs0X_<Vtk,4JjZ[B@?%*r>H*Au.^k0(RV?Q%$Wcb;[c&aR-n$`]ZEDAKSq,5OiC`W>5=m<6,aD+^NkFb,(u9g?u>`Y`3aW8SoBr<jS7Y]kWY&F$^=PAshNj%6gSX`Zt_N:C$5Qe[^7:Z?V=jZ.:"P%N;iUsWpru'J)$eiqrd!'+bmq3U1>\l^Ch9^&O/C"6g;?U\O/BPcnNjdFd+4aA)dU]0U-r5%ktp@a"XCM8+5Ys@9)O0DqVQalq#@kr^\p,lmW$p0qf/Xkj0J^Yj&ES0AcM-P<K7mUR?q=EKic9G94JX_)O$G/a6VrD=&7qS10UO]%++NG[B58\oLukP/1mF#@K5ulj7T$GK*p$hjKCqNsW,;gJ15hu38j^WJg9U]7PeOE]Z<(.[lRg6sjUUAn"WY5?G/:?2duY!/HH%:r%N1t6mNU'A1\O!bp3D8&X5,pM=fLa=gWqK>uRB#(BD5V,5<?(3O>K8g@_d.b""D>@3[&o4.F]qmU@l5e&d&*3unUqj>gbVJQGq!;R%FX_/VI0ptR_U<J:Pd?XeV;*`c@?tcNV#4-A:9Qlr.=!?d5a;e5GqEk^I47*J\R!@'.4dZ$OJD92nhA7Iq&9"bSNCVRa3U(D-SM;I%V(SSrV(^qBQ;&XmBce0^H!1^?j4Q+N*R3/N=jI_N)Y)g&O=HUVG+X87=oIp]n#^,KD?Ge9Clr7a>B@L+lDN/qI6"*4de]^2,HBiW%c**P^Z[#aCdf$WLCrg+-WCddfD.ZXhCf=-Rgr'A;a-Ll-8PgYR\ph]nF`0l_j8D`"qggmVU-_m]+]ehFeAoFLGLECDju>1R3R+T>%j[o;qZ%'sbWDtkEOFhCR1`p:5`;VhNB9^$)S5#=$^M4Lqb33%K=/TF'(gZ.h:oPoQpbYs7s6NLV+((_1G4k%tU>0$'kDQX+lkn-`%7Wu+OA&m"M9"cWaHROZ401rfRi^L\?0n`SVo8f/.5?9&c5#s!Na5'5lUt`p]U`V7O%d?\I>[9t6>5HciF1'e@VVJ97I&5V(/bd;k%WP3OYN[MlAc<V4_).Lg9\3UO'/!enueD@#GLNZMDX9W&E;XV&bcS/gFCg$)::)^=$b49H4'pD`8#eY%cjZJnRN7O&Y^`!oVZ&CSF%8TQKJC6J6H=4Hk_9G?'-?&b,W@;5[*D21RDX/g"t/?d+%SWEDaOAN8u3hkenQ?1Pq/esnOH8CeTc*Wt8D?J-Qp4BAi`CrN)2^.al%'$`gt.,b\,210I1&%NW0*M3/:f?Br[2"U4'SViGW2sBI(=._PNqIu5AkhiV#>3ir)cKUrRs-5'Gja$U(g1Y*u`d]rGJ=!3Z3AKO/%P[j`:)\0:CW.db@HPV.LR>4b#5%aYrJ*"EUC(::V_W/Bd@:CA=s).`XZFreG7VXkkgQ<J0pHQb^H,VQ4M17]jpq`T9OEnI%9M?#N%()ua#8Yh5+ppbY@UWS&nH15m/`s;V3EAutk)gD\*HGissI4lr:j'@oY$/@^p#s=qDo//An&^.d<W(t<RH?_/#i-p**E]u&<h/)RT%EG1Mpl!\(UFF#h1hQP%OgZdB:eTC92'W7h<1teS5_4,_nIa!04?@$cs-?_r2+j]m+fA@&em;C#@&*(=lpYgS"kkFneg^egZa@S`B%*jXSWrVc\&1QH!=ZGm;qU9IfOl7@<C]G,Pa_dM&f["+2PLH;]=MFX5)<(3Y?-kprYOcOJBHZN2t*@TSojt\eVN>8_')(22Xp!mlO%C5>i1TXK<M5:Y!ZMtTno[eHYVX.5q/rA<*)d4:o$'K,lqq/q<C]"oUC7GhE5TKdX$mT3aQ][_q\qU0#)l*XRPZ^QEh%'.rU)>K3C%N>-59J*s<*;@nK6@RHW.[:sKI2E8+f9l&S_@C+h1s%J@.Zia(>DQ:"kN]>p?)BF)\#]*;[Zs'oWA#uM/RE!TfEQ$2C;RdJWOJbNc%RUi=aFrG;^3k:fak@sn^(N/GKk2U/TSu1XCO'H3ADsrT/\&X3[qI*5XV[BHiq0)G[D<@kI1)4>#Sp(CfcZ#2rE0eghQHsN9O&f=G%_c_HbcY#5\B/n(I36Pqob@`fXB/n(I36Pqob@`emq[@-5$toCS5Q</^r![66$toAEBDDOtjeDi.)ujscBt4AS*+:Eh?jk1e)e;F2%>IZ)oAHfS;Ll6jiFJUG5"]1P&Z&m)Ee"nuX085*PKtX_8%%<=B7^<e<4d4Oc@Rd^Ib7Y1]QDWYMDHJr:]=@dW_H#MOkS,+[ch!lC%[N"X6@mqW3Yq<1HV'\,uX2O?oUXU/G6g@\-@!^!I*^uAl8]+RB*%>.e0Z0I+3M?q>l%Dmr6eKW-T[&8U;ReUQ6"^ahH3m!FN91I$%-NK(-(KS*<cFgo\oiHeFhAWYdk;KZm*N]j!A,XZg:9V=g#jPQo&b,q]',E=i@4Cpe(5g(+Z,'P9G+BlKk@SADR&++@^sZJRUP\$9%E\r3'Z<\\]4S/`;:`!4^)kVn$@riY"[DtWT&Q(&*C-b:*MbS&:kOn6:j08Q21^[Z-<`snZogeQOqWGBg]NOWgpoIsIpOK9LHno)p%/r.$]"&kPF0KNf,IWI'$,E(Hgh(mb=e,<81DsJ[?GLedDjZ2RHHgDQerKTgWdN7Q>)[PctHU+a'=o:V>s+DV6K6;;h?N'?,cm!su%^6YudqPOT4mZGPke9q@%b%C<0r98j1>V5$'>YVH[oCth@m@ta!%&3W(iIBbm+&`4o<PVU]5Hft&<NZ-1(%HXnG#an,3)0!ZfrgJk%Q-t^GgJ@Y9(#??:f8(4RrL^o5I[oNdLY*P0mEar&5?IWj_G=4kO+H_J0/RHk,c0\uVIr$lZj`\:Z&W]mhBfku$Kf#mn[Uo2("@"J%>Pn.?D-[g&hL$`fVg&ET-%G58_<1o^^YVk8k'c[S-%W+nDr$`'^&-lmCZ<na6cCMjp;,+ZMKoBTFYetl"+9ITYcNH#!drO+WsVm-%OQqLs19>:J5jF4Y]2NO6!`'8-2BcWFANCF#S[)&n>.UA!(Ha.Js.\e7SO:ULl<Ro;c@+il<i(d!b`uV\;T'-DTOA#kWc\j>h!:$D%kb_p.diN47n`X+YNRZF-]g';VU;L:Q3Jo^bM<af7.)t\?mAf^Ud_pXKr)egILS2@7ESp.EmX&/9&mn"T:[Ig%qV*S;C%EurMn:lM%aVQr+'a[(/i"HQ;M"#6d$=AAC$T&hBl[TN'@DiU&^0Q9._g1EI2UM4+*8eZS(D+-maQj=.^;A"dT^j>;Hk.sPcaI6+O-oM@p3^#0%m\6'^@'bpQ8r6VA\loN4\fHm4O-TQTC&>4'IdJ4.2]kn7\%CCU.T_B$HJ+Tk50;-ZE8=;f[Z>au-Nji_%iInV0^r2k_"Fp_LE0u:%?$p;-o=IC$T\Nc]+kVP^ZlQ_gL(]_fLITBIS4_KY=E\YRK0='+Z#5=VK70i;52P37F`<."\;W[4`Z\U,,95_Vl=GXcFsU,H>0t-o%n:e9ONkXW<\l[6Ci^7h>r/KH"%)c_fmaXEh8t^!%gnNEUVjHMVpXOjJp>rjfp\ThU[ib,Hs0uOhePB:2Wkr'4hPVWk7nW47H;&F[%g!eenoq!RLXN8IA=-^%A.c$g6HLedUa^P&[lf%3<6d$sE0#st@HbQkf[uu.%3l[J^7'hNl\M4#BIHY+!;p`sReC;LA^<TK%WX>SH%IW-V0L21pF..l'<8%hgR:u1?$YG\M6g_u6+o=[[P,qXQA8_%cUI_o3bqFRP8ePA#3d=&mbMXDk<Pg>t4VFEF-Br43YI=f/O[JZ++%beO,Eh)DNDSpiU(cX6W[48dBJ'OG*:[#\;09+H`c]?KCQNkI;P_5m$?>AcispY,tZB#Z@V+"g'?5h[]nQBAO`<S;nh<J9^k)-FNP%?V-J1$rsB`@TCqCGqlk6+LET?e3KiD7OlEE>Nd+%AqG#=L@I74`>FdUmT:_?8usd,\4#Kq6Fj&Y%uc.:TbL?hKV9,n/m*$ZQESp,%(mt5O+Q&s6'eKoS3/U#>jUS/o@`#<V_']B`#lZHY*J!$+F@jHG/ad_:qm@D/%`d%COWLt6!dqt<e#2b"V&da&8[:SZh0-;aCMsaM%XB1<Cd+7kl3!I*#?-'[3eKVL(/RG]&q\=J9red=PKhn0i:p#9om+76Ebd[2<+0u.!!Ye:8`<BN[fWV"INiuuUMjp^iDf7Rpik.W0%Jm&.1J@O.2J$MnlDR3OGMOFDWnUKD].t&,NT+UNp)0g;IJ6fGQkp9'\CaJDT>]p\q.H^6U/[]>lq4]KR]tRSmeGA[=fGMWtDrX%`%9\WeElHUNV7[>k0m@_(lnh?qL]+R8UW@t=OHX0]Y28P&b0jPg=mVl%_UEs^/k/UsLlWt+7s/Ln5cP?F\Y&N6&F)S:1EN"eB>-ZZc%BPNU\^B_30hm(GpQHcWS;1MY?ms<rWKEHOT#!O.Xn;\C%/R[5%=[`K23u]YNZ+06"YQ9D-nD!O<o(I^8j=ZV;NNt,RjYWl??')OP%Ogi`$bB\WP*Yo1P*GhU3_\IN@8"b0<-=.+DX.\7h^g+g\;iDnfrP\3/.,?sNl>@$]]gZ?+%>)4a^_UWr!dI]l8.=U>#3QFB=L\f:%2oQi:6o*j<2%`V5Am4AqW*hiZ"i43sK!jZFf``V.GUSKpBZ#VGbR3dUjUroF4cZ31iAWZC.*<8Z"ktZ.i##M!%kLgM$eF6f).##J%jbBG[).IR/F*M2G#5^N<)?K_c2'p?4Rgj.(dj1_Hj5D5uD[Ah1R+E)K4f1W%GQiTCFGQ)V6,;C2&h>O&DiRmqr&52FRmFh/,ksM:%4@3O[iSY5oQJ_'piO>8<@H5^=i58"$aOq]qag*`O<87S.qQKt>n'0B:Ao%QiI'lp<DPb'ZUOL]b*A;6$QY=H1!QrlC]j8XofUm?b%rm%0@$DLEpdZO!NoC$r(SauetG6Hh8i/KKfJ]Q9nrZo"g3"9cd7+gisW(YLWH8(#Q+W>R:'4ROFI66L0/b#7+.mY'pi8#9NU%q><%Hcc'9E.$HV-.nMNUr&7]m3nCCaUIA%o2q\L]e*m?^%mS`BC==p5&T_cl-"Y,Q:tJ0n8-;4UF/lAcCsnfRO?O(/f>?DNp1D):u1RM%XBEgbjn<H"OipEObK'Qdf4$tCi%BamP'l7ulam!:-'6f^`2>fN^=r.,`4+E12AkjY/]k4T(n>N"D[r%XHq:r]89Vh2WoK#YZIf74%mF%W(\fYBLqu(`rckYPYs70LaT0*#Al`]0XI/fcj1OK%<@k=?\;E$RbN.J0RF//X)+jo8a#0#R8>tO5#84ro&Qg$jae#:RM-`LYM%jeUFs[$m1ZF$_`3XlcG0d.!=ja3[Vm4s_gFVrcB.b7!L2<>kba<a7c;rj5`+aa/97p(R)j\ACI%D*MQ^+)e/DKlZ;SHD7"$0'\)J%i%jWC5!8f]h6KggN/3e2'5dJ`.`XNJ@jKS5;6`A$%5V2J<5bO*Ge(Rm*\7<Q0c]^%KX(f=q.i4gjE?N-.+eK>o^jaJ/K4!H6d+#P%mI9u`YP(f$T3fLO7ti%j%I`h]1QA"N7Q$SU3BbmJ_=qhcMmm3m42g/V00C:7Q6M"?$P2ClQoRCZ[\W^1GJ]fj6^6SY[LS"6>bpOZ%T*WQm;Z]2Ej1(P<j-Z!>Q^2-.,X9>`gg!:_m#,HE\G=P6I'%5:aZmN;-`M'fE*D))Z5Y0fUpWms\?^nMm-f51-=39&XG,"6UfBqN%N-oCD6kouKfoQa*b]guUA@\([igfJ'SAUe8=RloniS+]1$A+5SdiEFhll_H5,jk*A\&^J,IYd6F:p1JZ#*HEC__)6FGEsJ0KmXje%HW]J*V"!1U3I^t_m`O>qDg6b/G1bF6$F]P03F\9q/_bgfIqmYcH56H$(%2#?9;'o8Pn:.BGcg;:;S/$ea-1Xn?]pFg=gkAF+T-k=%]R1RN]YS:O6[h4T=586])Y*qa.qO(o%mRN#=0:sZQJK5kG?T2JLS<FGoA4U550;>UF`ZNPGf4e,o@.kh^cXK\LVQ6!O[5c[\6D_.%\<s7mWQNFbgL@LXG,p&bh.acqjnN>EH<[oQ,;pOJH[WE>.^n`+ofoOBCLt+Qrpf)78VOamml8F+*NM4bpp$:V`a&8CJhsT82\mqr%e]u>od=UFj8@DB!D7%#j22UAP/-\hj4u;dJmB[\T>XnV_R`BeFlr2OPQbjcK)VokW6NMWUnL3aO$JU_BB"A`bP!^S>0,"e9m+'Wo%mKReoE7pP5J/LMT+7Pb*\O>-;r*Gk@X</u8rNdMncTegR5J;r(Ns_emeteTBI#tY&GK1-1b\4gJ()NYs>o928")/:6X[gp&ohm.%%o$Ra88SYm9FrSbuHor]B@86n'3hCK[+8PZ'AA*lgRe:DlGBh/r]BA-\l^@Q;Nh=goZd18`VP,9&m=;mZ2jU%<J<$Z'Mo%.*Y^Ms/%dGP>=G[;"7-Fs>^+EbF=p<*d>YW./nWO_(TPp:AlUQ/,@3XK^W]rjl9q(X%9'je(7X,A77'/-gD&5%,W]i\,ANo\5cabkGTaATLl%bfO,iK%fjOg(`=SB)#Uc#[Lq6JO2:QW)gfN*P5[rL=k4emb!"E;`fVX;fK)uRL_!ih3Q0iYNSdYE0ST\aRgKY9Iig3PLV'(lMlqS%i[8P`Is%7XSWWbVgKZ])OtPsE>+pX)f\a.?\%&dZJ(Tp3;7>R27t[@p(0cu3;bCjtLj`e-*m2/$P]97<JeGhon.u]>BVjJ6-Sbi%%n=H]4RN0IM5fs]r,F;\(]qbaD9Za\gjtL;.dXq^(cf!*]]<>^6BFaaD=]"8B>sF(f4Hr@1K;ED-`uSg1[uW8jpQKY=o^,"t`_-J!%>QGr51*HV$ZLD0<l470NAQN:0TQ]+BFh:n/@[E\eb8RiqI/:n=KCh<HTA/oK8^o,<AY7.bT?ZlFXqKuR>,`hi)00<C_,ht:-1%9U%qsqS1Gh_e/bm>tR_1),c&I2?#Eo8T48`0e.^k83X!Y:o9^RY4'cMbprs5$MgH.^TABBV6saP/Ga?9IhQ1]DX)?_$C_cLdZ]7h>7\%:G_k[pE&P_4jWM@B%J@-`Q\nfI_VK)s/1nBj&u.KWqupSFGN`5_J3'1-T\2m)PqpJq,KZD\:%J4(kaRAiU*,l^AIcOqlen)p#O4=%=fd,*ro"gm99d3hpA+U[0AjG\,0.%Q?[_\2q2dB$JHUn/^AE"el)E"(>N=VprHOb!k_1F4N6@jm`kVN!naV)>ikM&4l.;h_qIb$K%P3IJm*WLc'?LogJe*5Q\ARG7nKWdLB^JDVW@DZr5e/<'i@`lbB6QbS)"YemunXh5*N!@bChAe]=PP;JTrq)`10R*Bdpa:cn@hJL0%3K<^i$?t!TVh9WPe+gE&g/%[H94N7+?^#9aoZ-JmI2Z;^-U51IBi=?qJ#;[q:7!g00_[F$2J04TQ<U)+(1Z[.A"2ZOS\H_())?'s%Y3l(KSGWhEM>_-+YIX?Qq59@mlg4La?W%mPT2n&MP"4Eh)#.U1a1br1euk7b@'*;<;TdJN``?<T;VKT)*<l5slYB:2HJ8>a80&^D%A'H)6e:.<`//1mf/Z`NDEuK@WCGs5d5P6en2TMd]N?nh!jQ!Vp9BH)9DUl%lY'u=,.5o_sVY.?]^.u(Z8Z*J4>,PQ9UiUsS]sUKo%j4YfMnRL%g/hJl^4jk3<O4G3#*pJn2VK(u7-=6SE'7X\>:Ag.\+QXIOri)Z:NU^^(ZcT8Wb<(78ldM0b(u6lL%rqT/M0_Hp!A1[V%-&fsq.`*#47lVd$U;,0$_H9SjAG/\8DqhSJTtdeu(_(o@3mcEpbIkUj.ChR;9CI&m#a4n2N-co<U;!A+eFa:Ldkitc]qD\ih<q,0%FWXtpT$JmOKLYX8kgH0R([j,>k8*b)VDR[U*\2,!9(R8.j7Ri?OrL-n[hkcmgrCJaG4bP%jm3ktJC\/D0C9ScIBg7L?]XYsI*Yic%p(l*E4dDo5d)sh2&(LEem#Ufs>C>^j/7Ga8r9,=nF)*T,I=4h:#-X\Bf^H-a,G?Jc"aYKB)gt@G`qgV)h,afu)FCQh`jcItXP&K?%hj7WB1u1/qL$gL/A_hb\%;nqQ9V33gbRlqf3q3%#NmZ2iXTMil]ZfmdQeeP["A/KONF8qL[u-?QRIpC%g2srnEn5[;K(aRmW?a=#%?U^:kS\B?8AbXm$J>RbF'lUi?]>A763Eh4+/8]%UIG.&8"tsA,kjM/+7RLPL/^`21q]+L7h0n!IV<L)*R^_2;[P/>;N`CY$A^)d<%:V1;di"`='rI$S6,kT$T5YmGZUMorW,c7-f4s[No'N:07l;6/J-b)F^i/e.XCb,cYl8S7,E<]4D"I5&[0QuCL3&pL(E_2Z%XWH]e%E?ZB)Mg#*g`&6r"&8Je7dJAsY&;8K[KiFWZ5D8uN_OC1,#ZtO!bLVG>J8DY;+2p(G'@=*"2%PrrB'[D1IAlF>ks^S!bB*KZI&=Ro%65A0:X;>Aq9-Oi-68JEPlHWg1k]MV&f&MjmFC+dNLqt_8>)0%Xj<3QP4m6SO5*^F_k;-^nls*%28n[kEnkm5*B3BSWZ`H;nAm%3k%o6_7Vf,j0=CQES/Iu+*#?.(ab0!02tIF;7_9%[pOFOmiq3pVjk@=Qqt7;X,m5*Ya_V=uqEbO)q1^AY+`oCIHVq/7YYEq6uth!&GJ%DVJn#fCaLAm[r"!BSsfZ?L'73Tc72[PJ04/itQ*H`a`QUb-SLIBA8o81jk/fW$RPl?cM^.+d0g/lo21^AlrRfU#U1W,\+?P_BtkZ%hH@D@55!<JDLUh]+(ojn@<SQ2T(FEKhg]fHj0S,+epTbXJYB?m<jH?BS.F.59#gUt?.>gT$pN'cVWPq@:^4sbI3@^XP^9q)rZbrQ%o'C\Ya%!BS)_QkgBJd=`\CoLVLUVPfN(T[IYPYWQ1mUc-(QHG4K\X;?r=Le73AtX5j7!N_4c[PBkRO"BO5osoN/s'sNoT%Ip%Xu.%ag@Qj??>V6QnDF^@q8PZHqbjcAc$E'D>nWi?Y`c(5)jE$BNrU!gA98A;A:@B4BVI?j>L15QX+p%m)De,hMXJj3-eO;80N!q,#\_F%\Z"RMH+s2`#!_)JMk.@N?G=;Z(.WG[pL@22H0rpUaWk>sj=g9q)`$@B]Z_!kEf.UKa[t@^AQJ@-fd`+Ra_m?k`LGFu@.fFD>KFEX%R[$!%5.i<N].$uA3_nAb0)IiS]@pmDO,sm3%Z.d;Ema)1^0AbsNDB&Ip0#K^j?o\p8[We']\t<9-,4,8P'==[8ff,t)C=Xb[u3^=%1&Gq;kToV3T9VN*4u>;1mG]dRG=^,P:@dH5S)dlBZ][i"qaO(5j<D9NZoo_]g-qd#]]0s;P"3Uj7ap;#WPi;AK,g&Ta$pm9DYq^O%*[*1rrjP+.Ih8l&aFQFHmUKe@n=sPX@b*+Q"[3Nd9Zh^8C>XJ`;'-*n31N13r9&uqRP#$%5=8ECl"Me#1@QY8%]85Y&TM>pe=DH7%YVJ]*[n,48OZVfH7>8+BLX>T/0,(n$5pVBr'8Mg76]j`Ib^,N]_N9f_8LAe'Q$<pN$8U.WBGBK0,0$Nj!5.s3O<6e=n74Mo\Y#nb%BDje>a["0-64ZrMlXC9/b[YM&T-%tr[BfoY"%:`<JD(Ca]qia]=AKnO%HSn0HO`h@EaPPb@t92f!-ouZdGsmdd??cJf."d4`jZEa%$/Z8(iPJFfT&`?(M:*P6e$nBA\icr:j!i2UWhbuF\J^T8UN@nIc)7U\r^-=D0^lj/Wi-&o3/H:@]b1l[a?GUg?R_Du>((L=%/DD-%QC]i7`83u,YHCt)$>aLZ_rS=BErID%Yq_8&OOcDpPG^8PQ#0$L:)'bF.^BR%b33%B,54ja,V@Lh,S&pXe9f41%T_Sc\aE1@%8S2f%31*B47ELCq$WWALI+W!HL$F)h=<kdBHB0tKinu&;Y59WcieQ*4`Y-;7FhbZGB\J^WEfJ2^\]6%^N-DEo%ZZo*OlNB==3=>f5U;Q$%&49#]Uop7cJW$plU6LJ_5/RjQ34IJ>,;dIrB"VKFDIO(7a]+H/M%.a(bQVqOBst=6l(9a/+G\gIJHkSMXYHoVA>s'p9i.>!qQ>Yk%*"?lo;)`cVQm.kp!c\W,L]LFM?]QHWd!Bgl=0"3Den!9WnecN'2r5p]@Z6m;EX93`Xc[c5Xuc8+(2HT9bfl5J)rj`FfJ>!reROd&%coP$B)U$0H+g]WtaZdl%NL:eZ1!!5iOM"h($aQt2b_tg5oILDRQ[@:4c[\qH502F9q^'Al*XmfX8g$#CW'O*GT,]p6'b#-/fX30Z%N5eK3fL.j*+=8C(mlW':j4Gl:N3*0P[Y/D6dYlD'[C7WU+Nl-BPcb36B<q6iaC%#^-\CXmK.6L,A-C`@KD9bdSSR;:7s4FqdFF[N%*"iR6BcI-*49b)@aG!B!+f<K[mN@OMHP"6NJT['of!9?.'2FN5*-l%6UlO[LYu_p@E[9%*p$T3mj*YtMdm\7*`ZYljF=J3*n9I,+%0c$iiNseP)VEh=l9omIA]8T+obDA#g6OF2f)fc2P5>pH:m:_otdi#9u>`0R`J^-R386cQ(VpXF+VNU&>:FG2FUo>(69?%N/GX@.j%kAuBW-.E\r*"!gE]J@f0QboDG4C9^6Qc*(Vr1ZZ@Yn/oDoU(V#?;Ra]1),T,Z\G4jdndo``'On3%&ID=cnGMYg[XpCY7QH%?c\Z2%"-J@8Vlr%V#LYZfb_;EP'QYOk=0V@;-kCKtH:(Zd"J+'hK:H01em'U(MGU,aVe#7k=Ti!G<;5SY,e>1?iZM9ad_$7MGK+pc*K(q;%!V$U>Gt51n<Ho787jXDW),a6^bna_Th4>Cc5O!crrPZQ"EUG3U?C*:Q_f:jkS8J7\0V.:Xk4R@EjQ9S&-"IPFG#UsB`+#-.)pHlL%)^<+T3@pdA6HmAlL$d;$&u(nY`5u8aONWG2`Y]oKlO/iA(pcQK"6%A;$9JoLYmP_+db3%09W-]?j2?)g*>(mpX@X%eHm13tN-)>1%N5@R$FW6Skc\A]mPH<[sqC\a=MGC>kd):U@nb-cOlT@l2I&P;WL[GODGdT'2A[9qk#._m%7<;Kt4En5h"u2$Ka\hmRgHu_H)3^h7%<q9ujE?:#E]7MMO*^i2;Zj1*W-B[V>b(Wr-JZu?UL&0M6(C+BAb0XlrW_AejnWKr)h$t3n)Mo7a!OLPNe7?%Qbab+ISL$@:`D5PO%&8QkuQ:o6;Ebt%C^ZAUD_WKBX4L#W-@76nj,/T@pcn%:6oo:gtXN![Y-mA[a@jL:GED1=X(me2e,#s]&!0X!"06Y@>Nrt2nno>/a%1-"@jX#b=<GGlBcQTt9`r".FYX9gV=fZ$H4WM%6>=Y:3WalJn.cSAB`.N$'b+_:;r5n#@[+nFn]CB^[@+hOFTTeU]kEimRoa!$2c%4*n[r[50'a3=`T+#:V3U47P:/<G9NH;e,mVc$DB,:m>)Q%+m1[2SY!J>[2rAI>Cr.')u?(8X(n5a?ZcFP=*tR%6J']6Z<n7(.8iT%7/"F#DGYaq>!^DPTfB5Gr?)cj(O?5SFIC:'ECaR'&E5YaiE>0RW>/6)EHq^h@lRbBh7qX_._/Rt2mtTY#+<>NjcqXDGu&\@VTo1S%%OkbNC+BJd[:N&o-]&C1j<EXBkXAKA@N,Pe`?H`T_Fk&b*$+;bI?Aq4L+d`Z,\sAGj:*\/3\as6Jl(!=23'86[Y_=[VC/3tN@!_8%)M@$2K^-aS_:g&@$dok6m#_/c\SEG&2QVZtiN4TRLks8_rWpM$%X!kuJIVkqfXO2bW+-T[l:7s.lgR;@"@g'*S1iNQ0PFCAKapm%%k0iaB`+"<71:t/O3#$Jj7ALLmmJ74V89i5SoSI_LfAN[o06&0k#Z2AG<78r]fI+;^M.d;t:/^pFQ=/;42OWQ"pS'JU;s:G`%8E`=%9-44p*H'flC_]8?WA0a)g"*WDM=:[TM?6P,bR=",S,O:aAF-4!:^N&"Y<adO1ZDE:<YX052-PDWA'DtoWs-Xn+nLo1#,r"W$(82E%WPJB4L<@B'&4^g2-aO(3'm.OSoISa/Ut3@/@5q/;fH:YA3@V4"/#D*Wj]O_rSC;*kU`Yb"S#E`)S@r(P/quit<2<NuqhD1!FJc%&%.Q4`ONDFB/Hbu5NG:[WomKn/YHk!@g&Vk60-&r\=#]^!m+S/D^ZqLP;5=>tCG$/biUbF1nIW6ps#+h'RD,l$AOttGXqjuCF&M%"B%XTG(9ZLLj9^Zs#eglf3A%;H\HJA[mV@E4n,V;BeIY;8"G-jHN+/fWIllpY_3_Oh(<YdoP.egWF&fY,oEU<c`U8r)2-a/0!%Cudp!%[]]nGbBBY@eY\<0k<WXB*4k7N<h0Q\SZDl=7l*,e"3.ZLj^H;X_P?Qj1m,NK(<jp?(n+MaAn.;r,]>;9F4R;_R$P$k=>V`]_5uBk%q@4h`'.>N4W\N(205sK?fJUaNjg'2B&dHe5&IucuSq<*KQj#Y""-4F-+i=3uMb$8KJsU:#>u"r/D.m[#gO?a1Z8fu/aY';Uo``t[%B^^fGfVcGO>;K;_IXDc"Dm?6Te)ap'-"%p)X).%s_Ml?EX/tVFR?_XJ!F%uCE,;Wlj""(mY@oZ]#EUQtnS5^[#;HquN_IbGG*ru_%9P81?qn2D&UPpl<O-@f0)CI12;WH-C^s$pGge^\n]%7#:;)?4CD.GsQH6![*n=`)+=V74XK%.bh&kmj!$Thm0W`@OnZEVfblQ#(?%lmY[G:fg^S=mj7"6=*$f,Vu&<"Qp.dn).>S\P(M)^hH67GVY'QmJ?]4%%46TlqemgqDFk")F=Wl)GdKRFWp%=VB$U"39N9Ge>c"#%*1>,&IE&Tjem:)mApc.8G^khV;8Zd[XM>#?oqVWh'F:=*Q3@hP7oP=uCs5&nF;?CFe^sc+D5!I]1Xr]]Le(@C!&AIk=b5U8iGDgo%2^.$\HGO4:Xr6P`::PK]8OJ<o#`;MGpVn1f&fs".i`!&g!#m2h$d,DN_r+_KF2GkSNPV(;MbV=[c(YPkd:[fjpWDQ1e`hp^#Efg\%4pUX41phG?)s)pL2hF'mWpA?B*hfia^B]r\kZQ!%?50:b@RKJl4rb?.bjH?;iui9#_T^*"d)GrPE6+i@XMMrMXUa2!5kKbY+4RQs%U((+!,P9.2S_>`;C2feeL\$?H!#e6`omMq,L+T!uH$S&()Q]^8L30Ug?@>s;n?)?j!OLFH7h*:[;f&/IJcgOVFB4s^IPYL>aSE7c%WuS.6])&A](PtW2O#lYe3\_oZi;L^dl76E+!,$'m?^)s4>qG'jK9Vitl-T\h\uB4LO]FX481X1D>4G5JI7]TE&W[)unWI!ar#ER)%7N<`b:-VJ4[A`?1RDfZ6)OlAlg@j%a&nHZ%^hP<i<AqtbZPdKqlXDGH?(8(En5u_C<4$I"e@V_VQDTrq24+e]Ep>FBj&=\ST@Fhj%pB\lY<M-[&PKIB',d"n!_PP,mTCi=^C<.Z)HkJgKa^\'[-&Bpj'#s?p8M%HO/0SWo:XG_lE@TI!Ls8F'O!q[GaE1n6=l%`]5t&%H%;P]-lJVo8,0>LY!P2W:p#*j+I<Tc_G/Ki/q'Z38eZSRed&+BS-Lag`T`.-=4.-e-+nAl/CA:&@)!-"%4"63u/ECGSChBJOC:kr^p%I+("sb5qmVB/i:]^/bPF/U`/t@WLSGTH9o1[C5KgAC.'A,!NmDU6Zf\L8q>#Jq=4jS%R?-F;1CAj,Kh'aj?(U1f[^c6[MeB8W+Xn%0Qb?O"7?/VK5'un`\tbg.T5OY@QIfQCiY+Q(NbG::X<&S*'cp3RmgQ>M:9(H]NT5eMNqK'9b7Q_$BoTkM^$Jo'W*_@+`ck2gPp_E%\sq?C.@-7SFYa0(cS@0hI>(Q1`Ik>:,8TASg),fd'%[u2&>FInQ1^,&,]Bl4+K*n][0@rRQ)KUD6=ID8*P6F_f93-FeVhX$9NR6D%@^b_'+ZOW+IQ"VGMhhYW$h6'9koC2P`]f=Ud"[2[1CYGX)-21*AB9s31tTRYlZB3?VfH`"W(E3Fd9PW^n.D[_)OK.4?gRuig*1i>%;UPT$QHKIf;9m8E$U?49[6!6RAmJ$*kE?MT68\,X,944r'OApHG(&2(2)@_$<?,)b4S88X!"O9qB%,+7QP"P[>ZpQ"3@C?D%SUg[%[m$kl&iXqpEpP0Dbr4?eK+t4Z!oq'm<:q-6!\?LZXl7(@/S3\2bVeLtDQ4&J/WC".McGbEP?]fCOnPf8[TI6hJ&#I6`+m46dcbB1%fbeO;=RYr;.e5W`?7G<#*2=r$Wtb^<g\>M\G0j?q'rtir-/5q10uV(H!g8)KfSH\cCP=3p`3'/aLqT#^c2gDrk]ga-nZ+*!A:oH#%9ZXW=L[.bhcr=_-Nd"km"WJhqa<upq;!;-i:rnfS&rcp9FC+3^.m,X`pdA#(Y7gjMC0&RsMfu&aWf3"F$hBr$VY0SW7W(\eg"DZH%L.7/5@q^70YjCuJ@Utt[3"s1QP3`I`;Pl-='8\4JqeRM+IGj)Wi;KM4h6QkrL((&5:Q\TgIG,1q=D84r2Tq:Bh@R'eE+e8dW&P,=%RurFT+u0Ej8))&kdBe%pVl5Y.kl)F"84Ql1*%,Pk7U)sIlss#A1YCt<@4HL@D4_bp,E&?=6<?m8B'.2m`Ji0#J(XV^kJ'"Tl$l!G%)p_%*7p;7S9C_=W.:Z1LL;8ur9bWZ@/VoI%Da%K@D_.;G+E3K<<Ft4o&PYJ9rY,>CS#B*A:d>GL$Aur!/h2OqF9ak-4l0u\9\Qa:%GUT[QJsCQ^L]A8K`!p5H@`E=_PZ3_W],oMg<JP]@.EQf8jUp.:LaRONm:DBuRNs:,OW2CV*?%1:C1.P\=F>S$W9cLN"l#i:'@[-1%+=<VnCb;X%S8lcGR:a*^.ENeIe-Z9_"k=N\!kBSX`0Q0FY2lBhHs/;a>BOVgm\9pBXC&p!OJFf!D=oCB8(Z,BfW%P;Xqp6ue(72r%d@Ra3,k3Gg&XXQ`RAe"t=A\I`\_[?VlV2O4_;$Krp(<_?@_rK8oI&(>YWu!RqA+Z#/`u:44E(kuG98?^YcEUH5Ra!\6+n3G9LAt\%M;s-:$DQfn_25p4r%Ur'(a9#B(_*3+`8'<5@`Dso,dh2O`U8kgSmf'Hfc20;FEh_,8Cn2p(["RKlRl=tMZO`i6I<d"3L/56G+rJC%]p]")VgekjlQ'k&B(QqD.Pk+ar<*n-WcW'7>\$pU$(<+d"MFu3ROho6>sq!*WBCMnfdc2,`Zl5uW<YT&VPO8"RU+h0CR\p#HA/*g%LD""0pZA)Dk2g0KH3W'-V`j6@:JcrZJ3/Z#%9atqN'n.5n-#j\YH`F+M(j?#H9IFC\b69'F@@#:OSBC3ak/N`K?$7sJdMKOY!GjU%UsB5R+.M#<,QTh4)bpe?['kXY=EV_U41qGe0LS>Xe)j3?gK#BU$Z]0=F+hQX94#R`1:rG:%6Bn4',L]QOK?ZmcB$b&Yd8X$SLn>`%Hog'","/,U"@0o,>0`?4U'([XI+k%kmk^s.4)'E$=j:pRenL,7OCcj6D.pl;(fn"ZX<OrriC,D!(f(@_#Lc4UrhIrr6:lRrq#2,Q%3*CH'Z!pS$)B66??eh@_VZd:W.$/635X5TC2Jn'86p7Q);jHkW86*mXFf8;a$t_V4U0ia<e;H5LWf"X#39:tWp=$VX&L!?O6[I&B%JgX!ogGpW@BNgiYrfaqs:`)Zs::I&`lNE>%`%f7k-l$r!C-D?R(G/RV+=c,D,XYL1@-F".fbL]u`a$nmNaf5f3_-h#RnmR&L3*sV%8\k[Spa%e`k*DoTh"_#bK)q[L0T.[sbbD.>KJnKA'(De-Ta62pN^Iq=#[UPT/U2Z^6o'!o\Ycsf=BLCA&oI]sZ8`2`1<8!X8:<&s%Eh;'Z9e.WFlr$-n3KFhYeS=Zs2<A)#_'8nb%a*gqg2Y5?d_nPGVSnZHge.Z%>m*iA-DlI8ggZjA#Ua^.4%A\]$W>?jbf#"M7#m[9%bs<@jLrb\Z:K`%F801kXeQY!O#*U_cVShcKd-1=`i"n/)\P9+t(*jA7orC^,?'p+G>iGd78Qkb0]#57e07Ff`<oM'"c;%j^kkm,*%+3e[ql?oQ8VZ?;*Obd/)rN"V?i.pGnN+Q`2i]pS>2klqERKUb!jHsh#OgNDGei*o)l=jCoA>OlK*[HZ*%#t#gGeb&;EM8*R<OMYE%_XActZCk'\dn"PT>4\?`$tS1^L^SGOM@m:);R6^G278$#\d2/oa^$'4n/%5h'>&#90YJ)r2`B@!6:M,Qk!9J[0u@uB>#Vt0<eRC^%H:kM>k01"oS$^#W_#!CROIK>(-;VC>"f*8GVZnAAA/%EkXo_9TW\2)+fHQeHLq,p"&`LQ<P>,]sp!Njf6rm?B(uTXM[q)N4W:pca%%^IMq;[U\1]2p1C@ldH`dY/qSLKUh"aHE3c'[aqSJ<FCn?*tJUNEkCs"PViA"FcC3/td"5VUAEVM[ei'b:1iTjiF$mB-<,W=if/6%U-k^h3\C!g[#h?\@N:Fob'Cg$$WL;+&c<QD-j7/NR+arOI0O_KC8k\,;9?4MZs^=VR^$p?9pre:@d]u^MAkPC8Q_q.D?U<;@GBgU%JS-)5Y33#E];5DA@1oo/<N_3kE?`\<ZC[eGaTh#^Xc22Y5RniY/C#6X-5SGj6Jef,?-1/jL!.hI1GY_5Aa^ct8`]tU+g?bXADO:o%6*^F;MZ=P5=-1?16-<IDWqX;?lr58f:*gW#i6lcWN'58<5d(g(.^aC^.Tr!H;i02P*.e?^I5R5b>#\7n@W1B79;02]_'a!:f-dm>%lE^T#8@emH=5,G71AdN.%)]H*\;KI`)E=#A0;ER!QJm$oRfiK=$^->"Cot'n8Ia;Q?+kAKj?Nkq,*8=)I=iFffi,0EK9;cHaBh-C%cbT/<U&lq-SlBEXj-+,sH&_h8s0it;HAjXM3q`X9@kRi'HDYb%T(P6L&>/$ACNcHFU)mjtP$of03JfA8!V3K3751A1dYpRYOt3nh%M(Oj7&R#pb,Z[dUKW%\TARQt(=L:H4"JrDX:W]jGrrI/,Gh$:Mf?##[VIVSo`H"762IqYCMg!eXhj'QH3QK!O'9FXm:_qs,VmNY:%!=g\)F?%'XQS\VC\/24!/X8]:bYU8eG#p??ONA'&*RJLR;65AbKjI-JZKdo6>5bZTP^HRJRdT,PfVO69+37ukd,Y?GK9;IE]b]#'%CuA/i^i/DBR%Y&`:,5u:/>X.kF]ga>@uQe*Hrf`MR"05g25:L>;8E9sXSLKsE1E!3/!Q,aa&fPLa9XW+>L6"S1j>88PX92Oa,57Q%jSCiSHh'/jaK/t#kaC$IVf7f<%prj(7=,0YAuPbGrBn9b?dK'_Y(@[YjLoWo0-_[5OR.2^Z9Y@?`[M1'?BFH9]Luj'JO6XT*[d:7%Qjm)d&!3,M]!.L@a\FP08f$n\#Ho=rN1oP'D2mAes1p-T1cDU+MO%gaDGKf#&K5$GhN*a)7Ru0_P&k5#!<MFW<XYj:>*)"jVFES!%"VV@u:R`?&qpl%M+$W#f3\7Y*(:e(F'=A'(-AR_i)4';KZf4S;Og2QQlM!d'2ceG8p]rnR-.8:19?cY[iiT2K>p[A"-&TIT.dY>D%(j4_>LOek2R=^[FC8kaf#-A1KAf/F^CB@.\ggcM7LI0C$fVt!WXc[,.p5?XZEblBeXQ6&bJ?7lm7Ue'PN,tVT7oa#"$#gd!N:]VB%0rs8Fgd.HTR,L*elRi8!%V#B:n"Gn#.?ZK:Q1u7X5n27C7#Gjs7bP'JEXWo4W=H:5"EtK=4F-h4,lM-f>#h1KS$JI'7Q328+n$/.%RjLWN>=E$);W.1Yl@UC8Sr62n_8oJ?\]O=A<?jtCpZ/q^MA"lr7:>FtE:9[>2mVCV>6L(,Ht7rBj9Hgg>Ld+#2G,G:#dM`-m0*a+%$fZMfereRp0X-@,6@'8@OH52lAEtEMO`hpp:AR=&6BGLG740gA;Hu`u_8r._;k1FVmEQVP6dR`Jl=H\8.AZ'k1glsL)lGu1]26lE%h3"&#:52["h-Tf5Ohh`'Y"JQA35%:b7=0cJK=n#WZK]'8"gYup00uJR(c8.E<$J2*JU>s.'G?WY^`[F>$(-M!JM2m-C/kaq,[k6;%M]fhTN.FTL:5Is3@(<!YP=Xs`UdHtC09S;TWrSOr/V`aB)O(PVjG[)j1Pi:e99U`l?HC0TM@GY>`jo6PKV7!P@p'H2&F\Ro+HkNq%E!'Ra?p99d>nkB.PrP>:"HG&OVoEI7m1"G8ALp<?Z67@2XXS-@#`)9&:^eWo6-G4!9!K9*Op['Tc=C6T<cN[\O_(=]$6_B@E.3ra%?8;bj.bLhD.O(IpK&@bD#:#!KCe+nA$Q=%%]uH+)LnM\G+:<qk?l]7l*#u$K=!^d-d(3]I,S&+Yos>inK_ut9$i5`OW%.KPKrMH!%ZV&n'i/hLqU-bIEG]-.%_njHjVsDd2^&\FDI%6tQ)3%%6>HiC)*ocfUiZfZnGIu9VJttj=6TL/%E/H^nLS[%%";&JK=.6BMXEqtF%@og[Bpr`EV<6&"hPSPOi;SiNYD2^Eo\geUqi+*J\&k:k;1lCkZ`!+sKBot@u8VLNGP:[9=KuPj1ZU,eB7#V=I.@O8!KV#,sI_h7g%A:hg*H)*"OP<Nab39BdqT_CG+@tnB\]1SMtF"LP-'alSXgS$#N[aMH$"9\b%nrr]gZWFNT,Z.(5iY4?O^Dq6PH8GU$jB<%m63q<K%(ft<FDKZ$E2e_ZY?IVqOUEe87I4]sL#qk!(9^`e1`i1RcBuH0tP6[NtVqOd'dTOsT&"W"l?L?G*gQ6uIZ5$?BmSiH^&)3)$^U6_K%PorD^b.0doHZ+Zg&LD"MpJ\"C_QQBuTAUer5/Ds[`NGBr/?=[2-EVlf&X9Un)ZU3G!R3=J@HKXcdg8c;:&=+<6*Mcs9SbP@omLRY%'8jM)f-f#7&?RPA(:4plQ>8p!YA+L05?gCX%08$D96Le+`_/W:eW+%$^fb&%09K]LWZ:V>n``]p/]Hp18PLR#%=+MTO\#M\<3%g4%LkO2Yn-U'N8jl7X6J6lGi!tR]._4!o'aU_o&:PVK2]jl47rL5GFf]kNK&l]U!EHU_%LYeSF<)7mEjg^:3]BG7<!d6B"IpaW7Kk=*%C'd@%68"i4:_na)ce+uA2+L9E!V\BmgWUAuf2R4@r9`i%Glc`-Hf-I#T2bUP!JLe]>a4ml5_Qk)89-1G"ZQWr;/@lt]5P!&,FUEo%02XuVjM34s%E)$($)ET4==d7fd,5:S[ZEM[M#u-@-;:f_"h85r*HBBQ/=&t<<g7IN.F-T:\MP_jgk4`@5pA(WpE^H0Xtc*$7u+]#%n@B79aMDOqdi0LB;Z6/>@(E;?!Ni5]R$9?PCSLG*#"*)1A&EDDT]dU1;_N8:MZp9d@_nW]lidH)(Cd\Qp-__Y(<tD2*T<F/L4@<J%S8lfZ1P]+!26:h/&O=';!68Vt]d,FBT1huc`aVmHT/Rp?0kIpG/mHt<jfidd2hQ0(Wc1BGXCts4*@W[$=$a3T)cs]3/-H-d1s&sk%@5I'T5Z3/?bjOb^-""0d#hl`hDI>j66LZEs:Jp"?"XJh$\Fh1lq\`%'L&8bL,<6ba&uCtB)PI[A!H7<6OJ(hm>ZDJ9:+03r'qPLh%@E3`EN=RuU2$V$Wp5OCC.oJcT-pT2s?@h^,nq=<H<f!J[Z=d0fZCJ2-(LYuXZ&H9X-0$S4O]HP#9BHE7j.\]A$bA;/3E)ig6AFZg%[g5)q]]:p"M?`b$[P6;[V[cbbSRr-VAhKa\5Js1=ag8sc&t0%`JqH^<1IVGPH4/d[H_fEt64S!pae/%P,_AlfNssDN=6u@eelN%E%BZ:)4ha#/t"0h6]Q`r/hZN_o_qk'R#3lIkQQNI89'RA=t:kXC'I@[^7THL;e2ZSgQbhkh&%:m"iF!A^MTZ!uQPeVrd>d)OH]ZXI\%Hj4:3,Tj5ULQ8M)_mO!@n<2l["3Sk'21K2CS,mN)^L#]9P'&?k'Wub3X'2M`3F(#I9tImo00H!ij>g>uLb(N-%2I=`$.Lh#`(X:d%AUcRc)SKA,r0?kBK&u?(4F7]D*8q-52u+,idCFj*7Ea:PY(<Cr^]sb8$u?Pu^Nq+"r=H9&$jeNm=:edG(rV^=i^NW%0YrMt@!dL!%X\"qL3/gBb.q"79YM_^b)8eJ6gCa;)lE_`k;TDVZ:'c?67K<`dX/mPeA%=8L8_FL%\hJPuS2/oIS2VA>6@m(OTW&3a+WVT>[puP\%+a@TJ]6nRue+<59R8_q?k:N$pWW<eZ=uCK>L`PX?UXOP8f:16<A;ci0oj\1-2@6i,UABt@7*\HM.dJprFDHMmCeie:c"TDd9"OI]%>Op^>\!JnEM<4=`nugAu]!YChRN3<;jB_0/Eo&uHhDKUV2]D@Te7R=r6=+G?5OuHNisL'KoWmmtQB<o2bMcaJ]@tM'n/-H&kXF=]%BN,Z.^<oO/eK2]Up,I?LkXF=]-u8-Si\k+=$KAkFQRISMat[,,-<8Qr&&JbH-`<YnR`AH[kt>PB+caZgXn>;.SD^riRW=K^QAB92%l100D;"!"_a]94#Z2(PgHk(7L`^-:G"W<:^nltM<=V$W!R=f?J<V%V6c`N?@%UDm-h,:Q)8ff-[-%@pS;^H_XYu)?pO4??bk":Y>%2"InK9"/514\Tl3Fm3$*,@jboCt-PH7ZlU&fI2$i6GKJt&Mbgr2JV;_UJ\l2O,ZU8E'2_N.%)SG2JV;_UHoTHA"u<P*G^.XN(T+i%)Yr$a>9Z=Vj?PK!<Wg)mn\oD.%>!GX!jcU@KW(X<T!()Nr?+%3?J2O=ZVln'@)o;pH,lst-'+.i&o!Sh!^0mI>/WURCiki039:Rb%i\SjnAhuct5q`KG`9Bm8Reb:F$D%su!Z!Q5I"dJN8q_e0*dl7IGdl:01EhVH;i&4i&88mB6'KN92S5d&P<1']0/Sjs2(!JLb0lW7%"\S4[Ha[a"R[+p*1Tq>M-:4WI/!($scA@k:?mn<EXQ(HaH9_sJkp/Pk(!dCGD'`D_</"H:R#G3AdO4YY-ldP[5&L_ABh>W<cFp(8%B,>+(]Q8bo4A&'hLIV)K28-eZN-qaoKrg7\JHHOq75Z-do<OiQEd!M",g2\g]dBTOOq0cDT"R,WRZ*I`=g*B.;R0?PX+OcV^jf5#%/0JgJ%neN8YhA.W!P1I%FG%]UhH=X7hGq\)C_LOX&10WJTru1o/@JUd0BC>Y85N)?8jRjoI<;?cY0A]sfKF$<fY&h=Ng0>@H:M:D%9-fMh-KG^.?&)0A"QbA!]-Luh]0\V4>FXFc4$pD]S,s+(F6$&2bn=JEal2-2l[r;P8kDbE6Y&dY&Wi>"92qX&3(VXO&]rf10`Plp%L;HYi82HQ5]gRpU-BVPhn%Yj[IN0W5DF!n4LsO-iN>D0-1moUtbFeU`U5>'^e"f=1MRig[5bLpDCdl2E(<\OW.J]?(<"<_1ONFJ?%NK$WsS.d]B6rbN@:_mCGKk2G"R`%K76%X%f*Lc+MU5Uc?aIbo%1>'7WEmD'Br5&:iX4+<r%gBYU,f&A#'hg4be:oVPkgORUrm>Hu%&'/r;Q\R7o,H>i.2t*u+fqQT%c#N/]"u^_(07Y<HS5[NRd_/o87h04L5FkdX&B1'Y5\/5&&<@t:FhIQ=0O#OffB*Xi7)3t?:I32Q%463[nI+OmY<>761In6^pEl]D>+Ka>8]a[]/0OSll%VJE&XV(K,#`1^#!D><WXt&LiE++5sFt[`F^+dTt,#rLoPT+gGaH-s(;2l9>%6?el0bq!Ol>?2Fq/P'OPGg?h**;(;&,[MIJ@Bnt9KiAXoUM9%p?>i?Pku7mhip<5pJsC(dc`VK/Zr'h%3@1(CUhY[[fn<(V0-Y<O%@<7QR]R[uM#c4\J89M>'8_14s]$g#=00$S-0^+-kc(Ma6`TeWi`ZlA1I1R/GkllK$0S$OsHW4EXO*E#ks)>nl-][A?OgWYq4Ru,`%@BXZLbcHm\R%8%.>BTJaC!Dm&5SHC7AA;@eIG*DG9,n0N#YK]WcDCiPb)+USU1F$F,%)i@YQqV7c.SoHMB0i]P/Xg@e5iR]mFJap%D_;`R!_>;a#\kO'"TZVaKXZ$'.)V7,*7uF;$m0X]Xn@(TZ"MVq\P.UKWal!207k]>DeO_9&ob/8s#%"WXI8Pp=.8/QT3ZA/%=CST%<=O;"%C4bL,.Ymn5r'c7#LuXFgWm#9].f5$_V^&]/=:i5&Viu5#"*PYgkj.>TlA7%%QNM?\1fr$`WBue=c:nqN@SopYKam0+fqQJ%f-%-WZ0Ud)'!8/-*5f*8_4's6?>+!bM:IVUh3GX-jBVCfFq;DFMd(_d`,.8&bRd,D3pc=SV2Xh2GTj**m(d*?0O0mY7dW!%Y"Ak<%O3qMLreR-\bF,kB/3,O>c0MM!^%KB2!UNp]BWHH!2D^gM#]`ms.L28Q'[\0Z"#kSs#^L(Rj?I1ef#bp1mjeu7F4WL'e7VSmo>j]&%m,<?NM^cuAqW]R8<5@Mj8%[S%P`,AR/-P=6;qbAKZ?03<)7ab>1/Ur%G;457@P>H2E]E3])<bS[elM>sA/C5>0:\m;`:\KrViI7a%oWAM1.#UQb+m_cU60oB]q4c`B*uE2HIRlA,p>o6BYP(=l=%-+Q"HVk#\m9`a!S;!$6#nJr+UN>;(%kaM>6o2L.\&<7!?#"/fIGC%%X8*sN$5MRaej)C.]K&ftl.tE?JhJ[P8`<BGICSkuM)A;D7tSX#-7R>qad%M9EmT_aoVSH;Va#/kb&q6=;]2+NfaVa*L;jB#Gk%&O%K3cRc2op<\hbnP-otW#VKHhHr!sAAYS6hN;TOi*ejQq#A$hfQW,Mh\<7_R(n)^_ak_Bqj-XLhJ_21k+q;.iS1/7s3*-W4b3[!\VE%M>6KV+\qqA4!Cs5+kRNVHG^OFnHoOAe>o?)gSGO`-#7YhXb)oXV#TA>dU]W.)+uXSXu-N=%q$SV=)p+d+1$>4D,(<We11ZG\jX1]%!"iqQR@"\'3?^5J=qaDK79bqCSY;&R4/(Uc./nZcDEl5ITZ13]mKUto)GVS3R=L^s,9LS2IuU][gk438>"_a^.Y<lS]aB9e<$S$6%\sZc"BuN^l?k+T'l<dO*d3U^`,tYu"eI0W0LY!Zp>N2^Ae0OpF8'SP+QLCO?[UqC,hFcW.j3Hd.+eok3JeZele[!H"Y]NYaG>,G9%GQ_H[hplKjFE+a4/1\`#]Q@Y#m1D*t6@5%F:WhY7C)K#3&(OAE/t.&dnd'Mj5dd$;GLpM*;sM*E8`%u][TC34SMI`k(SNj/K6FFH%_J7Y.1tf4ul^`AL=,d/fqq95tg)'L%^:\mgh7%n4mIU)@?bUk3`7pVcIJmbJrqRYm]QsMQjd2n?Mp7f1q!J?1ngDK>:Oa=ur6Ool%Ih0uBS^QcSVgnPUGPZ>Vs7EqjacPS<Ap**_6C3VE`aYd[jKZWMq:V@0.BP7=H<.isderYTo]e@Sj"nl'ORIo5nq$LB4u%qPX;d2;%:bkoGfHc/"JMuM[So[+%MDg.ed4!h6dL1@A--nT81F"uLaC[[a[R*Rn'+5hsENg-3AY2gcTS,m704d<KOdNaC96$+]*)$o<`?7^j%5n4N11!#SpTLiYSnd]n&OU-Ufl(DL[jA9;03uFep02>NHJBh7Dqq`]gdkGiQPR^K$Ls\:^"3#`UViBNYd990[XsOdk<m/2^WE-[q%9P)m_*_p!rd3Yi\@Yc]pP\!k/?_\(4Vj*$39lu2D8DAuXHoVK_%3A<Nk]+V4O2EH!ba<F"QJlEG\mti*-Nh>C@2[./nkqb*(u3>)%2Bb,PL9\Pll0@hKRfNJ^;i3'm_cW!$lRij$\dQ&+SXrMm7(aKEmhqP="^*%>lXUS&b'KUeb*XJC:Y5QfbOqq=;<2KarB"X`&B)LP%G$Z?#e5.Zjl-@ub8kas[;7-YZ<?3(e@2C-F)9tn4k8IqCA:/XrPc-_f8RJ'#@=j?T-bR<(#M".92qQ74V[uWA>fI"@\)prX`qt^`%!b.A8a^2I*=Uh+t@,8M<3C>Kl?ooqHB+csE/"+Je"<l?t'guIF9^K(eL9AUHTY'WaJXe/,U<KbM%HV*J*Q=mhH!<$t#VEJqe[d*n%Ohq2fZta`;<Cn\dUSnQOXqW&\;V#<VG`qZ0@)PoRDn98pLuL-a,CFWZcZO^S`7IUV[UugF&dSjQ@OWDUP1Q=3C7W<'1fDptFLl>t%-".UlS]OT\J]RD27-o$_!u!3V@A]/6__a4c`Bo^XJN4[36c-B'jAo)EEQhaG34f_n^LgXpJ-==XPm3GYB:_qo3":P^G@AV"R<M#,%-W.kkUmu)4=SA"m]gR&7dujP@o")JQM,q\]a_c##4!'UgWXrE8U1f89jE3J)-_OXrE"+Sad#?AnN.PS\#[WspLpW%jPh]*eAd?dc%3:TX1k:"mTCQJp89OdQ(\S+PJ1&$Jf&$;n)oL\9LV,S/X)Nu%\+Cr%j$,e0o&TsXNl%,ucc8etfm?mjoMPAm-Z?V7;"FC?YM_<3%%h-okF+,j'Q@uL'0eU#Uc?OGDRm);AAQ.M5d6*;ucH@_Rtft&Y$WL8PVe"CK1ST%9bCc9Uu/:.t>-&-l&kZ=M/l\!dS>I=Vf-SY[E%Y.bc[R8T3h).1rr-?>5?23,[E9Ri=I';?j5Q4P8XMEEDQb$c(^r@E`Vme_bLk[YqV_9q?i$V2Th9=uR7]?.St[>HbuOt6eT2DVa1%&=I_JO`18-@KsPJaA'UQUrP)"9@_$u1AKi84PAeA"DKBDYXOoVkc1FX&WfAdD$-r7<Zqs\<gZ[F^m%-T1"fGj&S[.+"#-b.0=&.o%m;,B=c]fkNo8=@?!Z@-](rad!OV,JA@MF)@bMC*L9LKqO_ha)NX7p(PT#no^>^%Hk5<7q7.p4hVOeYspjK>e?8?PjE=1PNWk.7Yg%4<#OJNJR76=kMaDk,sjs-h.m[MP4f#]q;IY3uLt2%c!H#1qZk0pWB:Y<Xr(t%OkP7`2amAK3Wka$`XckSD,7\<P#tsce&"N47#QC%1Zh&,cfV9`c.p`EN-KNQOUHue@h0nJ<s$[pk[ZM'S'ugOd,rU0]h?@^oIP[?8tO#c(G`#4#t-4h:dG\OOpi=;#LS7\Z-+P,:R.'?%TS=(#@lNV=CERu<n3U4rFOMR@>&&bg<LVaZ.NNRc31Xsddq9V1&&%.pCR+GTElEj?b>LKl9!s!D]'S5#,_cYE7<V<A_X;%?:man>%%"HEhKaEr)4"E#i&]f3M[/r!(4m;tbopAcK2D8?0m6i3>8]1VQ&PPKDDlK&k?=T_tLo/l,&N`B>7eLF"8;0e1Co,#s#&PnFZ#leb%@3W:_Ae"-YX%BE6*88Y*0:\h9Ssc=\H4f0&@W\9p/^gm2-0lH6oiR%+":KMkUSs1f-728&"=*Z[lI?c5fp8<=^g/6dU(s@UhTEP?%\W&.=*llEJ[^CkP3@n0dK0ONb>;#.Y.&%0f33)9Jj&.ij<dPRcA%F7:,0Eb[aG=',/U6K^oEMG`K$RSl9tk&Tb3td:SKD?c-ea\>%@(ZeMX]U1F'6)<u.)rQrYQ3mU-mLK[QYHh$W:/%UE^G^ZjE+!@iMmOPXJK*;"`^+HSHI3cE_PP2/rb-7>8=gj;oZRbD\YP#.khYK%0ro32`]0\<gD6T-469q4$FTtPOWC/g'pL#9&&V9l1CiK+;IYO"l=Ed%*t)mR&Rl-RWj=7'<"O(V:)0n(q2Pe!p*[e1Kf):)8rZ\5%dR0"q853;a:0[13-h:q;-&QGC,?6B4*>ZA_&#YkRhj!7lCg2N$_T]k)5\.b6FGHuViZX6F>,TP[L!ijr$=gF'Z)F1Xc63e*W?mo(%E!g'CUVeP8;M16i:8.#d"cQ.eZEMt!Mq(-nD5Bg%!'/lVl$g?qC-p>m:goKC/JN-XENBi)Y[PA$+Mp46&nAqf^,I(O>.#1'[Pm%'%>]joFVN1pe=ZE$+Rb)&@`m:=\SZXGfX^iC`FR-*t`6eUeH+kj&i^)RA3fgZ_/FTabO:[l2CB\sd7qQ6)ClZ)?W]"FjmsD7AKa_uQ%f(<E<T3Btn9M-kmPla*O;UUIGfE-j[R&\B^@T)5OlRL^J'=BeO#?nu"NZ&dh?9t<Bj8fbC?Rho!jge\Vh6-cV3/",s/M,c8X+H[W%-MhG4R,Y2?Qpf^_"Cg!N?3m;K6djpTK;(N0<g-RA%G7gjWj3sOZIuN[dG\W%8.msFA7p3*7ti9k'4NfY7[!SXXELVbC+?7Ca>F\m%R!`WeDTW+j9Ei.!@O%TS>T>':Yk#bW-rd/F`'SGJP+3;^*WVmbkg8-0JrMLSk-PBL[R5V"V(hi76X*5[Aodkd4TX*_74K]F+Jg`m%b%+J)ML9KU^/RU(.8)tYA"hk_HAqN==3QJQF+H/k%q<UVJ;S?sD"jk6frRGtp&VF3#?2!WU=42*bQ+0U/_R/3!Dlu9=cr1T"H3d^%%"@c7-seO+2WM0=_2@H,Ba7)VE@1OnS5uW^XG<pK<X"I/Ue6b*"?)Q^\`)Y[BN^*PJtimeW1+q=4M=C2H5S8+/#Fi'<b6fOH9h\]%"S:t"(a]IVfp(27Zd(uN<B+P?\i^m_b*MW5oV##kk-3m;)$b'3\;BsM)?`&6LepH>=fAt.W)NMHY>Gnke@U@<gKat:]^.0$GCXpk%hA3sdS5N?G@NFPfaK8M,@6>cD6(qpPUei_],$dZomjm.af#,r&2Ij""kD2_V6q!U].hnta0r\;[V,BnfB>Q-*;[`7rd]P:Q<P>'Y%gb1e%bP9`;-'f5hX4g>CS7P]hUY"NSP`DW(*2tF+G'&[c'-Ut4Gq"AUe8[/$JYOT>RZ_M:W\MRH=]-a[J&EEXd:6]IGH=i\HEE9W%Zr[gZ+Gl6-UUXM7[B^%U?3+ds`EYi[<fasU/+BE@<66k)2P1a.MK[NGJo*E/?$-FH=uEp,7t^p_DSI1`6#?af-qK.HU8Mg+Zh##C%I$M[E'<^=Hh)bsIcgaU412K*RKQaF@E@\%30'c5CIZhTX[Ug;L>ZC:u;*%/em%dN&?'aj,7UhA^qS(3>2JX&(5nk?3X%g_0gpAOW%-r]1cW[\sC.U.=H15d%2N!`Nh$rNmke*)+C@B8Uj'F>r.1L:12gXf_r@uJ!O@V5uI"/)ht:%h?+bg]R#kZU8q!DD:ec9ff)f@AS]%Z4^/RTEIf23Xlq5,]d0X*8l`P]hUP/']MQcWZ_emH;LnbO1'!`?hESZiHM58r[&R(j8k.rkh2h&:JMD<;0uSkZ4_sa'-\HL$&WY%%mCMLUPU8<CP-.W"B(\0mSEBJoT0@&E*U+WH+Q*R06&))E+TC[EaG^M_YojCY$.178@sh/B=[5GPi`OfQ\ZoNlBXPQTZ;]ZQf`(6A%DWF8acZX!7>+$dnZHS/oi1;=%iBkm'-MDBYE*W):iieF.aiUU.QI62!aI]Hr?-be(,4#p[\i,?0Vkh7Y\lp]>F%su<N*&>_:JmqI%L%#+$,JmoJFbZG#>W&?/"26&@ZB&eO_PQ+@>-N(3CJ\=f)1EnV9.[K47D:%QlsD)sh4DV])It&I-I'tJ>\d)FS(sJ7/-oAY7iYId%QoDp)k%%m]aMCF0$KOWq`n+-cFFimlI_BEc!b&TPIEmQk0aK6Q!@L4"*LO0j/kf2F(Rn2dK^TV[MJ&Jj@0'Mpc3[?)A0Qa@*h0X>%rIThr8Hi\kOi*10j_H/H2$l@-ng8Xc7-FeB/@+HEHHK*9oiQY"SADFC@lV+RH_<GL8_=(e-*EqW8^BgL(GQ+mSgUge$F,G9R>>#%%bI#pJf;lked+,)*_BJ-f&P(Gt!\q_<Aj%hB^r`=3$8%rd$?lVC]r:X@6XOY8Z'M.P&+a;6EXmYVeJ=(WEJ=.LI-8Z%WR@s1=RFj.%%IU8Z1p<R?Aeo1aIJXH"9N)J9P!P<Y_*h_!9[$ogT!a.m(*1+p&I>(gf!)ukTdS@[pfber.G:C6FFYVr5_g*o5`DruE<?!:i($'+%qJ6oZO=L>1nY-7*+hHW*"BNABk,QWQ)9/?Vi_#"?r`@(<6q!u$"JRBM7M+7piMagZ&:p.A]e/F!AIinRi1=?8MY59H+KOla:[fDs%4P:EX+ABoETmAm1_e6*eFC/,g\?XQ6!Y7bLfn7tc6d==BeUU3@Y,GiFcQr[+f+kj9-B(j)B8e4#B9OuP5r\aJCbSpt:$.X[l?bY<%&P'$iS=Ph^AC!Xl@17\e%Ju`1"bp\;_b4bB;SHL'jEo^dG2R2+?pZ:u$&#krS7.%q:d+m+lo=3taE*5lCsi\TD*&fX[\`)dW48S9%Bj,2qGPf*`h3r@F!KJX;D^`[6`T.GT9[quU_2-6[b.-.04`J"3@7+ER-Q$\898uuF\:f_YX/0%&itu17+$E.%jsbU%EapQYF9oJ>%=&-ko(Jk,8^g]7[aj>3df6%f>>_7/K%PkVq%$=Hrb%Ls*"k%Zq#^$L/XQi7;PH8BgTE7PQ'"j]D!+S(]$VAYj*)?F3/72iUF5@<:%ZhTHX@p[eSL4_oVk.RM*Ro:ST&c2V_3h,`8hPL](eH\*QJD@Wla[t<h!48P.RM,A<IdVuW*"72!P[OB^iFkf7*nPs>#6n)9@anU\%U9;.Di!4j#Q8oM3jq_)#LEUrRHnnhJG1E1IX4_$;WO&o:+iLA2WL<IchK^Ls=N.rnr3))2[UtWo:^$iZahXE*`QoQ\qg&uQ##p0G%KUeg@NN<>8OMt8;7+IFq5!]a\)B,L%R%I@\aSP6KY-m\DTRmhILdGQ]bNEXc2\StU\0P6Z4IO?sO:d/5<(<`QI3p2>j-22ZLlc,O%4Kij7*Ak/3/0a.I(8"Z1&VGru\b=#Z?XKB^FC9X]GhKgr-%sQFP<:?RYEdo9S5jVI`Uq!=RDf:%7m%`jK!5r.Z?pbb1KqVg0qC:B%Jg!tSYHO.^.2aJ3KIj/jUmm!j#g5CD@5^]#/a2kR<ITR;OeI89b&=toHIBEYMU:Ij2++6b!3=SfdOF0DE/NZ9B>r@fA-?K9AB-I.%R(1k&AHhIFNNF=S5S=<!Z]$]A2n0<Q&t2^[)!]);cVDb"D%R[Q25^0$[Zr/'c!1t8H1;ePL->sPM!\S><!;$56k_Cd+iUFtpHdkB%;5n#0q>7IHJuFnVHET^=c<g,M%%8g8L%dN^h")HF-F=7m4])b?'$)9QPpckS62JgS6huifQ3K(c&hu##55"&!8tMPq=K:*AkZL.a%Jn`S2/%hN`.egFeNqm^:$3bIllLcXe(!auQ-^m!/J7Bs0(1L.'J]GaD0&C,b')RW=?5:ESWoV%EdFPj/.u*#5WLn51'2d.`??-(g%\&hf)69,'-<Kj:P]cL4VqdSXHb^p1`?SH\rZZmW;_ApbpQjZrb73V3N!c/EUc/B]D#o1:K0A"P'(=lo.fYTBLJqHYJ9dgJt!3`uB%H4NV)2^FNV3nZZH]e11m.o-(kAT:>oSCjR2"DR'0SIm.[g%U0`24R#'1_^*()a*6#l<RKsOYL^8/uC+%6&nusn=GOJbWp_'(jg[B%%28g%R)#rRRiT9.30[m&IRrBR6-7A:JHK&')*ogf-(6oL>^aD&713->Vk?Il9N8f=J+_`=)@fa1ejg]!c3--<-n*IS<PUH"_\3X5%73X5*L<2/Y><qUa,3Hb#ILK[d+sZf_!oL8`c0hh09'mnErm*G221Tq*;a2g=m;'!N#JksG_;YQ5b6PSC6Lb=&'6HsL]A#^1^X@\>%%Cc`n60p?fjQb+u)U:`=#?MGl(CWBR2t)3_cmBqq!&oKrRu"#/Mh'!2R&D-K>dL1?.-`5eqa+dH70Ho.='e0El(('B=_m_5:/'66%UW@Et`86_\^SbkOJLgQ%<jD=&p>Fl$mfJoC;6lQ%nq9ME#j03OE`EF+_5^@:#ACc\d`'d5odZJs`lT.jjogZ%d@B5lLq5Ns,dGa#%&\^SB*(>00V@X^)W6PfY5p?]EK%sVCGZGhc6/iomerE`f</IFQGW#f;(4B5g."dn0>S)u`['Y4q=$8s!Rh66(EGV&;P+I%,gns'j%h36;&9i.A&d>$&Z6tYB)TG"Sp:h04P_[I;Tk$XOfSmiZhB@)_[nZ9QPU8]V.GC6cZGN/R9QQe2Dja8=1`UkMMPnZhL@nS/:O)^[`%MB=0I?U<!VP\k/QL=as0Z*G#GVdYR4$XQiqU(G5D%O7DGD\\@7l-KMKP#d+Cq%=fF/3'[QLQd2#<"g[fYJib<PRo2]IOf.5B(16N%a9&Tg;%/4H<!YDM#T$riH8\QK5qKIWUSTLT=;K6k,\@)F>_T0!dB(FSVOgan89r)F**siJnmOiM2-mW$`R?rJP2),"TI,Z1LuOR5%ij/#\4<UR:/?1ukZrhtcUuH(]'ai>:.d:qpWXu(na-d<nE*8:G'2U!sM]#)e!LOiaA2mH)4\<+tOI)g<lKDul0O3dm%R=p/kN4Zi%%MY_#"RPdaYoIMV;X#S5Mb?[#cS#G`^1E4<G_V*p;8U3LJ+h`@_62cg(OZ@u_ffO+d3'n$>`6^;!*cre1;XIe`d"P!9.Hm>CVZfs%S7fSS_\\`QC=aRIpMem-pRWV(Ep(S"1<(u#33-9q7-V>$)(&X.oThCS1%5j=UL=Wl?Q,;q''ulFSVqAp1<4hXYR'JP>C^-=k?4OD%_$TS%`o8@=cDQ4jhSHXDO>BA!p/iXk9;]1uTS'=9K60<4`fr'I3EQ>[,(p&RMl0ujM$e0$b610jEiQLorE[m<p/WWH"qcd6M(QPa%MTguY6I-`/fC-4#e+!>8!i?j6&tCVV0H<L#YTdnje4"kQ=P25S!sBGn3/rB,_F$P1PA$'SLe=`UNBf-fkfKEQZ:;XWOr.5UkQ<ZP%+Kkk>WNV1$;ArGoYk4e@nF%AU&Lf^c_A*e<\V;[sQq\,\@T=b=#f[4R1&").+L1.c6$B-Q#)O/L!a-c"Jen8t6uPtA&4f,2_LE?4%a,e;onNc!o7Z8eT&QB9b,=7>7f`3h'O+hn?,LOOU?IA%(is85QL&QGmeAu#TQ7>fVG_EsZHoBGb[9).h^bXN^`i[^[HLc.o7/?_O%+,[^i#^>PSn\.!+PKZ(>C?ZO3/>5C`Rk71FQ#o9Q:bWS+I6d_1Q;aFsba(a;]Dfb0)/hUkmtD%b7MLK?&><ftRm7N,&KFNI.YXHD%aI"q*XGRa3,I8ncEPp>H845GW8N-)%+DBsZM,O%gkdr)cMj9t-5fG/);*sUV]"/^GnBY?oaFlr6p]I=EaZ>e/*akcp!J`omOsjXQ%,W6eKn[>9L`iIb7S=AQ1mC_]o9&:!e]`$^5OIIW@)!!Z'-uR8P[Zl_%<S]5Neq'G'`(N?58r!2:0ch#EkJ;JX.`J5s%)a;cRNccf%dFScP?f@`XnlDf.6;aXoTaFJ1SC;,P37%HF;PIEINku&e>POB(CL4qXZprQ[LW-E<hn$*a,u3BfajO^VX@=XWeomL4;W\;n3ud6:%$5:G?>S.2Bl+5*5i(F<D1/[lWoRh*TrPkQP,RK.aV+qqKP(Kid0h`!';.=]$oE_f%4Q-^KGJY6Pk<*EcAb?IQ$L$(a:"N6&MRgs$%nTTk5:tQF/DGo^Adjq@O01"P&9"Bj6R+MqXi[@Yce)r^a+)rkde!5ME)BoC`?Mss7NJ(9@@]o1Zm,dE#Tr<$49HJpKWDQ19F%#9J%)r?r65XL3#Sh7s<Z\\CT0b+kgDJ%es^c=,eD^i_([=a!o'PO:E$5E06c[9_AW`NO_Emn2r%1LPIp=iKN[k:c7e[>r)4:9HRrG(!<%/5aJrj\arqBHoA(KAVXq'HdS@ag8Nah%8Mh*cm*Z:_B<e'G,<gh\j+_d3=4K]gcQu6;+XJIEFN24IUqu3c'+o'M+o.)T4[p`F;K^%ZS3VA4eW6:k\.=dCAX>g%mAi%;kW#/gC`%>D#2eCRjT6lMMAA,ajL9?%^ha1QRYs:$jA79<WEqP&9TT*>'*/kN2*1'k1M$Hbd&H)%0s\gLc<WD@(N-1hL2ABMDhB1d$W1D2'n=HC6^.lMc&a'`l0r/dA$O+l)DprK_[#SoWj`Zd']LuXq;N^A8t8=F(_At[$1bCZbEKru%H&;okboPZi<B,:=n]f0n!XAh&XT?JH\<li>_*UNqMMel!8V6f-&BV\Bbs$2k0jOmR%;$k04cG_3jk(/0cp7jlM3[K6'%&I;e.'/d%;]rA5<!S,d@(dRCaLNL%<QKt:k7m[sIE:DcOR8/WF8fq1%FHmYTd2$(H":VE4uZX*#PG+5[?I+OF:\iT5m]FNQOl?7'W4n2LVR=[%L_E=F&'[E-'l?q^ju)cJ<i?5HL_M:Q.YbYIk/U)n""Xk`D5r]8(^)I8"VsDl6oJ<g#_*R<R]-diN*I/%^B^\\Kgp>9i#NXeX#2ET%m7\EE<VmD@$TG9Yi3Ts:"7ZjU$7SWi>oA2><MU$WYcR("0Q,)UZ*IuOb',572/E^O#15ks;`C'D`Nkp^P+kBp:Ei]o;+qK&`g^a&%jCe`(a,*C5:l=a"&5`Iq;A:AejTRPo.!8Bu@tEp-"9hu_\nkN_)3J.>gWsMB]M>(`qRO&8Wq?fgRO&C^5>O'ZFrA_@9?GkK%/I:q%B:gAS,2o[5+(B2J/t1V"=:.MnoHP1imrW!jKIB5NPne6i"A4b&XL>SX[n/hCom1uGs!BgGk$+3(Y].70OfH-JnM,:]*DM#P^h$DG%.3_B5-(W95J1VT>9P<8uXH-3rAg8)7<-C6)?&0ZiD+08-HO55=J_OJTRn$Lf_+!A*cJ>R,,G<U7"_"+5F$=dSH<tZa`Y;9BpW@Zm%+u4Ci,"7o4(q,Pt;[(M\*OpX0;^<a0&L5^h33qZ4kceIK#CLESr$o2bVM%&O0%MF=Q%J4A+Fc#3KLmX8bd-;$:tW!e_'q*B5ZfnU%/q\<Qaa8[_`""/!,nWpVT)X$H/ZbR'q6e'&E%H7Blp#o.MSsbr@94(N/ZYgQn1`f8&RW#Ul@9qBQ/$B3m5bdBLObboAsOfo\HVsf%;Z<4].":Zf-\]jB%<*Q%hiua5Yhm?0W0<Quqo+Fo\RZs8,%60XMWG(M_"PCXq06u<_C6V,Yti/pMKLsO-q?\b#C_[ef%e`4-[Ul2%*=M_*cErB-K^n(o<?O3$9/PusblnJ2OB6HWdh;Ik`=k[LY3":0[-*qg0942'krYG)>J)0eHTEc/r]O&*@cB<j9KtClLDd)D,S+K[%VUgh?C)MBT[>+Es`nAjO1k=\WL3ts!Y&7"#=9iWD;=%F9Yj#;63]1$))*B`#[^42$C=SWg<,IH$oDp8T+i]X&/.B!Wo,R=OP2K#k%/)mRn]BGNP(<ILQa0)-WQB#_COH#fhR<],=<Me0M%XWeE/AUflcZ%DHU]K^n7W9lI%H3ZXi,k(r&n[rlACMCa'@AF,&]58!Qd_KS%!`H\-A12$-k-2NR61(SDWLo/pT)cJ9;>hHPAhE;6j6sdt-\^Y%L6dS5W?#"Ei^FGN$EdC:PVVC]"J/pW&3l'YX^_fr&`saA%nOQ7%A@?6UBRO*kR?*)&T[;Y6i(hEW-j;6r#@s:=5Fd>:o'.Rh'l9.cW&2J/%C="$jn"!6'eN3k5].nJZ,a8W.nsk*!i6K&8t4k&`ttW\%?TQ5b0QHSCLG>g?"'jg$NJd!Rg$W;VLcorLY\1<5'TX'R)lH?KWJIKddn)k]E#lT_B#;-a$]4bF/BkoGj.$kY)#"V'o)Sd9d)Ej7%+u:oaC1<VZICL+b16P]Q0*eQgiP2XqMU)PRbXiKXI4uo.\sD_i,^k3NA?b?8kc%)n+F+^BR.3l3kB5DmG[6-(_=#GC]p',3Or-W*%_04@-Y%\&>s.Y`u'e^1)oa)'Mictr3kF<DXd-LA!,*93FUeXH:ccU["q%<Db3#7CS:+_*LddkWr@NWAR(`sMK8o(QM44JgU9&]Au%#_>\\RrhJ#-Xn$mHn</qcB"$[a/UkQ!H_b_,I6-NGSfRRe_$slE^DMX,J0M[NBfW=@.[YqSeO\cVA%@23p;F!W,T,"iqFUnOW\j'%V@%9^_4a0rgbZ31e^oXkns*!o2@49:ZCN>'c'aRg4%4lJie1sDqd<9l<^'P!0t>@ddC,DCFO8_t_>2GZfPTnQEKE'%KV\-q]q+Na%?$<)dW%(@BneeL;*nY4f-eb^0$-'@pmL+!K_"ECq2u!37X=Q[S/uU>4U`\##FF8n#&9rYf9G36#AY(3P4r?1#>PI1jDaY&!_4ug(%eYbsa2uoBroVXrS:fBpCYVPUR>913pUo>)dnOg`QXCjd[&Q+WXM.kl)7%TQ*?ZgD?JL*KN3@,io8<N=Xs3NJ28r&T?^dP*JWq1dt%)3946[kT)P0@p[l&J.%O9`\5+;W8DD9P6kM9%jACJmU()Etnp#;Bu%:l"o(]g2d>kgeFt/Y8UEK<M!OA"%Tb[4]H;Y;5m0n_%^#I%!@E#E/OM@g6BXL0;PBPi:,.uNJD5%.CeL?V-GdZZ%A[87`q<n_^<.^E"0+nl/?K?-Okp-s3*@T%KB.S:1$JeE.>:C9C.-;N2<SVQ%H-sTL,1`@Q"jt222(Au[S5*KN0h,YtGZ]3lL,Xe@(qG7Q(Z\S]Y!6T=P8)#;hSgcMciJYJM?ud]<(jG"<63]X!U)L?_#hYtknrX@%9LZp0'W>8O##f0<OI`R@V"Xc>Sc^/:)4%8WiHPc!F]e3B\:mJN_rkt`Zc-3i#7tQC6O\,[<Go`4X,tHJP8D+*Z%;j%rY,sp#Y(.>%i$c"X^Nb$fnAUuW#pCO:r$)aE*tfU8@0A=q[+)"XM\]!8e\!EMG,(a"jC/95!(658K[(V?=c<q/&gk@=[Io>8#mrm1HW1%_GDGCE%e[OWL%%%30)&&@JTCm'd?=g.2RfG4,'pOl=n5cL?n.U$MajN&b;b/3t$WJ@r^^q\8N-92?b+W,f[#u_8.+CYVToDC0onI>+q^C6g%C/>9ZEE;!!l(A<D;)Fh<La]D>"V^_B_gOe(8Wn0H*@)mN6.1se_^IE6fc5][-BK:(=pJ%P8\I(%+:S@fhOE,UTF2u`I_=l)Eq7`n%jo)tpAjnHKhAB`?!i,"$'cL[_@>bU(q=7Z.^d>-MTNgcGq(UUPU1c91]T>\2n,^q!XEoLRHB!"_nusqOgB6EG/L%8EH%8X7Z74[]%4sO=.$C_$'"+@P`oR_BQ6AF'Ujji)5XUG8jal7G0(Q_=K<XP+uTY"%%_A?&aKc:X\3_`^pI7nuV1<KC@-99e#a>Ijd:/]$*"c3(G%<)c@s#nFC.YDb_Jd0?'Db)7kiQ?E@4Nf[,).N=JLcXq(:Q8ZtN3LBm6;!=PY)W4UBK_dg`"G8aYIJ3j-SQ;K!AU/6PqE.;lhAPn.%AC%NO\n%I17Dd<r!E`IO=F-T64tl'Qhh5U:jOqTp`s>I620<FSRPuW_Lsb(";$RQH>J;6#AJj,43g_0e%NSrt%.&iu4&qqo.$b>b%3D&)cLdjc(8bP=e;?ib('+BFHHP+rP:03.VaL52U)jj)a`4q3q@j#ul%(O\K)T1*%'Ku4)?pkVj'=b\O4XS@t?ZT:`LqE+Nd&@,o%0\KuVKlLUs6sYckE<0e`*#*?4P@9Q"Dq=.o+[F8_^lQT$+EYst'O7nU^_oTQZ@@^5&-:g#m6!LUKLm"VTdVgPDnp&(KjLG]FHqg+%`VbETr0klD<6_:3jf>L!,3,hG#?4(BJfM(RC=H;-.2I3iKa@QF&N;..cl_[Igtjk;NG@]#a>>IZ5?FFbU8!m"IEj51MV7U"7LQ=-%$o0s>e]Q+CmHrgWYb1c"\9:m#K'h(s:hZBN6Xs[T7\8NAGuQ,!lA.AF]LXc0/R8O6?"T`0"bl06B-!(bQ=5N3?oZA)`6VQ?BItHb%J4=VBQQ5+6g4Tg#1!M8CKh[(=aQaqH+XK(]q=\qe;PEZ:Rk7<dpq%lnO%:.)F29S/:ec`I!#L=O]i_cS<Kf;X1r')D7Cc?UDE*.6%0T]^m=:hT*'sK'-_##T%e,aZOT5PS`m3nbMNbd=redB4oEC,J#,A+ifFc(I:[;$[F"pn0@fWb_<&]hJK6;2!`J6qSgUnG;;YR7<d%AUkFL/8R<r_)X$qORp76>T#pO2d;`!5q"41+!BbG^oH5,ks^omTFO<bS>,b;G!-aIKUIVCOk,l(=H"dC'0`6-WJ$d!FK8M`(0Y"O%O<F>DEMsGQR8>&iOY0W^.hZKLI6bkEiS(/LDS6>_$Fn#egoNM:BTooA#'aNUNJnAmpug]pbJ+IK"3:.D)]14tAufC?Z_2JBI"KdO%(\IS",/4o[err^k%,YIl%*_MBN9UCK]9eLsXN3_Q.fc/`ac)&/U3Bm"QZ<iDfGt.#J.Jeq$b2!4+*Mhl!KA@96^(?7WhWt+-=Ii7%ltoV[_Np@_KL9C=`/:'=;-n)XD)(gN";`@[_OL3i\35hFR`eLE.ql<P5j@7UZo$o]LV],2(,Y$Eo][^n<@UeC1I>UY8gAsqg0:'Y%,!/o!>TWSiQn?9g$]N8W$5oZoBNQ:"@ksmULSk\Dg<uqQQ\JM5pNSRS&TWY`juj3+^dKZ>3"V9e\e496L1crVJ9s'&@1al6M3<02%BY"sMThZjoi4<"oA^C"+fH#T6k_aYX-\IqdF`@\<MfDi#7"&*-q:EGP8;]r^F)7d?0TJRO1I;<fD59B.`.@a!+bmT7(le2;`6jD`%!<_JYW<-X%d\-KuN%O&2M'eV`(_=1d%T,NX[-`H:8XqeW]dbuQF'q.R_7YUn9SYsaZ=hDJ@E3K+%&'VOiB6B\cnWlI;/-mj%.FG<%cf5Fd"Xaui&Rfp\^TPCh/nG=_G/8breOfut!@Oq:!/9cjl:)T1l:F#Llenm(I&^T6H*LI]k5cF70'`4_fl?ATo]rT+V>9r@GH=nc%L0^F6Jh*]qi9DUD+qZ@5J;?R?K:;j*Hld$)RoXA%%+()]-u#Z$.1oEN]1VLBF>0Ju6af<H7"i+r8g3`&N);9P,s(N2P6:8`>F30!%#R/-(*r$V'6:Q;Xbn0UlGrTk:<m+cm<$98M9e>#e-^-8Y8-u/h'e=B"7#O(k[<8")%Ed5:YW%$g):EOGguXQ:7F9Ul;MXT]dR:HU%&eWBbQoh)-^4tA9HU`8jesm^<;0/4J*D3=FGt*<'Ruk(ClqGc(DZcWWN*n[KU7KO(8A&s]:6u^XS]'bf7'30&hCu.?AC6M$88>H/%<FM_3H+g"IT"@(b(*eG4=@a_M_#PuXSe3]I>=>1p66/4Gk]A]e3i,T*EIrj!lZH+MX[nh<Ic!K#=@pB]&.DAX!><eJ"-f@R8dmBd%R>sU1YOE>E$.RX+1*3PA3D(E,O1.e)?H/6^(5eA)&:K*Wh1Di@K)k"^^p'qQn^MY+?<^q-VN+JW=B!`30#VX^S:HH&/5S`e,G]rS%3-%icIa4^4].0_i'NM=Ag&Z\q;"`$b=2`#%CLBH(S1BXLFKAW!IcA`n34Q-q35!N=GsB6Hn!UXBd!?;:Lj!N1=+E1l>"gpZ!c"dT%X,PNsHCMH@';sq/^dr$Z=8;Ljp5rLON<hAN,\''M1O3q"QcY8)7XcS;WnYeA()8fcA8,RAQS&@T'#cDU/7]h:'8/Z(K@2ZP>K6bc%=T)8pr\M=DeF-<mA'A>sUUJ^3>&#-%@]YkO,+<-(M<:+#rt.<U!U-ep,nKY#>Ykiug,`_p38r_'QV7'01-&#Tn`kNJn4C^KRU3f^%4cCqUmB.+<TMR!<GJ`mKOBh?5=]1\X:iZfiA0Q(Lq"$sCemh,SAeQF@/$*pCAtF;u,$3Ga>I\WH9VRilGbr511-+"sO\B!I+<`^7%V*/RM4OMmMr']u4Wjj;nUE5Mh281qDL6IrsNsI!dJk`7)j+Z-jVk"Z0M<GW6.?hfLZt='S5mPbT(`oP'%i+7h\il0ME6uHFUl0LC%c1n\HU.B_'_*%^sE)=_<gW*6"I`n%]WopZ<3:C<ej%^ukV[5=l"b9j"0hRISoi20_&>)YNQR7n*'[D'R8t0j.K;ROG#F:%AcriJ`%Lm@7P$F-7Y^2sWuT#=ZgksO/1MH3DlWo0:ds1-_<Un"9[!<i=s$9pqt4$.SeG7p8,Q>SnqSMQLX5#^_oDo7P9#!PI@Up.8Ic7e]M%LmZ!VSt]ei(),dV8sW-^/7:L]E`/4"N\2NdY$a>dGs'n`c^IY@8Wjr=-lR2EQ+FN[ddjFU1_u^U9XlSj="W(Ag7=&^B[cTar#W[k%Q=_P9_I&uS6UZS;8E$_S=pKpqPp^(Y;Zr7;m?UO;['u"Cnt^m\-Dic>f+V#poJ9;tLmZC"1uRL"$Y,Yo"%3G7,UgolVEP1TP"eL,%c]a\qQ4=ID6"Hp/6WG=K@+CI7O>gXpRPK+!,3'MCbqSQC5UTEBcuBC[lm@i0TOVLY5r*uPFAuQ8@)49l6l'kE@CULT0RqB,.U#>K%qSb8ZVA[<njajZ#>qqiGJp2nb1-08__8@"hA5KQ+.5QPFhO&UR.s*-*U'3b10EA;MLGghTlbJF08)Kkf.Su!B`Wd^EnI8KkKKNe[%!?BNjTc>N`?tH-s+o#8l4cp>t4:.C,Ia%(5fG"U<!"tf)1:[Z\_(A.q%8d^+4J=Yl&UQ8f/fsu*JgFVh-C<Yp$tJL_7*J33e:QG.%/$EnZ/DV)k9UIAAGljWEFjQ%<==o?N7-;$a`OUU.-`k1?&.p5>*5Hb)],u0IAcZD+%]\2FAm!djrnfC0-BD%7(WsJu)-68Fd8N_4%8GBUI)&;?YkS5+'Y*pYT'u^MVJ'Jqk.udSrAqgtMb=Tdu:)F^hl7SCY5qN)0!BS0+oBL'VDF\mR)sIh!KoN1t[gJ+rT_du7660$J%iE?kET^f_>`\_e[Kj'/^&Shd:HD-XU9hW<R]XW,>/JVE6"qJ[S4.U@$B*5F1_\K@2,1m`i\mkZS1A;'>jUNVrWmkc"'PP?L13\F3%.q#$*6&QWZ"<_F9,q`+,BE46fJ]SkJ@ZWG]eqJFG_,T74npM>qBm@Wp09P;0NME65AX$gt+5CZLG*#eT]?du?.!3=:"6HTj!`k!3%MZBCq)M,j80sE?RfE@=@=l03;b2S,@1f!$g&Y^1[)0A_N/'IGmn=O;q+A#2qPS9\rGZn.i,BPpiFu1mtZ=FOJS>^/`r;7C@i#kOg%5EgZ!C]qS)km7,?S<FC!r2/KPd53c`cK^jfLX<p%Jf`69a'PA]GBjHGZjC%,nKTZce+Fn-*FP5ERa;(M91G'60nj"6W07N3^l=4P%.YPbPPTja_%Tf?VS56t-V$Y=&UFb%+%B793Fekp)!Y`U!>=YVgX=S@c!pn&XaTG6/5bcLJ2["o2J>B0'r#m7/6G<R"]RgQ</eo\(%(-4m_Cdk:\J4V86(_[HLB=Q?VEC[f6Ei;a:Fp@Rn4s_>P;kjF"Eto^.d&]Zo@$M<@%q03X&?5`G9S%]h!Lj)La!_nLO#sLMb'ggX%5tAe&>ZKF?<Cd.<*l+kV_k$AB%.;VG[mGir,)Qk9.+VnsC;FaFmhd]P5[@NrR+`eh,ZHC;_.8j)l@Z($SdTENP?Al?U][6[:</#`%7C-4KN[^Bu-59+%W2FOq)/$b"H/qm,AW+s1.M^']p*mU2hP2o0kc1I&e*pK0GoYRt\f!n(e`SJ0YtQ(D)D)l;b<o88mK.Jp)5pW2%LVI0Lc<A3=F;6`64cdlF+?Vl"P_VE]r(8m=-1QtJP&um5:,0#J(`\;k>6hSm-o3iNfr_(,X1,)@]!0b:^'^/Vc9,77_9$d^JU:n7%3$+q6Rfk@B-?eE\`Si;@bj#S1#A2=?Jp9SXK01P434&hhE>q*="4IWI0r\UF5ju%EYNHKGmT],Q]HCXS1>QjF1NXKeg`3Z6m_-p%%1d:c)TMOV@\_BN8a"!IJ%ik#kUIPNX*.dh..a=c_m$1]\':`[2p?Vr04&c4S844hG[0&RKj,P]a<Y#K_g86us]'fKOXED+9^%<7<%67#nF8K0b4niFVl#5$`Q&U[!qikp-X4A;CJql>@AK?+Z38n`l3GFG_5BEmW9g:#nQ$+I)\TSuO@lX?k!!Ea[Q#.IU+Z?Ck%0jOY1%mDoH>*i8QUEc.q07n(oUS!OcqCE$3Nn0Tj5VT4!a"S<H<'Y'*%Jjb:u"NS?"9=A]e9=3JB,0gOq?VsXdc0/?uXbqm$3g^@0Z_*PW%J4.'Yhk7<mR<?$JZPsC?iph$9%l&8C$S7R+)]9Yu!CeP(T`mcoa`hn6i252-bVD9TjCtdZolN_<.0]PHdWCpt\#fQ3pdX5T=+"@b%>j1oN9fF>Tc$J$d:,L^0>C*S8J'/Z\ZeR,YCSD1r2-_]t9qg`*:YkX%Zu/Dmdho3=`!(.79j?B*8o/[s#J"aE(h_b3P3W;bWTFuQ%@@r\e;5'@)S5Q]9g'(>sjQY(q3oZCd0@Xr'C,jJo1P\V1@!QDRW33oMi7GS;i:G7X=QDaO\F?AQ+q+f7845>CnRI=eP2o-(n0eDJ%*lU"B<EUT.SsF`E@\f6\-`^=IS5T6kp"-34m/5><@LB2i$$<.B;temUCm3Bp:A1TT`5;4EpsZXb*X];un%D_eojaf5S04K'IQU\a%K.d3rV8*4!a-IeC9]Rh!Y`-)gA.<B(<k+Q-,P:p`<euGrCfI,TPCDf50X]i@1/qR=h#2s+[m[IKn<4S]d_lESg3R^p[gA/N>W_FG%<MFJJl7muKM4#G@Lia3P_GJ76:->,ecmU=3;QP1l@P+$0_V7YW7J3[:(uE]Gaf'eo`?jNR,O$>=Wj*<DQXTnD4boOPNZeFri.UD7%OM52PYJCu.O'-/'Y<G)%@*IF0X=r"$#W,ueQB6Fo:lF]-&B:^$0tU6g;8,gE"o?c\ac](IBA<WLZ((j-a1'VdgLeRJP$>!'qAb$H%jgLQ>)$X^0)N-2=ObV1PF%4;@YJM0(H3jqt<67Yk%Z%3?:WVX7l&X-:HAf:65XrkN@YlTlhMaO[24qn5L3Hn6"c3m)m"tj,JegjR%k-I#tFC5ir]-GTt#7c\JpTfkF$S*)Q!`"Cs\5"'WQ?$m`'WrE-'?$riO<q5&LadpQFaPf:f(?J5P81&*K=sk\4J%3rZ#$<aHS/?o%`(kEL!g5f_)6K?4(!U%X(Y0*TYLllJlJ>@1W"CCUd^?BU\+FOGFq%SG.$>Mq]@A6?#(\dKdJ71[r^e4`KW*FMW@#^qKOu<\U7@P:%'Ms1J3Y48,8jZOcFf^'Z8YGbc+VN*?<^jJ%E*DC_D4KFLY\IB[V*Y7kD_ebE5b8D:lA,F/$`4<gferMm9K0<MUM@9>(Vq9#eOSd@%!m%50``OgjYZHdbL9p0/X[*i_)(CQpj:eu0+JTJ?c&2`h;Z`fcRN[6e^S@WtEH7(0>o]MM;Z^H^WhCmpkE\.[%D*4][=]_iJ2CT*%04\#RLK%Na,bTcr9u9sW;3`WI@Tssjl/HHFl'*jh;!A[&]Y7QdYdG48i1?f_#7<rP,)/Lia\";tOd:Sb!>[ZR1j8NXg,"L3Z[`k^%RUZIKD,MYQ6$f(qO,3jtEJOiQ7H?]$J:Ka-7Y>kc1W6d1E59<=ZBLcX!%W>HHK$tJ#`L03!rmsVXBp%1QOTCk[U._B&#GaQNfJqs%b4m[AC6k.=EIGJCkP)HEckJU^)?CN3&cG**j&)?o=B["&3)CZe'a#qO@2gbXQgZ0)r.7G+&"hR+.DuR/U-a-FXYs`=P8t):T:$j_%!9#H$R.Tl+1%^E=!QM')(Ws&FmY,'!;@3JoW25jYELJAfF>/;Ec%lK>UL7,W@\pmHm%[3g,6GorZK$\)&YefkMFe53,8o9,23ZYI%Z&O>a?"?bK0K<g^Umapg-p,:3c`A.VBSO0+H@\fm/h@YGW:"O[<NI*4Z*]1P,)>$+Jg<0-(1h#D7+N<Xh]d(GHE;aJMCgF.5r)Ge%J/0/"?Dr;hP#]2t4l1s6UPsC>UEs$B;!H%f$((`^o6^"SR-go4:cj[3]lSL_P*O6Dh/gNm85hOH*tUnA`P]JXMOmVmOaFYd!EWuX%P:RQt#$_nKkqgt\>bU>%eL)Z3=3h;DN1HdX@-U*MAhE2a/Zak5eZ48Bj[!?FU3]@_q6qc4CGJ[X)/A]KhfmCs<X.Z()2GH&RI>`m%FO7,Z"_ChK9?E'N=KD_:@)_C'"Jeip$m]$jTPtGnSM@I6m.43bmnK*K7Nc>I/92AJ@<BkL=)G"3]1g^EFV8'2"_-qNi"]'OW^C^O%k<+-A7=h='*J@L(B5=>in_A?8?7M&3AM&M![GX[7?>7bO_MDr.:$j9."nkhkjL](79u>]9>'^3Hn3kc6>kX<j+Gd#K2=$'V)N)SQ%2uGgW`K8Yo.pC>k&e*t6g3Bi+;,*,EP/DnQTYaFemki-D8Ri-i`^l2;>%>&ET@01,6K&AbS(>p*P_%[MRqk_*(Lp5`j80EnCpK8d%&LPFhQr#]^&B?3%E7-EI:'c<I*GF4QFauts[RWsU@OcB7Y&ZY3*L7"3^,n*h`>[#EUQf&fXMtgj<Z*\1nQ_>`/W3jb<J*00G!Pae%c;l8oX1Y`l_lC@1WtY[UGnB`8p+:'\8$o"f:U-[*e\WqdT*FGR2D<19%TRo/?F[1ZC/MUKZXO$Q=lD3#m/3X\:+uR/]?W_e.7uU%%c/>=WGuXQjEJ$;k-q..;E!_A2<cPTP-6AqYTh(UAAP8?K1<^K]B<U@Nj^4HZ5kTD)M#:e(U?gGF';?5")_.QnlrAnr(:?-7jl''@%XmeX*<ElYjfR\gIQX%[bZQ`g8ja!0hWjTXN*0%f2a\:Ol0U1E\e[XsT[*SCHLFCO--O\N3<eJrsE2k#t\.<FY_00Zb>><^^p/[mZ%S=9ML1p$iH/X)'[XIV1GWDM(VncLC,khWUUZ4nLoJRKE;DXM_L+)bV_<qr)hVtNDW)Pij3[3`MOr*[b#$uXb[ABeJ?@i7g,B,/,"%pG8aoFgP7+F8uQ\2e,S&P3$+P4N-F&Y=p6QX!ao0@3:(g!d!ZE("?E0k?oVBOs[9G2]sI2KiY`3M#5UADO54,W_"fXFfLYbQWtLI%7N@A`,jBS]aY45UBUW3*aT@6JhoL&/V1N\36^Ys'7"A8^a@r'W!"Kjg0A,;f]AaP^`$b242OH8=[g!iq#*ORrF&u-o)j&cskegl]%%d%3NYcLZB)LemL=qD!@Lp7a_mr4*PWPfB0d?*J@B7NK%Fe(^bbrL[(A?)E]Tk$W&l9N-):b@%S0(pg@Ie&AM?uPNuaB&1#,C`12%C2kX+b@rO7JW#iH7%"o+9);_7fi62[AEDj,]FmEBRQsc+.*H<G4NG/#WYW5iiah.B_dra[R(</4F[m$7`\S/:=\XSZ4bKG3mIVN%%3B4dE`RHB_"&H`XE"Gd?M_!Q>E,nppN3=RaI3mocH!uY(e-_,(R/Q\0nQm^E!8VP/>a3`/#eLh>Ze7rR%Sm5>'g6"c/\eY/#`KN'%0W1VUZBZ3b[Us4H.-H^iD4&".a<$"q.*:aVWaWbI[5>F)Z9l-\I*Hb7>G6'Vk8l,92VU;HM,pZQS1ZHOQn4u-3oKa?<=/F`7.aM-%(ZD!-"Bl&^H^<$;3?YqfUCka,+-9(3Kich%BkYd<!"FL8fR?GAWUQunee#UCR_;E(`iao*_T["Ei8Zr\8SZZ]=8:9=mpI&-!(\9D%cOlBU,f'prF\O+>)Q28YopS@n78g%`4X`3ACN'nk2Npo=U-Xj+V<g_(YB,A,^Bb/Hoa9%K0@"su"A=EADunG)&15M9iDKqEC-t.F%Bh11V:^Aqt6qbt&LkU_j<a6H$KRd!37b('SGEYJqQ7JnUO"A$`O@JRg+2V&jaYKW"+e`]nb/^Og.kS"+^.uT?mCG>H'$g3.7E]nK%;$F11[ND1F9n(%+CahB5qLQSH7SLfl/>ohX5j7l4\-&`/;?DC13;1AN/Q_^*So+_T@[,J]mD(_%:T\WVWt8-0(*FEW+^]3L]Gj>5%f?T:nY-BKl2Xit[@A4L+2/##tgS5<2rG-RC;8J:=OM5GcdWf@V7B;C&MNeaa-QfRDi/T,g-chd[>%Y%K1&9HT,5e]P*6#FE$H:-u%KLCl!.#`%0cd]K"_Pg;oHi0e*C1-p27\ln?OF:bt'WgdBHC86P@E6>Ch0#nT=:YZs.iGMn86?br+4*fRjaC%A[-7#T-hD?[l-U52%PI$rj[R^Hm@d)oDW<3A-'PHPIr0^M>.`kpTKJmA"fq>g[8KC[R')I<jRKd,h.q[%$*?1dk=%OD=We^/A5r<[p#T_923/1&3qld6G%KRYnt#06<"6X=[;dZt-S.rIa7)(E^;RP".4DAC3c*84F\N26V9a.:clj#'5@;Qg9rD=o;fX-??-Z5@/;a/,*%g?8.*mGSkpi2a3<%Enn66'gfClAm=_5Nn.Ou6d?=7JSMfpm@=j7JDqeA1k0,@bt;LU<?J?UN;eO(6:2+'Aj"COHQe>!Md5Ha&X+6Ze;+W-^jbM;>k0>%%FgnZ'/t4BJD"#Z,k0^Y;5phOAMaZhAV_/M;6Er2`mXjoWCL'h.@2K1<G[ufe^9t\4*=JIa8&_D`CQNa[[X^8ljub>=OnJPu*Red0%-?.X_6L(5"N6I53Q0A+h&:kH+>g)FRn8t_-R=N-oU4\2c8J^%uc,o.3`QNE,%tVg$#pbCN)pqW`"]%mAKAP#XGP!WFL1"WHfHUhS%p'Xp=-m:90\1.Z*:':(rJ6D!>g_DeQ$B;tZKgf_O;5Ql4PXske\M=*a)'W]5Z*Sg9NNO`hR^3\i.YJ(kIn/SJF<@'+nRg%CPAqmS%"tiAuhZpLR)@i5YU(`Ni3D#g*/N3sjSm`1m2*eoXX<.5O@Vr^u?Bc]N"s%Bb6k39ILAGF2?u4*@',_[TN?t-@#)"3?-oBArREm/N%MruWD0+>p/L:]mX-J]DE4p;Z]^"/,#?pta=eU#.N?Q#F@4.h*-AIj!`"!/:1e[$GEOi\<3>,AGaFO5_j#8![;\:&0(P[rHM&V3A#%Z^g-f>+/k2R9,4_7*YV#'kUBXaVLaWIRC?82+!'JO?p3tWs+LgEik%7(A"j:Mhmu7f7\t*,JLWk5f+L&;NcWNciWi8Q+gH@-9i:H%UQDk7JW>%1XVWW*0VBb6dtHE4W=YQKZ[1dUO5_I2&j)k]7"rrIUe$*VJ<a>EfSh5U-6J:pdgSf+=fuV4HdF8u$6?JX`\c/Fj<R8_%M5oUGTjX=1W&2<8$5D<8?(,q7;uj!iJT9pq<]Q\kl;uE,I,g.MeY++,I>NP]Bb(rE5m]'-V\`0=nnd0nM@SR$%Hb`S4bkC]q.TYR%f9B)HJ?Tq:FF08/,<XK4Z83CLs#1eIDa4a1Q%&b@[aigNm"b1_Rrg+sH9p*s,/X2(a$5^>cD)p$Zpk5B+oNY>(godVU>TG_^(.bj%PGiXq+eQ*q9Fb!A5bZ\"8X'mLe2o!]Q?\oMjoqrbP8$P2#3BSpUe8;s#bQ15oV>!01AJ6qRk):!VSd6/9dC<r329<&b#NeGSH)5Q%#CaZp41]&Zpr6IZ"f]e/m4(@tX?_m+BphFk/OdIkROHh?*mVMQVp4M:FUWO!N=Lb#ZN2LN)S4k=cG\7?_'=!gM">lDS7FAuU=^F;%6+5-I,aLKDDS2pG6@fSXimHPqI3j+!hQ#m0Zg%9leKk]O31gHG8js-[o7l/D'i!Vu*f6ng&=ACS>X9fslJi0G9JcV%5V`"Q%!7$#%22[83`BQ?TIM)Gm`_m+6=US7LO]q$52J(5_$/ZYS"0OqPn-YrM1=_XD0@E[;aJu6/mFI.4aW+q*"p]$[5+.G+:C,LlZAnsXlLGtD%$`FERe3t]7)aH_M?@6]9TBu@[4o@BGLgM"7g*n`+KMdGJjM4`+:8&Ip.74=HR5/#dW5=hGp*V"5qB]@lXU^.RC3'0cD#rlrOE#-F%8H52fr5?,q[ae5krTIW#OqDM6/5%c#Ckmj']_1lNhZq9,(*ZGk(2Mq<$<3A=JHEnulc`LDLTR<+>*k;+Lkf.sp#mNsa:\nag,#1Y%NN*g-7d8"rjf98q!t>f-cdb!HY`bQkMI\>TKsP%ieV0!)gY)Z`>.PB.b"e@*Ktnt6E2<smG&oa#*1O'r3?JIV%6-oL+TH[TrkIPL%<#!P%7Dn6D08tBpXKr"fO^:e+34!=TfCbApJWC7?26:mKhm%ccJDf@'YO\-Q,/epCP54AOCd;*UL$bScB[:T:@n[M-]Q?6L'SqSX%1BT;ZK!MHb>60\ek#\q&NUD7:Gt)2U<\H*E!eCgmgtUjlW)qG!;5i%NMr=s4d\;A;Ye_X,K8u`6,U!D<E^7nc\RYk.XS*FE'_](Y%YM'PD&^jJcKJPdb5rSXZKVgQQ$FT(Z84:@Om;EBAmH$8Yic6H'1(XngQ&-#1%u_\mrq-fkEtSo"N$')=ftNUaB8]2BK47Fd">28b%a[d1^D/t9K7HA"UK*T*o]@'+&aW8H3I/kH[E"Ai6E1%Z($l2Pjpr+(<<'b8"CHd;kbRj5(?lDhcW>K*Ki>XtiA`HUkF(!tJ3/U9@%&Wu;d!Fk6!FBjpQgc3mVTltr[ZNRTL&`I%B'1fnOEF:E.ZpK,h2CZD_VUSMI)<`Ka"KpG+1"+u0YM$elfF'e,a#Zgh/4Mb2#(;\u%-%BnU+#XG(5a`JoQ5KE'=f_lOG;CcX$X9+4ed\%kC^[%=6pt^-1*OH5DjJ6[*,tjT["nu%i@OQ(=\(rb&p1A[.!._NQ8"C0,>cLK%Ojeh3b:=oJM7rnMU<k[a@>,XHJ"p'#,;:jQ>7e/(bJepQrT@]NVNXFElmpahO@+#,[F^5W<>p98$/%QYZk=mZHX0M>a:`\+$A+E+%Au%hAlbMfJD&CokNEARH(g]7M)mQ:6j^PH?N&j*PpZ%_f7&NHf.C07S7dAS`Fe6:#9,RN.71:Fld]!ON%lY"-,Gkmk)$Y?n3S[[k%KTdV6T=Nr5q`f0Ai.XqQqZQO?5)^5iRu[gi4=hF4TV;ri:Ks;M61<>2DAU$C=*B$AH+f9Q/m9C1kZ,U5+HK_lHiZDb)`1)N.cZ7I%qCr"L?jgn\A'thJ/.l&ra:+`@)7s,^IB,DePW@?r?<jc@>P3t`@A;%Mh:!R(Wj%)?ai^B#HbYau5$:*g^8D?e@ueNK;R-:=n&&6F%OJShBjIE!KiDN],LEXo*d^D2e`T@Yfjni.;cOD,7H?`"Y&D;s#_tHASXk(YNN0n8cK#^7e'^&SJ\-S2F(9DU3oie'BQK6s_3&cG)%LZV<@*/:=J01tH9XtCR`c26JDSt+a&n.k5Wq6hmr)0nc!.!@4(1;i!$S;u0Y^s%NYV`A-i)$ViN!a`uFAr9iqL&hj%n#4tDq].G1%HAEl"#QWd8>=)u+oe]?%(h=P;(L:mpXO%HNL@LU(6]Y:B"$r,Z.()fk[2=%e0bQqK;Ou;%7%IQ6*[uY$1eE';qeFb];3!-'C+M)j%!!F"kK+:5dN*7rPTn?V[R-VG-Y+)Nn60bl)-Bg)\&#WkN!Jr/]!au7g"":LD&=p@?$91]qHJV^Y:rX0scs3badu,>iOYh>1;b'16%[L1$G]#/_Y#RK%Ff!DkpC:Jd"oqEG$g0$d4mU>>"g^b5`>`F2J@inp`UM;<V26tD"3V+:L\5BNP3s0Y#(84Aj8Ze,?"9\7hG*!@u%0Va1(qkQ:#1Oagk!8Fq(P6%_i)%c[R`]M"FkES!@P$q2Zj8e)4f!oS)0Idk>Ne,PA>.qnpYBO4:+S>qeKEj(i%u$2L&h\7O+S6S8%X"m`BH@2nYV*I1KV_t420Zs5s*!+=k!DWX9Q![qS:9YBblL1%%EIPRq`O@aLZ=Wn6gNaO@'C5rjr^qZJAok[$bDW2,e0^eVRseu1%85NSY_?E46h,'DPL*0+,0\eA7Bo>6^lGjOS;Gb^'_@6:XSa.+#V^:hgX9ETXC)68IrqY56`JW^j@VT)X[\.$7la_KKE5<J@p0<SE%LdC!m=ZpQB6Kt5/hH$@>8miAd2^'EL.Dd^Q6q_;hH8@/^!!Di1KNWX%gONR0Kr-G=h3h%A[RcLcP:B5Yjj91\N1Mh)Op;c,Q2]_s%(]_pa)92<J$*[d5]&(96nb.&NJ;u!3^EK9UAt[Xh`,KLK")DGu6U?`94H!Spe@5hWq2E,g%3Kq1UZ`4:2qbtBF'/m/V(qiT2:b^0%%t('XHn\b#I[#)BI3g*>0M4U1&0WVpe9>D<UaZ;Wc6g)A/@Kn#!H$/nEAigW.5hYbg/L+i_O$A.VdLfRA&j['Vh<0<E.hTbABPU1%P1E5Dh`K+in[a?Yn"B$0MT:R%4dNFX"[8-;mC"qINC.;hWJcAl@nQ6U<st8_Zc*Fi!$3rU7Ple3f_ftg%&7o"rJ*R<!CmE6qiD5#%.#C%fDc\@@>BF;d3g!MR+$XgehS)l&[@!uOW?"1RU#%P$"c-gqN%9c`0mQ6n5f?74$I<rTrJ??X8pL$OoW_NcaXjU^/L@/;5rMd^%G;8@RR3f=rL^J"?'d<ZP&;uf3-**![Zri&$>Zr8)LsBfVd1Ul&AZP!S7M-$6U9XtC$;oW*]EX2",BBta.n.Hf[R)#Q8A[bo2c%`T%`^]#eYi6ina)&/"H55[8Is!a!hIl_20Nm(4lHSc!1!t*6&f[J5@rG8J>*G=%^-<CU7:'XqPRpCgmT[%@;C:/,>/2MjgPRjSFd-DB%+#J9qME7C\o9s>mNb"0JR#rh^PGp(;fYL7*bo%7C/Ka!>&P$%Ip70&e0#Z$IZ>#K,=rCUOK.Yk2<K<7/RZXYa0#\;O,f;HF0.aTK%$;a*FE?WORN\<p;aCQQ1g`Cn#T$B=52pQ!#P;:uS_r%&L"f'#hC9o@8LD&uf=m_$.S<^?Z'La<_1#c^m]r;gr9]DV0%LO3OcocP\%.0G/K-cKI@)VBC$ngP)Sa.r89O\5n>6eHl\Aq8#.O-Gf,I8];LO^'>>V6+4R.4Gcc:ri`qD^n@4=%sfGnmjXKKb:$hX>$*oNaQ<c%;5FbLOHNW0:sLQ/AAt1AqI!6TDEo2id]J@2:n(LL.Yt%U!4a=mUhFSFoE5dN(TXLWB1_g:X<kdp24l^&js(37+p0cXTak<tpIQ-(%`Dt+nM4:HB.1/NZPn0'#ap&ZaGFL_1\nJ_l(dqmb\]4'H/Y(2o<f[g$7a,Iee4OCra>NXZB%CnsN-*r^XL&..2/JTEl-8EXj41\Z%SHlDa/+@*`d7RGK,N8jHH*?\VUT.A)0>u.c:`u.TQ0aLX,cfUVP>Ah`M[aBCmnIhQb&/#&_0n#]%'-NL\RN#42oVN=@YW2gO-#4R%(+&bf0>a:VnQV>B_p=TNTNkn<aH$5"GR/))Gk_EpRu"S*a^?\Qp5>c',VZ/f_POPK.FR]\+l4kAX!Ol!7>Rd6Ao.QiLrmfp&r2,[%*0V+p9'5o/$(9M8JT)ii<X(UP_<0a%+nI"Q1XiZs&]U1DjRHc#A22a\9GYHbg#IPW6j/N'-R@KiR.9/\bjj].*nlF8H]aqd#)Nq-%R8dSiRP\I2AcX=))`m4=E6#-B4;\@?5c@5*Vl$14U0\Pb.OkS)r]G97(uTNCf_6rJ(*jT0@=esGn!C3r]JoFZ)jjgdlbJC7>_"HJ%Dnsrd:3>3H+@iNa,_c6aK06t[3,('L,AK[WQhD,I03M$n&W==:At@)`N-EdP=jrJbE,c$ZDS$ecSdro*.LZa`i(7HoaoL+g-WaeD%;SJ'(kPP^D(E34=p#uWq:kO$opb%Y*5<Fc,#imJ.0#T.QLFj5k5t@>1@N?]Q$krDPQLRoZ-Rk./;D4`5:"W/T0f1]r_sg9/Lk$gg%<E=pW&DgOt7Y%!V#POr)0PN:f3EnrY&JN0b`jA4\*f25VC:IeW_sF+2mp^:Z*_9[D,@24%%\mYOC"Uon=ulAZG-amA5HcGD<X@8m%,sM*D"3rT_.p`En@bHWdjFX1,,*!Cu&K*tAF[G25MAtC"DDe=9CKf:))@Hg#*s^1UC!H$!!4am[U,'p79XaE=Yf5'JTn>HPO9t/,%Hn>m`@1i6nWd/3e=>42>K0q7,]"7-0l!QYZY&Nj+MB!I:n:YHEh!OF4);]K#;Sac<S=rjtK<F3;Lks*'5!_Re19BRJ2tW"=<g3I)%i5+B@ecDL(ZKSe@,:$6L+spBM:4;Kh5uA=b=a<_#UJR!O\L%L1UG!*Ofd]Y(i("b"['+!l!&:],,5*E%NR#aX&Rl,kd`T=\-W,SO%N>Q'S^p'UQOq-$n]31^_#Lj8s-o([f%]`^C.8-PJKsa7?\2Z9<RF:b:d[29-X`H=O;)+^I@L&@0DQs`l]BF[HGClu;n^dCp!`19]%'HCUlYg=Q06Qonq@C9l2)hoo=8/@PbF_LK6XB?-fR>Z_?1PngUUTq?UJ=)FKEO"CbD,"/APnOc@O\P7e-mQ.))^.S*)VB$r26L0m%H2?O`*niU!/MtJ@BpEcS"Jgd/',1i<K(QSV.rSJh/t9q:I=87:&i+%*;TukTF1ihlQN2lDBdptM49WRTE)B939t?s984_T0n<H<=%8n!Mna[LoWNoJR!>mc59N/cE8Gu:u(ptZ)7(>/*`Qa^r;OH=,X,[>DV5ad$H,F)[mB5"%++d%O-KARo+5S-hKN$>"Y-Vr`:(1ORQ%3+\[U`A_mQ"#",hL4E#Ib/PI#%r!e+:PsaCcGX6n'mQf_gH(>D-6n.4ISFG0U6Z93b*+.DUbK:]Tl^r&_Yajrrl[5*=@/S)d__Xc%$D-)d3nG<qDb>`d>qKNXbVpGT5)C9k7.JsT_G8JZ-89M$M=.enR+\^i0-1.aN<%"-FeY_jfTs=2:n<06OnhH<F)F'd>HUPSlnl#E%eIt!e4jdTtmB3V\pk9;fB[s\eSFY/5HaR/iC#4h/<MVXjSra6X'6QHr-,?En3N$-MF%_A'XJJChnd%@^b!HP,>T]8k=$Jq.jgj_N%hU(84NKD@A18M[dFZ:qpgi77Eq[gWZU&dHU3Y[SWmcUIp.p9b<UEQ`o0c0JND>J#M!;"P!6cfBq[1BRr;c?R;4e#G4S"Z3o],FeW%'_m*T*@T^lpj2#;k6/K^iWt'@RS95$U2ESjE#us@Ct;!4%p0+CAe^CC^`GfODqr\m51g617QHh4+@k?5bd-cX6B+!iEX#6$GY+7s%6;,S?"h(ZIeY%$So@n[uCE6ne-u5-!j24ZE*?Jl:V.1hYk`ZEkQEm+0U-,oL4J2cf:)D"0Ue+0?l4ETmm3sh1QJqYA5MV\D\)1;8%p#RM"HN!j'l.Z^ZFrhWqS\0?U4?Zsj*shDQlG`2-)Ys(K%M"g%X.9Dm(QH'umYtFgEW=TmqnN*Hnc-?"Z2M_`m2t4CdU*c(n]BdO%hmgX#UOMmhXZJBfJim]KD?'0ISD1VU:HEM0\-MTU)EB+HZ7P(naX-#APCrSj:N$h9CYRUTTPVspj<'?p[fbqeF<UA#7G6r!3!pCp%]Fk!1:@mJGjXi.'pE\UY)iP2u;Hf$7T=MmQ*6<=BZ_EPEFt=Po'L0HRWU3ZJI?%nr0m@%HJn!XVq^>=qElq<*cC?f<D99=Z2n(^<%U$3f$b,;NYX&pU1d3L-nB/andFt2\a2BqtUP7Y-V*"t>@G+1Oc3X\Xm&p!!m[mhW6\#:=Sob(^F0KUU*XbPRg_.FIg.o`?63oE38%!^SN^qbi-8k2c3uoZ@c.2M;c&*\!H(W/8Z2a,kF=;ro$um"No\':DP^9PsnCg,?L!5"1ksI[WOG+UYJ+Dj:&r!(c7O;PK's=+R`T%pPk#-9UCTqJaoY:Ugm-M6#A*'OP9kn&^7&l0[YT5H*r-B92;\<hp3LZ1:9MQC\g3IV4#trCW5`_Ia:La*Ve:*>:-h[K5Yb6$WTr8%'D.J$CR1ZW=A\i"g6GL?lQ9V(FX%)^]TCD/:,X9:_VtuL0-d.]<g'n.&*g77.#3n?,if9Z@0BOr,k9Qh6(_RL0SphZ!a-ZE3U7j,%g$gatl$s=D;c.RY'+Si@ku(hg63k&@95Q\/^m:([+R;Ia=aK)&J;Z0[at>G(Ou8#O9u+q5K%(9>;0(,UA\&RI>0oPsGYBC?2IG.;%+?e/h,Zf]O+D1Ebj6'.B1SX_$0f:7IcPG'sQJ^#OW?c--c*E'L*m:K1a.YsC5[01=mL78idXc_)Qn/5QNL7\ca$dZ)1=m*!Cs[er%@1C?'4_rf&%[$hhkf7-tYG=&FYSq"PAk(iaVTW,J"`<FsQ^R75]%U/E!L[)F&Z!XPQSQt(bX`$Jg,>`5]BDU],5\Q_Ngem5jC>GU%Y=F=A>I#qfBTkMs,cED\C.G&_#di)@P9k4!M)g2JeS3%-PfN=*iY47qWsCouhBo9fVio6]`Yq@m`(UYfCndEZ,iguO*fuW0(P)t0%lO$>ZEp0Q<a&(XqW^ec%(esUt*K\JskKQl>LsQhRLbNTm1ia4Le@ES8c[hk,+<jOC$Rk&eQj4d]N5*'YZaSD*_8MR'ZrP5aklO7F%&[0nhUAPplE9(,mORgso#;nTWh3.oc8-`9MV<eW2N\Z_S66YVE6#O:`i19F1pQ3%$o;(Hi<[&\6*W_gi4BEh(nkKkGa(QK($J]*2%@V7;,K+HZ:`<e:SP#"N'SpK5D4^]ce+5#r@on`fn=d'nD;NumV<d<aQ;lNc@_2J,HT9Lega+@\c$8]iqcp^80M\Fs-8JsSbCP26u%e4V!\V1B#Z-tt#V=<<\u@_-eqVsO(BiS$H#Zg81`:Pj.CM<tiiI=:?GH)RWk_-*0GCIVOt-h8a@$=`PZ6"`W.N:^,J?kU#+Ht&h-%&2)-n8OnEG9&,SLNA(Om;'nrP6RLA@/(_lm(9m76QB4Es@dRqr*d/,S>erjLV<Sbj1^P7`-J<&;:>u/=SE?OV6?U+[gKJ@.K4$V=%P9kLrH+OC9Q1:El.87"L$X=BFOQBF5+K/Z\Md/NE$=jhaYlp9W\?%T@N:T'l7fmn&m3ZkdnZ=:gG>&DZZNP0/5U7,YXkY1`j<9l0%$Tf`q>jNe_YbT5+PsmL`63f(+a]69*:D+X"XImn*)j/c]"d&l&V$#!4&b;_Z:'T-[D+-W7)f#Z8iKi7bEe6P#4Mo33joClRVoqh4%+]caC&AHU=!:+#bEc#DW04<d5[[M=_7K.h0<HTiNEYNSflr]AB@\6]P=1P9:OfFWt<De!=I[95H&Ac4T^Y2!5D(PX7,\!;s85"Dq%A-?F&/1MRs+D*+3;>"EMIT"?C>ah>L>]N3%*"R@<72AU(WmA/WaC=F[%;;i2pPZ>ja8s4X+H.VmYAN5,FZr?,;V.6ZM7t+MC2NUk%Ya-QHi%_PE2*./#ZH'QhPDt*NUTrH5;8c()2(OiLMj`b($A0sU8?+j#-^T[<'B&k0Elk3*/qB;9$M])q-40B]s/MOYa"s@c9YE2n%nr,G6S8V^eXm[MWo>3[/,>DK;=tM`S%$h$fRPd@$5N_T@,-QHc\1J$D8Z!';B>so16pWh(bXP_7caI.j(Fa_taBp-HM[ZmWL.ZT/%X%ITS*^`m]@+$DV(!3W;2&&GsH0ZeSm&NfQ%Ut#V5bR4=c4T0^bF+hJUFPiA87aMuSV7%]!BJ.ghrd*3^.T`N<MpeeHK'W)/RJ["%b(Q^>QY8@4+#Z#KM5E\(:>l#cp7fXo68FC28k%'\N.=;'4rmnK9AZn0*_BBGaIXI6CsX)S!^25?D_0o/Aj&Wq-:si2=bd`^Ln-EU%=S!XSPY$6ZEeU:T,3,CZ009Z3B-rIf8&1N\PE'%RP)%`i<TJ8C`Jon3-A'jpU9@H;\)+]!8d"'ej\!rpDXriOmP0#2c@1B'aLML1%^a\JYUqk*nC'&tD:]2Ps7*F-@$\ftpMED7DF066*jL/6UE)b7;jC+j9'=5>OF+VUl"f_8h/!(e%:l4-1,,Akt'b"K/$ES&UWd7S/%KGQ<K43F8<2QQhq^CN-q+YeeiEbjDN6%!?uVO1!G%lA;<?j0sh**:QL:lJJiW,qVeJ.1`H3>`G3Sd-qqk+->;ATgO2?WeEs()0n[%c[hqCUdTONA-<%I?G*uo*-fUN@)PZ$ZB`ZmflK2XOe^ST>IfTYEWhT]K-4<n6mS1VY:"UG`U]7mb2H<_*)2aqGQ?ghWI,%/g$>SJ%K#B3,7Ac0S`)"l^78K5gpO_2RroNM=9N<C+bk\Ie?0>?4LeRTP>+V1L/?jg_'B!75SXQU<<pkM!>S6];-Ws;>b3q)CQ`dB]R8!%<%,1i*-"777uc&kjXUSaNDUQ]E6!/bgqbjgXdV%q7-D+'QR6qq6Wc,'Zk-b`L;jB8]CH-PF#jKN97es'G]4@SIq.Aq<UV*Ln_^0,7S%HjWN3O&M8T3B^rHWj,Ao'e:Y7WkkZ\6uID#<u[QJ+FV+)HX?!1H"-?]F%JDVDE0$a!C_Gl(T3<S[7nt@876R&/D)#r)=MiFU)7/X%l9dI(d["dV49IElb%hW<msp.X0e<hV.V,_]Qpo'>.ZFd4mZ\=l-6$QDMkeLTm'<,kcGT56NhD&Bas*jQ67(;I;t9B3.16i1<3f6,%3jaj-OW;-]6A*OGJi<CT[W<n91spY97'%gVCm[O$[.lA2/+Fp/C*VZ6Eu(L*0U="qMMYSo&I3iI#a6,llOHPuo?>D(l$U?t8Yh.t%9<J;R';Ps`P@4sB>\>(q=WU%q?c_ZUm$U?q*KZ'lZBAj+^E?U:M9o;5V:V#qfH4X=:6k"EP&(H="HbQ5+sqR9;PG"^ie?%GE'43^%@\ImX+fdH?I[@&TYYduJHA/m@3".ra;Hki!TU%2;Z"-4[Hn7`5o&D=?LhE6@6`-U=`qlD:nB@Zh3Lds!S%RH=Qtqm4!6p83Z[B4D%6+:m@o$N,gR?T+GR5/3E;@J/V7Vi^ZK[HfK&fO'pO#cnl#$"?;R?A-A$k53OUa*>Xigu6c@=nTi[4*L^2RDb;?tc5;T7go+XZA*c%9C'\fp6<WB14CM_VqqFl3dA\Y$;#B@9$bX26msD3P)]L0X%gB-6ID(D"X22PJb-Ik>>@%$-IM605#aaHBg7cO7$cH7K1X<CoH\ad%,KP#E;0M;@OYrM`Bm8'#V'1,@=e1Rhh4n.Q8b?o+h6H`MJ4ho<:uXn'(UC?[aDn8E''kJdeA=quV?!ZWmNp%R^?%b[-4N5AoJ7t3%ZP(j=/L<0P336CgoGrOu;&a^ieS5koT>`T&C#U];&:+h>&N82/OV-9T^oSdL*"el&7hZ.7""B\<-:*?Q;6j7S;_/Ll&aobB^*;PJ%L:\t?3Dst-*%tUC4(;r5K,l!$p'n4D3:RaHJd*:IVP<K93X0!7a<QooPN5#dKPilPTJAeYjgD4S*j5ks48*u8#B52]ed76GB9*jc%b-_TR,fBjDmuaq&(-RI-JqZeh$G!S_*DCKQR1/5sQ#*K6q>D!O-PJ:u]ri1Qf*u/.c-/mgJe".Rf+_ruo;okjHQ6UC\n#XaHc*[=%bH>D':6TA4dAttp,7#>8M#?'[]Z5r(T#;4=B:*;b%MUg=kQWQT7"H@6YmE>B2QJ=b(JJQjqBR'2;0[7C4H#Jod,)#-4BF2SX;%fL%_A(QBE"CL<4&>FokiEMLSIib>eqtN_`L4rZ!M=R67#8sT"YE+plll*7IPFU?QrSj!-(,8qZNS2?>M0Ju?.?;WliSu!o3a1[SOEdR%)9_)/6%XE9Asl^T#05.oe5&*2(Budk.?@tU7u.SSaM]"IMoVb:;2?dt_#_JaA9)\oD,X'\f$AAi=PIk(Ve0o/Wo?J%8nA3M_D)TK%CS[u5&WuSdK]p[UTB)4bH%OdN/gh<44_G:D<Q<5=2#*hKc<TDcScc)K/3OsuOGIP0k!b;*)F9mfYWGn39BNYsJ\bB]=iJo^fF_,j%E$tGko]&3YWJ/kcqQX[CUF1mqS0rB2%rhj^!Ki,ofR_[jf%ThR(+tQdrh"a$9k*DJ%L-t$8n);64k+"0=NWPBs'->uPDT)%mg]l"%*:Fr=mN0$NF%=:kpbVp.f'eWROJ!tJBC5`uo\"GhmF,:Kn*_5[>A6@L-d./(Mq.@We)R"LnJbR0D'=CV\D5inI;un^HF^Yi/O)H^%gq1$$Mkeb5Mbeh)[XVY#qSqMilXF\&YACtI.<k=0hX^<mp6"*ZG'J27Zeh"[f^ON>faf^DQ&59`nJCq\:Hq!Ug\#Thl\@-[Hf$LE%/=p`$mll*,[q`%UM^s8IdGEjPEc:L?FL@1Dob:M<m\9a@d;$;ljE1-O[X!Y8?Yu0Sm2W7qs5.jWI`d:eah"n_2QeM--S7+PJ'Q19%ci59lC[S4erCnC&VjBUgk^UNUm'H[5o%A8*b-CmU'-@/IPCHZ"RP#8'2D8TPBE%r1YogA2VN6'&i#Tt`PstEHJFD'1MqiuZ='amZ%ncipAoPIjr)$LQDh?":Zn_O?I__&C-i!&][MradTQgU"K%=IBp@)d064t[bnX,ZAA>h8KtEgXoOp8HI9h<HZgftuW.7gR"A[s's[%9phsU-hC^AmsjhSBDG3TTVn\Pm]B6%h>?TUiEm)i58J1HW?3*$]Wo!@]='5J[r1#K]"<I!\&)JuL:0Zpj?t0,_ie9c))r7=m2n+Y%YEkMF"Li0X()"jYGAc5`Z>?:A]Q7k.n'UEGqgZqOmd]/jg&CEUnoV;7HF:5+pm8rRf)+4/+_Z5kiSjbJh9_4+pY,2eYM4c`4]k5W%TtV\j?CSU8ksnNFQeUD)rM'V@PMPWb1PZ2sB=k(.[&1As=WX2Qrn7g9Gj]?Ko.")Hro;b]NZ6@&mk/gFg'Z!%C9:OJQFAO@f:%-%%Hb)^s%G^"#VoMS/Nt9"g[=>R<(B<l3H2Q^^mC"6pVk;?GfkEDBX]p'jn$?$+p9u.2[bc:%Dm^$=8,QhA]Xst'oWO>13Nt_3=rj^T%G"t5,q]k^iK@S)cq7fPBp?+<urIYo5X,Z#r^O3KDj(nVh+oUZ^YM2eKX<#6g(ZPV,\8K^_NRr:BcJl:8+C-C%1-MFMDq`SdPD3<j%11.V\DcWN?Yf"_S1ZS7,go32l'W57Q?esUeb;bNn?*s9O7LeURna0N8>211=6fXZf(M`PnXtAPb_U.onYG$q;3SI^:.0"R$Q.Iq\%SHYXW`HX,_Sacr3XngMVii3**O+6'=S@iYs@nV6@H5Dp,q24.s27[K"YBZm%+!WfiPd_2PDM$/+-,Wqi4%>a^5`n?[Gc7]H+cZ&j%4[kjKoV^_lT0@aRZ9"gpp#QAV-8"GL3&tgdo\o>rjj@ZM\(6JB[OYGX%RCmjO8Enkr8a)SRm>W`gYI?H2NuJ`G6b$92a$(!o=9,@%-PsOPMk:Z72Mjlp^OJ$*=(KtUfFcU/#;YY<JiV4iqE(QJ5OSjBdoR<U+$==?eC*sBH/@4[[J^J%L2gj,A_?X4#;=e,+$:C+b_Def%s.EYMf&b$=_]MnaTC2(DGAVg-kMBRXpFnWjGe*>]7/)Eo^`dAXd/UC]ODhWW5E4%`hnQ!,pX./<rp+In:V@5P1)EOQUq@a',>?ct%U?do#K\D/GJH^Oe7H*]@O8h8Kj<&BSDr(<[YH.%H)T1Z;PqB:O2$%EPjIEFQ#?k++$P]NYT;kuEI/[aLcp.(JriPejl#2\TiL_2F%%o/]<*q0+L.c&IlbnN2Xs!`Dr[b?qQfcA8dpmR$<*:YO*MSsqK^"cijk1br_gMNHrZM<tKl1/rhm:VE>0@+jW4P2[Lhu1mOVB7p(%]f9?#p]okc=T?[1ea[g0'fQ$\Mt)l%Vu=LTkV&h](J"GC0^>UBs3^8NPJ^\l6\`dd[rr9_-PsAnc-S=lE,`8cnF1*mRf:nXHN)YY%.Vi@KLPNnTX5alihU1R`bZ6Z/U:&>H*>dsF5<$2J^)u0SaNlKpnp`h/s*PCW:P`"H?S6O4s7/s*l@6tDq4FVLhqVuAhk9g^IUjK?%+!*"Q[a.)koJcTpV)ISGTANI=,@h3"h2dlVUP,n#EkK(4QQ7Z%=bbV6epf(Be).n=-eiu1VLhr5gH/n3[Pr8?H2P@5?:+EqFaQ5F%o\&*;c<>jeLWBF?4`gQd^h5mh4ZPNtE/c*2_*>Kt5Ip0XgidkW7Cr7K-GobX9^>#*-kt4k.'B0NUWM%8Oo6a(\[^mR"Rgd0o`!/,%W;XcG8'FlGI<':Qd4ole&YJa-2DeGrDoRNA;-('14C(-NIJ)HL?*q?Go\niN;l83G*U<"aT=+^j0BMN;It.Bg%sQoh\*6+AXC$@)%qFLU4^@S[\\blE`Dq!l%RCbKSSXph)IX#tI3a#t\0+S"D'Zp3$dKe1\%o9]ED=/j"[a<;uU%C5Y9qnCaE^ha?KFuT.8cRtG=6:mC%1:R9"?CCWhjH]P1Hp#/-?EF^odWid@(7uX$%pl?_HgC[I:7hL#>a8t%9<Uta7p_J\b.tTWrrFpdOV[H,7U;VQSUPWSo^XL]gn4PY%>2pp65+@kV?P3Fb6/*J&m.?D,CZE.$/GE2CV^iPXT0-W^R8R=)$="g2rkYuB8L!j3Vsj=$5AS$r]A8eLRl?`'I.a,@cI6\pfm^>_%]`$s8h:%YgmdJZBgOX&WR#N8c9Fg'-p4OqbnpCjC6QYF/IgU8f1fa!V6GK7X(7l'MW3_8OI/Vg=B<*'F(T.Q@Nr#J[)b=9CD26Ke%3tU8NI8#4-@-ACQ&\nMEZg5P^F+j;2X3ISPdm=BFUtWH?f>(E:-D#fb:8Fou92.QDJP^r4W4Zfpe\`Jqkc$.0A3"KZR=KEoVJ/fb%FjH(:3Bp@^!rW4X$+\caF,(;"c;qCC>`akiG&jrn-WHMn@]V#$`!^2UI'S.)3bTL9](0tfoHsQkG>845CRo5Rd8SW<b;rMl6@'Po%p0RXS-h!2`lg+:W\+jh;kP<"U[0+5c9W=nr^9`.*![=WHI7+n@]llK:c`c5qEpNKe^NH.Ca&EMfqW6h.1$"_dj=N?)Zmh5,^Cq.Q%>e`-gTNg.\OgPi'/W9caP?aVo4#J!!mPn.cZlU/U9H.:thBM'CecROn]'JTbV6L+4(_/Z`hJpaU<[-`"iD&o;eJH8DAZNg$W6rW?%0C>=t*4kfr@Om*&PhA`_MZfb4IOS.\48jf,6B#2@\%udnlg'Yp)Pg`WqPJ.C)4Yi=Z!S7+%]L)V[LRM&^BA;<fD:oulIJ]u#]pcZ%@rS(`lRX(.]WpLrpqlpi9."0ir^Pp;FA0\A&5",8!pOK`$XoUZL%q,h+0F"[:Oo"hBN*6[`3gU5YdCXSW&tQl7@^:7B\Co$GdJrO%+YcW)"*7Ikj0W$j#qHE`Df&^-WY)&uGF3k`l`ot.T!ZhKXtcn>;!`XnolLVaPTrZ?*RcTBgS6SoIXa,4/8aelS"B0rcTiM3/+4>4%gTfeLnJ,B=3P(()J9DK:Vs.Y)KK^rhSZghoXi"&`!Vh=km-FEB;TJqU?$e1!Q_#]4EKqnX9NBsV_N7p;fTksZ5b3UFVk9ZK)/k:L%H"hNG('<$FB@.JWgMo*K:rghI:<0?sFu9nVfiGoYe9rf<?=hIA@/;PdS!HP[S)))EgThF,2(q4T'-B\&c%L"$Vhbl]+E9e0L!jQ!%@uYd$TkTQ6F!oah\m<Iog)@/+m+=mcj(Ni_D;N@D)qu\FR'p3Oja!D:A%TD?4FMZ<ZuuGdfQ#!hF*Lt]\JDI,9Q=8%\B5'^Q;rSq%.$(4d#h3p!>N+7n:m"Wu4AXtJ54_!DnVKJ6^g]&73[(r8Fe!-d.:XrKbd)09ittTB)*d_AQ)KIF++Y]]>#&<B\P0H0Z+0>n[XF9,%.rF!oms_mDo.2Ciq1M2X#5r,o>HC!:3Y_"M:.;H7DHrK?gK&t=+'?N/*-aZkI"j.hD]q<i:VU/p@>0p<Cb+k8PM$S_%ia];S)jO9%P@Ll"&4CO#ZdA\?s$3TO*+`?6\os5CO>+if\]b\MM^$5!J_F2f0.,BilX:rL]Hk-.e(Qk3r6iO,b=Kgp>"`;<)07!Ta+67*R3&fU%3N7k]7ELW,,.^Nu'!\[JF2?b$/([%`fhYaePP1N!:V--FY4`Yf)^"W>c9cX^LdNq)LqJLs?qf]HI8_R3'XZc4Cjko,<9[T14s)A#%<f>GEKr?e/RX<>feNVP/^7Uu;21>GfiU]u^[J45*`;qE=f5uH:n+ol\"q/s-^Y(U=-YLIo94)XOgtjpEY.(7qDJq+6S/j0<=SnB]%muKgPh^jehkte(0$@B`:dgcobXYj2Jc;.$!f&X,-5$SJ;e2[(aXYH*GgY$n4';8isPaXa"<&q<ia`jsE&>V%ocEs;K;IAd6Z9pfq%3FCbn8`nn)<Y:0rEl-"Z_+'^2PK;Vt]<0Y$]C8+8bQ*5==]TeR654#u%+P_]QR>70KT#dE'B35#]V#q!]3Ta/@Y^;.Qqc(\:6S2=%A*c's_8,ZT#kUVTl6`UP[CjU6D1]<aJVT2tp,@NKD4*?,m0.,[^8["]RWY=`I$pR17A@?FY=[QabRtrbRliCHiJ_nb"dpLX9\@!L%2Xb+i_;pS)M+ElcW07''`H@.]>LnJ)G$t+f]Q]k5"1i?QP,JL,nssgggu`au(6aM4C$t\Hoc<qObWbK<U$KA&r-(07[-*l2G21AF%iROG8f9u:,3K;e5gJhluq)'6N6rRjOC^(Qpkc>B?;.PQPC>;CAmCeRT-fNY)HMD4(3rHt]cV4Q#.koN;6rRhELVd$c`0.:Db(=u>%"LFtK>`e76-D/[&Vn)#N*Af&q!YCt&!)[Y$mZn;&5C$Yf:`)?&"o_tHpZ-EQ*F$nIjq-AWW=g-^.F(AX>VP+,7k_@1l4>$XDP-="%%Se)t:RAOss7RN5Hgs#of3jk^s(sBIqiBM25<3&@XH)%#5@=B^FRe>8mcj;qmb[BrO(;[;N=-'iRbdcVrB=I-r3/;7j5orP/cV#\%[#[FWSXpiR[b>5?[X?J7G^+=R,jhRAA[^L?MrjKnZbtnpc=6Zin*mh-mMB]mjL2;uX&IJCcVBPH:>;OmEk4<grD0jW[m`J@gcImO%C)_;%qopLhPF'o!_Q>E4%]6Jb>1%LV,KGE`]3a4dqh)fRmgn12?5t%rVE#2ukG9sDXlhKG7"8o,q0NtXc8c/#bN%-hp5eT^]/tq7%EAK;[H#Z6mWr6r;CiA!>Hi&krXEJd5p4m5SB#sGs[#L:OI(F(U>>EE,K)?tDg\Cr;&8l^%G<G5c3:)ZKn"(K\Ec:]j<^>+<NXek2%[G"uZI'9)DADGR1S<g@.q[O']EW<,^^"DMu%?F]MJ8=oEGdVV1QG`O+PPAO([G';;4[8mSBqN%]FS<iLDEcg'nT*u/rNDh8*Y!T<%n%2dd[s^BUbs2,7FaQSnj^dt3hRe8b]TdoSFagpUqp"]=SW9himH#C[JeS-qrcWA;2Smr6j%!V&n^!g\gBF@UDOSh&_pd)PrF&#e%6q2eVNSbeZ3-aoDm1t(BbPU7*:GnF!b,2h)@p=0!3jfp?[sQJDWl?0h=7l=S]u+L+^!B_LB6u"sq-;@op>547gK3r$rjD.ZMtR6Y%n2-X8]k;EtIt+mP7_IAWrNP">QF.g#[D%^td,4Y-79MX/2Q#TP[]\1u!lMb<L?ng:rPp"NmHrkaJ'f%/NMZUHlLA@):,igS"M8ns%nF<)346KnbYPq@WH]n7:T'ZH![F[>/q$KW(m?M@5J,&*hK(=p-?#6c^O#'"=(Z(!g3:rD1cWu74LIBnp)YpejXZS2u\fGudINqPN%hA<I^&'"QNInY(u]$R)(Jb,5:Grfi_`F]YFbWXH3pXsfRDXmp,%p/9!@J.L3Z/>/2\%X6Fj9AhO0Dt%a(7]kp_tB=(?b+s-9eK^g%DY<`T2Ks-5>5(Pci3;h>`U3a_Q,=:+R_Quc][o>j]_h'^FEMWm]>J9*NuOQK5$81[h3BQf^>D)"es>t*olG)d)38^HVlZpppHgr.%H5/6`eID%0%ZR[h2L][eoo.UG96/l39X&2(lhg52Zc<<s%i>1i\n6@L%I*)qrqCW/d;*q#r;#0TP>u+(r4$#eY3l2"GbP^E?XC,f%6d+lq+2;/!(XFsT;d/SJah)ulfrlJK*e3sH4<!<V\Ei&)]__P[_rnXY="J]6Z[]Kk\pTl^j%f$F%d:%P\^A)-J,Ion]*EKu2YGoF%*$4L;?.7`mM@"6SmDCFncm+!^K>Rf6`fN^]b/%c7/lj[lgXNN#PO&.LbL>WX*hR@bSFKk%2%dZfHe4;Ea^'5i!N3;M)Qcls;sWfT%[XZ#*e!F.VX/l-Po>Jq?VcPckCNk)LE5hZoRshj_-_l^2WSPDU"Tq"q^9+Nb1QF':$!oCV/uEL^ddr+?]-h7;:9Ks$2;-YE3duP1%"cuBHot+6_/iRd?rT3SD-cC"rYmc'@k/S_d?cA$#.W:rM=Jo4W>94b(SmHE`\.Q['Wt(UU4?M30nN9PWO)E`rYGi#pe;qd5ppcnS%BKiN\%9hMbDpWZEe=3'N<[F@iO0?-<eF%R;gUj=3^"Bsa;7u>?a2:TRGS@Io@@CI[iLSM?P/.(&]6!i>lDOR5mcj`AkWBsBHp5+,%p7kOn3ki%rSG3!g?95&!7&XG>B'gVo\C''O4*O9?gKP`TrS`LuY#lWXG.P:u7]_SFG\_B+]mXi7PEIgoHeYb9DJ&XkCq7$lfWT.i%A%tASEgKMlp]\7@;_$<5M&U@kg0V**/2U^Zg8S(6GXoiICgpDXXPMhi.4NkRTC'>P]-b-S'6ikED';Xo*M-R`.^kZA4h+aI5.I8t%D3gYej:YaHdCAE`'5eFBXkbe=OC'5cn#T9-?Q<=[J4E,MGM2n>eWlds0+Sr.o=AO`\QQ8*X(usiFOp9:m745?NFV?,T)H0DFPPr8%j%CY%qH`!GR_qTAfGa/F2n$?loMANKQ&UQSa%obq[9)P&LAf5ffSN7iNlsk&K.^jrXOfqXX#8QBJ'/SnZo,F$'KJ20doJt/4-tGZ%RctWjh;oZc-?SYKqY"4BQEJ'hq!'@hIU:_q;&V2*2C`B7JR,N]g2.&[HL-&:*]2PRkJ8>Y8Cq-pH:5H:/@p%<FA/42fc;XT#+68C%MPnW><hHb8mN1btmVc.AcWam*!W,Ge8oA7Z\GaGk[:o(h/C(-CVq$+akbE(8;SRQt"`HlZ-gaAc*[RM<kBsD`cNf=!dS>:?]_q;.%f3Wp<Ha%SQ8-8bR%jrmakg-GXj6\(%BNh"15(@jds6O.(]6=F&`c'?lp%dNo])G218cF*Fo&j"_1(0hj./CGSC6Mq/F@0q\rV?!O%r[/uW?b_b@H:LK+/!r_?R&D0e3&f[k/`W@MUB6Lr:Rdf_3rQ!kJY1>*Ge)DYQ^BVlh)37?2(SFbn1P"o9<qQ(Hb?M)L0VD`]_Um*%FOeGr3BT:VIX-=N^Y1NYbm'?=:\C>cB'[4JjA+!gH#J"+eR<OL97SfFDJX?O*Lo;*b?F('QWR(%m/Gii'AFO;ETa+*`f2kUjm`'B%#D58r=PqGSq$'UdX7p9*e86&oeN:C*+^VH7]YmTAQNoV>jgjpT?gaQp@?VSrP(WLrUnmn6%^3/dg%1nLg\X]FI^VAp>5l#m53EWm%qO5(fWp!l<I'DFuch=CeLO6YkiidNClm]P]K'0U\m>AQ.q=iYPeG_'QP(%,JhP9b]GJc#l"adU;3SbFPA6c1)>]0[/@0Q8m::oZ#%cZ^PX^"Pf&2@/h35DK+rUarVpSYaM2k4[skgG1G9>JE.G\QYqJ\nD2A+Jb4??XBlF(+79IBI/rLSF?C\r="i,S[HH-K`7j&Orf$^%&MnVI9k^5Lg])]=5?mIIa2>7&;3M8%NRb+D+knqh&CT_L9&SSii1H!Sk&2j*BC5EumFe=Lkgn)RC9btMZK5P6aZoZbJp#dOhf`!:%g<&%A9,d3XK1E#$p:fV"o!PoGB5PSBchhC!:DRRJhc#R*h9-<_Nmm^lma8H2dT*KhGRgnk:.9jZZ01^#O)ApfosU%*iB2&2kX`4/%'Z+IC`Dt7`%H$V32EDh1&*:Sh>TQI!gFh@S=1`g3aEER@71AV`nWd-r/@/qZs7j3AeAb.kan6V15-Q[*?6bh$\B^VXep?7EQe?3$%9ANsXY4F&X@(3n_dbe[j69B9rY+C'H]D@Gb]o=Yj_aDoNPauqD,RqikHRKg$H&)<r$ssY6[aDX7EAa13\T`(?\,AP]mW.c<Hg`q"%rl/a6mDH8_X3=9Sq[?OXn(=.hM;=/sBl1oA]-lF4I(M,,m<6d;LiVm\#&D98HJLF3,C*b(_$qb4n\e_f*#28PT5e?`8#O?[YA:6U%g/f3#^NTKk+@A+X\[M7qa/f5"lWX*2Q#Wr+EKXDr*7g2<-<<,"4/hX-m.c<J2n[Sl%@b\H!\dmZXWcQZY2B"jN3-IKoS-F/^#A+O%2n[T'%Bjl"_trW2qK.Em4h]hPl.tDr=R6!aVq8]+kmah8HMsn8?N3Wqf5Ejd^r*\]A)m*]f,S/t9#oPug@=hp5JI,^Nj!r/j6P<X%n(#J%^Zt@^kE#)^a3<H=ppsNe^A\k-YC!\;lX&iN]$89^EFuBRdWfrY`i,$)orFTgpM+?mh>HWN=$!t]Q-QO:5J(!h!V`U,f=fnk%Fm%'&eO-V7J33&d_=n=0CDnEIYCLL`^\[R=IsgkD0AlZg43OhaqDeK6dlS((3<&UMbI:gur9WI)IeM@[?U!7NhEC[[q87,7/?cbc%_&n.)r[6r3Df>UO00f9jph[QkoO7N*HJPLkRWBj;^3fM3/beiIhYGXVJ,S<][uO3I3;IF$GO+o4hV%bY0cGIfqV]>2I_YQl]4ps1%iU2']Da1g[pQmNcHtmH[lh8$gkbHbeY5e4]dmr;Do-""dS[\%U+)[Y)J,Js2jdY_*f?QR+P^`VnKCAM_q;na1+$Ffi5MOiDcg1MA%Ie!;"rqlZ?+5ZtUnrJguhYuYiGJF1ARh+@>\\%n(UUOPoqrmaWGFm]<SJUUe5<$"?dIV:jX:P"gf_at$k7:mj5($N5c*&_>T7?BE%gMd&2#OhZWQX<?LD9+(8s7G;HL[AH`pl@q+G96eN_4Bi&TAP-EkHtC0_cP$PZWjWZhq`a&qnqh!qqDWgVJk@;p\sLK(N2M4h-5AX%o7Mh5r52#8=(hR0rYHZkp@=dAmH+*7YMD-%I(o8O^?j[hANeoKq4HR$rR8eK&,'?0eM$A2^\R>2pU?ani]h,SDg_'"a"QJTf?66_%I.P2QKC*%6^\Q_6n(au@s8LkmXnPS^a8<p3O8YR*^[8/Dm7/7jI*n7^rc2#RN,IhGh1t`jD1DL3n(k_Lf':(XIBkL^pj29!%j!o`%pU)Y=Hu%"TD-n@aZ+TdZI<bOb2rFRCkDsP:B<Qa$h7eC.HCN:Yj^2Ai/broPZMa]Pf'3,<hnN%VkgB<;B?U*h?Mig2^#cl@pul@/%rnB/UV9g=``4^,R>HbYOs7//>^YaG=UNcB<msb)kDl*9I[m'_rF;DS#O5&(\b.[WMq]ENe*rYBCHeQf4n%JVDc?I&#'CV_+\FoU\%K</EoN?3I`"8J`(^u'V01MX9h9ZoYInE=(_lDAV%.[>K6heh9Nr6]_,5'h\H\,Z!WEr!nN5:FkWnG@EZoB=s'msk=Wqt0lOT5T4"%s76fVmbb5*I/R7Gc-F(Ppsl!dF_48lVfqHpros=:fsGttpc$j0Y7D^<J,8+6Y@m0Eq8Som^\5s>Z:!.5Xk,f8f"_%"KCm^7++8*U%r:1B_m8(Io(%9M6GE5DO]`4&)2rCq3f(DJ(T\c@T!hh20pGQ<UL8(.D?'.;oTkHcc![Ma9J+qX"3ns4q'2I+B+(sAK`u<VMIXKV1%AQb=0><73+bg,PFlS:!2JSVu$54QR#;]Eb1T"4dujSn!dZSUDE(Z><uT3cIu=5r8l="bW-qgA;!f":[WXB_2c`V2F`huEWm@L&RH%hJU$Z?KT`6qrR)AaV/SfmJ[^ds*3r$FQrGSe%boH4$C9(q-kS%g!Q1l\A%q*Q6BtSFRHVd>cG3Ap29ktIcn,b':L#U4hA=TkLZ9.%pNN7cb*0C7prWO'PG93jH*3QflT;<0jmRNMn_N3qO#o91Na5tc@H0=Dnat,`op<^k6<En6Tn[R9ZO>[(?DVi@]0lABflu'*I/^X?%1Dg!K9,tKeo:OX\G$k1=,,2M.pX<DplIa?#I8h#T?8up-/,B/n'X+^d>e]mkXkN%2T0\Mupt+Pae(<J?H?-Cki3up;k?hIX\^(^I%qsm5355>!Io;gaih#)U#>/'b0`pl]7VJACTG.bA/p@U@fs$XNh4j<a!Ep`AXgCpss=s1"tB>o8XV_8jZ*\W#RIK.iee,$\'^Y]%a%pSC[[s#@^"IJ\d)Ir-0,._PcXUT4Xa`1>`'gB06J)5g9s4kou,f3o3"^VBg4e7X9X0L4h#ob<]kGeE[P1Agk808H)frVA?eU=WaZ%4*tpk)7Xq[4':.mIrXVnjlko8[i_-RqUb.n(\aNZcp#?C%eaet^2\&jd^=%OrY<KEr:F@oq8(ZaO70`m2/V;WrRBG3b$VhAmB;!9%pjBZ"j6QU)nZNJ4h20Il\7SNbna!?g^:Un4J%>\*DD"^\+(+fcS3=F[<PttU*$9[J?P8*Ch*ImI90]5e`Wllu&-);XrOR-UMqALu%[=.;pIL>93mb:5r^:Auj>QUITT-LSl]%Xu]^?P$(0A,17`77?TQ1g,ooEeE:QUi;=?nB[M2Nra1j8gK&aINFO/lH2m(M[EI77d!\%:?et!0l6Bra@uHT7Jp4*``J^rr%Si)>l<p``I!RJ%u?j[QV2'EIIaOgFDCjK6nD'M`pom^i85Z`HJ:7bimYu/b;?6u=)+c.I(e"5%EI=;"/*fUkUJo#Te">?m\C:FYQEdiLnLqf^5@1]oF\u;-=WY`kR<=of8h6gFj)Q4tIXGcK;jUPM`pq'cb=f`h4Lm.(n^U1TDZ;<e%lVaW907DY*M&Bpu8s``X(cek7AuT$O']*]LK8#Q1Z;5kDB)aH`'b)7M(LfDK54YtdI:\rNUnP2mq;7#P9aGh,;X8jH]H=I?Fbft7%lu++Cn_:0YTYUSLZL=(G^UESqH[ZpXb1gj#2N7$UDf>Z`J(9pQ)oo-(^]"L`&l(o-S%QL[r6kS>G6b%L?C^G4G37MfhqtA:fsrc#%3MEO+AM6W)#Ek%+!LkaH"eSYpR47'ugtmlpK'@LEV[n)Pl/Ib^rGD<"Md,6IMuu+.%`66Ur;,!/Y+7ZObjXBelE/[Olo]U*IK-JU%&%<Xn]6SMcbi8QBnR#Yj?S0=U<2\aTWU>.R#<.,nGe8B:GNUU40Oe<.%?(;u'WnTZUrq=\(CqVEhbHDn]"`ITn'f%RCLB6ZpuUZ3%mI0IoSLg!g4T=pJ5Bi^u/Z.DLm_H:0o2bH'[Qa+@I,&d.l_=4cfN:`VIsH?en(GC(*h7_"pEqYaYJ&b'He[6"J,6Z2oKcPlj1'8e%\qK(ifYd];qp,2tTAMfcIIUr4J+;4>n`O<;Si4BJ/&.p&s2f%%mTd5^`/K-6lBg?A8?t)Gs!Q,:So4(K.soUgSbe4*\EC$m#):j&%06dFUo>C"l(KW4rOLZ;*2#&7J60u)S]-@`19[CQ2)oR3he/cHb_1H6)KMrKR+fF><'peI*!:J]g"eJ/ls$uB^&R&L)]tFdUH?*Wt%[msNBhXqu=1N:C<fu[Rp?S=?bn$>qW00(I4A(PJ)^YRXkp@-:Kd*ql=p=,:A]E62R`BBluiqi>rM3f;f=)%]d?VV]t^\6:VhsBlR%P\'PASc.RG:H9FJDXH5kHPOQk_pLF&i4o<Nq"DC>*dkT7GNqcuLG%qs:JC$7qo<oY`U1]a\rXKDF0ImCKR)8Lj6+`@S@N\=dA&0o%^ML^pDVa/pq=PUZmI*7)C\@g!>(5:QBeOtes.KStV@-1[?;7qdI"U5RYt$mkj'1",gc`!?oSm1gDmo))q<H_lhpr8Idaa8bJ+t#=%a$2a,gV1#mi;/X%@9tSdD6H/$XO%s6$sZ!lhEFAjHUe#8HL.[srcq;'>jd/@KjK6,*L\t_kLu[ik4-u[&&6mt5r'BcI=C_>qn%>q%+$BK"#O(*_X(hUsWt))=ENX$=jT*<?na^Gpos50#N+lW?eCCT=qj4A8l%n?>fC*81p5-K'roo(8mHR])i9G_#P.Z;0m]29CHf7JA%k/n4LS6g(&?[2CHfnEVC4,ZUY&3jT0Y/FQ5pU9KS3Ht/52h/PX>LYt:I/gBU#n;LUSU9u%oo$NThd=$"q>'.$o7&n$of(sp5=4/u%^!!-9^UkJ)S$tILGHS_62AdLmpmjM8h2fA:qu9n_F#lK`4'%\0'W(TDZ+'PoL%!m4\G5F1j6'JsI(ukS@ZAXHH[38DS9F6lB7G^r%W,8qdbEp[LnC-88_Yj@WEUW.]3t!ekij"2%L7$f/IIQpm^&.HhX2P*UFC0H9mEtRX072"Tp7?+@^NT>DfC-2dea9!3*Su3eC<9_D%aQ2sQ00u:tcdP,A^\N'M?uZpJ@6(ehr2#TYs#sN@Dr86Xrg+!GIa-2H`kOSEo:jGJhMs4\#DlTR"p<uML\m,brc*Ct;g[Wn&PVce%c`Y"\lL8Nf#Fqjhg\LB/k?I)g[q>ks.0b.ci/>)-p.rCTVj@>(4C6gM]ns24,0A`4gNdou4TftTq.%'XiQ_s80>8lIF_L=dc3o#f%o"EYQ5PPh=EoG-(a)>$Dq=37s<.=acJ+mZ)\UC^V]@hIpO6+KTIJ`$hKff$8d=`qXZQ_h[5&pDfqk%9Dm!ZQqs5<1s<S9A*cgH_7%?iP3?_Z')_j&bdJlau'@If!-O%\rADl-bL-TD!.DhS6\_^U*B0-N;V,T>BYEh:k/>l`3Ibnal`A0nNsL[m8;Xa,@FAfRC:'r7EYd%?$N]`$g,foe%I39qQR5;:LBmDrH.;R(WRVkFC2WQq#$1k7a%8Mb6KE/Gd.53fSKhe^,%u\qt89ZLD5AGjlc;\f,jCN5.P\2_UiGU%:YQ*Z-U&K&jf=lQfnDhn6nB+TK^2uprd]OS34?T6r<o!K=)WNuH>N':6"hu?VRF.m^36`Ob5LMBs0ctOKA;kYp^(g@^S@iOlJ,`Z%&"7bJ?J**'?bO*ul,oLa@'=tNf5tIr'2NgYIeiE_NrS)0LGpjcm(`I",8E"QB]\=+ce-FaS)8bnEUC/?GOas6g^S11X:p=-gbEa[%IOr0h$RUAsc2O[am_7GirI]Bi3k]q<RjWPYNlkLQAc\-e">,,djn#X)=UDkBm>mo@C-0+:KmVsOf733O/%8jP4[/i(GZjt<pSIiU%=+>WniQrlrJ_A)=]F3W`T)X*)p?bN9fi5<P*h;!"AtGRK^T`.do/`T&SHR2eE'@UbhnHB0O1u!J2h-="Hq"(J\pFd/o?2R3V-A;U%DgoD.g2^F`Qd3=[qnrE`l.mSOo=l@8Is1[i!>kGQrh`e"3USh.L0nNBX?1k$'K_ZG+T5KiY-&ff:Z$g3(\^_^4PDE;r;=gErOogM%5M/4"`e/=-mcj>DDWaOIf:nWun>C/3d2CeaH>m\E)udHhp!UCQ;ep`rO%rs#@.DS4d5ADE`f@afp*Y&*?9@u/j'PWFQt9l(s.'%M%AcNV7\K=#fbCdco4n\/LD%l'T>>NUW^:jLAO#s8IkOc$E8n)-j^5iVM$blX/VZ8\XG45/1f71M`r;&&ajQ5KMp$oZ5r\#u&=2,kV%K[)!n:6&DjhV5X5a!E%>=5qobqkm5\NF2tdj5<O7I78pN(S@#2Drh6WhKl+jW^@>)g&6hA5OT*[MN$e:qot=;q^6;h07&dQ<q$!7%%0,;:p4LD(T!>b<j6+a4N]td=.SK$kNAkeAWpKTjp%"ZcoR"/on'9bV#O`bgeI<i&]m')3`BUSDm2Q.\YN#P"?QUpC[K,`#\9&fP%p@XWgZ1ZROD2MS)T0L!^q"9Vfs-rHe:42fZ[GQJGq>&=`R1j=fXtllUO0?:n*bP8&3k&I29WbplOlD,dlk)qNNRMg^jM(Fah2t9W%rqZ;Ths[1^s5rR+J%l)W%X?^M-`9b#:1hkG>M!3Kr;#O3X*Zdtgj?MSlf?0949iL@k=440IQo%*kh<W^2a=?+hg,gapo<kq=D,I-%)>j05-Ra1O\*ol:"?Y]'OjWIhf)'[?c(D.G>$;Fl(,/Pp%k`8$lf7a:^\qo.:rZa%9`ItJdcIAg9)[d2B0I<-?N((s_tPPQSt1+I%/AAapmdg@P='OjC?=*PUp,U@:5Guta?dCjMo:Rn_oAWODjhN#.^Mj!&^O0>2GIPn:kNi/\_eT?^d,"WuqlBaeqYp*"gUDWW]D(sG%YFkOq,Fe]l%pS\42kW?`4s)F?^2r;krYg8j^q%$rA,jrg?dA%GrUT3hGSh62Ts09NNko#RR]i=[,=?rnY@%;a+8gNRn\OpCHdBTd%(JEJ_.B]\Wg+LWr8uCYfc,I\B3eH/cj/5OgpUBTtI<4B5J)7p]6\@,-2<FhoiU6.fpJ/I_J!_k!CJV/4q!@.N(7q<t*l*Y_Y`F.[%n([Znf&mkX\P?mt3-P&:FR\%EoD<n'\*7#c*`sChT%i$"C\qo"57^NV]Y&LRS/<YI/NsCCpYc"dPC@M([@oF'n+3)hCB$E[YpU@]%Sh"Y,s*eo\\1G:>\:+DMijX0omAZH+AO[a0I!KFGmHcJfi9s0_e:Y*G/D,<!IK:G#o(M^X]uT"p]aq12b)P^O4F6T<l,^;\5/?tP%3>*^P$jupfriu7m]c1=0l15XgkhC$"Lnkq0[J*G16[?6W+5VEd*`hRDZhqef8ar5<h*8Mqla(5f*W^cg`l)fQ522qd@K6*H?!(jR%I1.m>J)\N3J*fCGrQ?&c*Nb<.MlP[V(`bfMrdO1XYM6O94I,g1it[(tY8t@Wr7?>ZL-$gOm&c3CO3W3$@;.9pSV(^]QaZ:dS_nU_%s0;SMSpKRNjOV,9G^]J^gOIN/m>a8T^V'@#Qp.Y?$K/e'hnT-$O+2,Dmt(H7p&:<0O71scC2OVC8Dej#[<Lr\Z(QGmp$R`RLQBbF%_-7'"frkNAqYUIkr$/T#/e*s2?ddJ_^RfeeIB]1^J_0]#4RD\&Ic#UfrH,dfa/uk8gD@&"r8lm4qWm9pg&'n,0,FKa#Ht;%YDn+I%\GHE[hht,]i5$,@[X[<5i_@1J[.W+/nnj>p?9F8RkC33R?Mj*EcM9^(HLgqLjnX+M"0FL947/']IIYud?c%+LF8GCnhXndt^M%s)%TC&4.i"I)Y%d*c.a4E%dHJH%1k=W>k2ngruPG4g%dGo8%KEm"WKIdp@T:PVsO(0[/j+'t'#*nGC*gpoqMMnn+74OeHk"Vj0YSe!X%4Pi'.qu.Vtm/6%rk2NQR9(2Xp.6Fd57QmDq%ojq`phsZrgm0FXWqr,63H'q'mBKdQ;CP;GGmjWJ-e2;?0s7R5)'YAh.@]L`G?^GB%s/8<)fXR30%@`98#92(,T1_Z+\ZHjWLMrrG>6\$_/!N6+=:?lLZS$)l@E"uNi":@+XTJ#k7=iJ\4%YWt4BAnBL-jS9d5pr)VFMlC%d+WeP4"O&:MGpV5g"AQB.DPmdV]I%:Y8o%c5CeVe%SK4PYdoL2+"#-K-"C45s,*a4bQI8<]4HTa6io'g)jr.i<I@Qb;jCbs@6gTs%>E]FqO$R84#kP;er-+[-VL<2R:B:bHe8^7P.hiPmkfoF>JOX67(.`D6rsQQ:P*1Am]B+TM&;.8g,4iU=/M*$mq#c^oOZ,"],nYg@%`UZP.((`#9J6<)B&4%K##T['88?-)(@,:tJ-,=_=bI^)*/R'hQ:YhD_m5MH6m"Uq4(;p?_,a9+4>NdlTX_=h6fKs'P<ZNeHrS)Hs%qs?Tef&ePO,O<$FA$EOX)Eu\ZD,^CX%A\;!A]l!SAZX"*r6#i`Ud]th1hMj2,_YI'CVf`1IpfCFXb8PAF[lIE04B8OrN-9NX8;SV%;:QOVH,+HP0NJam*0GF``7]lPJPO6PHG]K@5u:EfWNK?Y%Q@br_^Z.6ps*9,`hBYl8>#[pL,gg&AN+a10Q"f)ThBt+Q^tM[SJjb1%D0;M,3<"N[J_W6_N`CZer1Se>8!O03Z&GF_3OW&O:k*,^=HXb0lVJ\<!\;Bm[5p"lCM/0lY("uX:`EUV-k>.GJA$t0D,&lm0o])5%_(JaapZk[&CTcU\1Nr!+,nCsKdN[%GDcZme4fSZ)RdeGi.Yq:W1e/brg)m@K5X/I]'$Z:;kXksdla>iQ1#R+H>Hl#TiQDK?K!k)i%M]1WYn](uY=:*Pql3:Z^';hAJ>uqG`Xbc=NWkm1#=%?!6S.k@0RMc2UUg&qa>`@&tZlk)eH9X1&K"Oi2O'eacZqks\;.Glc!>Nt)%K6<!]lcoo5AH,O:VR<ohC1N(FE=3[+-"?q/FJ&Mt_fApqL`WM=\L^=,L[fVn157Fqm#P8Z9"1b(9$mVGl+4\l7,;uuL*j3UW<Q:*%>TG[W"'E['#Aae)m#Nt=Z,Wg$6q)d:C]VX^-,<!@Z!o>#K8(@`UeE)_'UIaE.pb*_!U1&BeK@uB%SRnn%+QNPI5,]NTa6g"3mH*s%lH"_MRL.1dfFO/e0RsI&W/!QGJ3[/+ELi$uWA/V$%]D=`&F$M3)_eK4bZ$KC;co(&S"WK+eC`;qC&l]9RXrWV-\jIAEkrZ9Nebq_%Sq*bA:oaYC]N_PVg2@dCg-au6hD@,p+\c?]r[ZI-2-aP803D1P&R)t/.j8\sej8tqM`%W]9r==D_1T-N0[rc6pF.n;mfQtrq-mX!%1Jqr(#g?D"(8_ggUEMkC-A)L'/uGTj3He=eTMnCpW1RNB(hYF8iWt9Zn.*9"k*lO3Z1OLe0YMA09><:@OF`Y]p)DM[kWc3!i_O=p%+IF;+T_^_^*Ej?Di<MB!CFluYruD?lV/if;`PQ]76$+2_l%4\K`MgmdK%2M,5HJ\Lb@j>\en#;Z@5*^>&t)CnD16`D/Jctq`W%H'%S]A=)BLcX,_-;QS/[0EA(A-^/TaJdf?I%U)J=@,:0X14Dkjpe'Rr(F:5Jo,6i>_W6V9PF,"iCN!R7%t?@%#(!BP7#m6,"hXi[e!d%Tl9G=$-ZMq&I78>ps>U;Y6jp4@S3=i=.>b;iW*2@b:'`jEkt(p%@2T'^qhI`769Da"/\(>?s(((>]k\,_[B?S4=Yan'!)q\'tbj%%DRJ$*=:@BYSLc6W=DoN[.)+Q4a,`ta_(\lB'rN4Z>@A""ohQ54m;`#Ul,S\-)*upSnmjXA(cuFUrS+$e7`b'tK2)K:35#\'<C522%KjagmlN.i\G6(C/:.U.@`]B:r#d>q5-fG0\njjhG\q:_3,)I1>i>,'u%i>cZ6r3h"LZ*2J%h?Tp.E2K1_[=ir5/]db/drR&]<c;c%W*dH>(-1U2]?s_,8,l`ua1cmbi-Zf?!)680<^o4c5:;C-H+ue5iQo&&[:GDtYQ8X<JrX@D(E\UKrDu'h0N;q3kcJ>oEnAOcQR2K:%V[#j'G74?7"M:&kAZdX2Ye:)72XGp,)`e(IJQs.J_)@#?E0K%FkjO)?K.2>6#oXu)(:7XN=Iti5;2FiKenN$<jsAee!g-aQY9M>c%d+#ca/+'EsmDDe'no[V9s)*9Nm7>D,eb.uO#gu!mj';f^eg.+)]iY+=p:`SL$A!a0S!8l@I>8EhV7%'`IH"$a#`V5[Z#4D^m<*0W%2VQkd@AU*VER)iq$7H,d@r!c-eb\&\BYd!Apf/D/K/<i1GE"Dl/Hn_<RY*Mc/[,tLih5sUV:Q&s%]Z_L8mA@VS;Dm&07&P]::=a^%1t4RP0^K7[&N3VWM+F#_LgRum..W??Y`uq(1MH^[YMsRq*NB""93O'/1;Xg\>9[!nkcZ1c)kF!dWR470X5f\+EPm'SVoT'3L,.C!%@!IfVK8qBu//@c:]E<fCi)W0W=WrLTOkl"W\]Ia.@52/+J+hGZSSs)Q$CdTB#47#s!X@39S-$Or&*WVXA_KD-k<'gGi3`fL0HJMD%_^`>-NQJ,Fo6',bMMgc'iRpoM-A[Ou"q34;hMupp*]JWte1oS`'"Jk)#24J?OO6kG.%(NsXZ:s5\Chf&9-n&g]6@<gOA'U&aQ@@W%R-#\tX'4dZmn[@c<,\__]e[/0)ajW][R$N7K)d=&<N,EiD)49Sl@?dV:XhLZ5=@1+43M"B,"o!0;ustB$8kT.<]\TRlB"ik>&!U]%O(fqIH"bNmQj4N#W8kOK$:G[a)H9RV68d2g?%H!:<+Ap]<2X$M4=Id?L9JB`Z;+&]JlJ?L'[g_pNV_1&cHa0WCjj5:lYNO6XH4b4%$56;$/QHNMrH47'_sQ>\L9u+bdX1:^V+KBT<3M6t-DnJ3s09TGDC?*qSHob7Ke%C9fg'K'-MI!NChuC)\9h!5A,G572l3Q,+)*D/%;:4L9*02s/06\ceJAr@cjoWbb@UFh$\lM,q4'm7O%ha::WduJ78lVMW%MiJ*Sr#58N<h?g;)\8C<3_E]"G.d/;jbhGjd*5O/KYF0%`\XtmOr,EH/#\\!FrX/kLg#RG1=iC8Q\0%@%CG,s=5[=G!0]Tsc%Zi8:2$rG5W+orUcCAjoIC7mSX':U0F6C+\QGN9a,=^k/^ZCl%=gU^]9dkcG,Y_3kk+jG"H'M/,:3_(DT?_sMOqdJ[2]YB5XUb#Ko^gbiDL/WVF6h*$QB*j^\)(A,H+?#fS"2-*Dg(j!XZ*M74Mr-1%joD^D"K3$IbL#o/&sZ"obcNh's(k3=ftk5l-3]`n+8)K4X55,&0#U%oXsgTd(+A!7SDq%D#ETXf_kZ0I-o./+JE&"RA?,O0a9I_?%=f85JZ;/m(M@@+P%;(l$!m[jf*c@4ePG^=RrsgSH[43JK>]gsaFhuQ72rF_TU(PRAI\mLYWsrhJ'/1MGq,iIMJ(Rn@Gj#QZrQ2Xq%cAs)LC-1#s17KOgXTa`:1DGpMR-"*M=(K^oZF3WpZ&6at&8EaABTgnD0lW6G']Z:D_61I.I&&KT$9GL#F,mpnCOHm+<bt8i4F5@$%ecVuPV;YL#lY$_LYq[)s_Iaa8<C4N1r6c(4#m;j6V">9habmJu/QH>a_7./=[,oID4jibeB.!t'6Js#0-`A51&k!XXM*Ze,O`<S8%d+u@;(qV_/'k;G*X((G:b_gD:@I:>FXVb+X*]g?ZZ14S<`l>Es'k;<;Q"')^<K,0YDMk\Z`cEZMjoR'PfW_n$,E4O=MQpYk1%IKe%U(u^oY*s,T2U>/N`K#eXC<g59<Qu>M>?A5HQ*0CSeQ%U%VQ1V$F6fjgL+Y3:YaKW62s@V_pO:$6M$&gm@n!W?O;3R1\O+D8H)q@A%fje=:nrX,hp/oqR]\FMV;oP'fSgsHYm'1%"ZFP(<FTfhQ+JMbT3RBo8U<99aJ$TbV:/L[e'f`P?at<4Y>4YiR-lsl[KNf8"HYT\C%a'>rtXP>Qp6r9"0$[[4S;>\RYnGr85ILW4q^C`j=)3GVJjFl@qfSM8NcL)e?hOB!WK'4;#P,^1:8=J3pVVXlkQC,VC][!d)^;c.s%c3,XRU`oAC_$V^L40:;#1q1b8D>?_TF6h'#QC#3nS_;]EFCo1Cgc?,G`s\&_c5]+#R7J#u;cPjlM$eXs5-rN[VV(E\7"KFF9H('l%UWuhHeX=_R6*8S'X%I32jllhM7Uu(*"A+Hd,TqT$'#V3(dh)9N"=/+92LqUA)G*Y[Fctlf@bA:q_^+i1,CF5p2Fj&LDH9V![CX>>%<QMh5ltXFA\]jE]Xu8Ca-B;p*7s/#tf4K2:]>j,rXMVo<m7OIkX^-_,m)X?eeK*>'c0WMl_ir]4XMVo<7DqoFiOc\'UqNjiq9@uu%;8\cd5XkIh#\5lCh?[K?5i!kg(jjM%.9.1pl_Kr>k2(6)RM@/EF/,XZaISojIHIC:QagPfpR%4]f9Kh>!39#aDIQV'*LU%ZXu*5n%e@Ck(9#F#/<@KhT1o8j72RcS#Y-1`\*NMf;H,E?*2J78PV:aR0V%ak,[o0#VbGZ+:<g=m*_;;.YN`A5"f0X<ASm$sk'0T>Y^o"#u%"$!c]C0`>QeZl-P.QpL%21"E9;q:VIiXThNs*#Z6b:efpVIrC*6tJ+\1fK]F/`NTF%C%S^0k]^bHd/nNnrX.0Q^l;<>1<%_GM(KD%@LKfDDH!gD68LWTeA!l?3eZRnO'i9f&s_aaW145-Pp`1<1ac.T4<GasVoC.ead;Y+Gotg^e1DaO@-0Qg#\@A39:A[`i<RY>"jQ_u%!aG)D4\?rQ#qh13X(`<=N<N`@3=5eK]4[K7)U.tg_,-SP*lk$%Rp^,l=3tb7kl";YToYL)46;#AG(QhCW^=$)7H'\H:,+_J$BDYD%L2;YW8&\&3K^i5ci`iIVN^Sh\k#S"Q/K\\GDT00?noArU3'1?5ip?$$>B+-P^>r.2%Nm8sZ9eAM#V&S)<847u3>Enr-,rf%G&V?<%8]0X['O>].YUWC1[5?`R`OW"kk$"GQ&CD4K0$jW0<JG/2PcCdb1-CYqr-5QK1=^kUAHU#RX:s,`=XRs%<CZpk]7s88cEGBt7B"dK%o4N@E>'5HdX`<lD'f)sW]@sJi0f/^5WsoT1M*Kbj;8(T,[@.!HY.(u,X"a'V].0l<CY*)Qqm0R@Fapi01]+N60H.7QT2h9RZ_YMn%%86;!=bh"*fie8VC=lI^RMOs/HdGQ.p)m_o6JXe((d$&L03)AiX/25tkMCFWSeWU/F!mnIbFP;oh<1pQQPj?$ljgDnoX\Mu%Ui@r%h.s*LYp2%T`g):ddlOsI>\SHHX=D60O/<a5fB-+mbnF-8Z"$cg2WqS!`o\5dXVdNDX;#0^k#REt;ATSWfWhFnd4NAN`*G+#kc21Z%@WVOu;XBe7WoadL?.HU(\TLp<>Nr/J<F+,\C:^DW1q0W&Np&6Nk\T\9#Q&lTXH8_iSLqNCS&qOL-:udoiV(I;Q'f*%*aHr=NMB^$%dHBhukA!nA60-g;F(\9H'/r%T.G!V64*-eNGRD>=*h5*2S`fC`7(h@u_rtj&/S"/F3N+X_]oq8FV7aZmD^gJ;-4T[^$!-j^>AB6r%@InXX-;9_00Z+FX54DSW#5[.t9FoZ_hR&QQch3I.J<;s&5.+.G0*sG<.<5W1&3[)lR>ISZr)k?:;_D,gfp&#T(O`A[SfXt*bY32S%p?n9Q^2Y<SNa[f'o.dNJn(nuT0nMh\L=srScJ)WsAaoV*n"uIR?Nps=j%Wnc^n4Xf0\8se-=i"0^(_KaR3FJiiR:IgXl\"M8nX?>%dI&-F;[]=OHGGbo@:Y9%d"cmsWQnekpAa>5e2p76cQ,('CE"TL%-Q>[_<Bp<=N#7&h.,\caX`<s7]FK%01*Z`lIp'N=Md=X#7nZV%9nqYZd'Cf\R0[!:QW55B\)c10j>7"t;b^"qC949Z+]t%p:S=jp-d%6Yd(D8)@leI^d:ugcOE=-b[3f="60ojR3NS;`4rXsSr0U[o%'f!o(I6)#8943**?c?l^&'(#)@s7BH\gJ-HQHed-Ttp7[M#p6RbiTgO8I3JHX*[e']Y-bK'sirq]/U[4Td81ueAJ,"3cD0A@'5\u%BPuhr1Q!LZZ],&]MCFgf'gBl2donr;&iuKneF8_e@E32qfaLrGe9HtC0!EFD>Z'+L5Q_Z71!ce>ROBI!Q)N4ZoEk4"m"NksX%bri%oBmO<B<':OqJ+C$?"#1<.=/+Y;';F!9ZMmMdKZs;p)-p[QPra)i>TXZDkfgBK?78.cYRB<%=;,(S8Htg\uF2RMVQ"a%$O\?D]<HI%ZW<l5[Pc_Z.<TZ=g8>Y7Y1a&QdBg,X54Kubn8`/:TkON!Lc%/uKAdeNeF@$m$CnXg]I$k4:69%/fm%AElN*2&iAT<W?nOMN1YdX?%dY(J9^8][s;I$1XXYOWDRas6/L!\MK^e<WR'cP-/Pqi<R*j7O`CBS=J'sdOX!/&T@'HOC/Jl.A.>st;m)oZ.CKXK9"2j>f8JpAtd%39*>"A/V>k3];%lene(#%/Uf4,X79lfJ$>e&Qg(PCeN8q3ARQJ5qmU7r6u&$r*Y+W3&KCd>f36M,%mBl/6(ct\WJi#R?mt9($fA3%S(F[abdK?`,9S<=YLjtQ4$cRZ)F5l(jqI0[laXBfBZ\SE:pn<u=ag&;.D;<1q,]cAm]\%Co5)Hd*4%>'`poO>q(!1aZLuMW`Ni8?%*$bs1(tA3fq63\8mIP&gfC>E:@B?iT2hO3ciDKVVSZOf/+`KI=DciAl_q:p_0d+E=R5>mCYn?H?:u;lH3Qh<f#"@;ZKGL&?r]:m&%S<FM)i.qb_1l']D]iWQSZS8g,V(3Hha0>%TSXL<f[9g]MPVca;GA&p5V7-e?SI;&R)W1Cp"s1"S1nD<h%:m1I*:SEUo*Rin@p^.9%7-1^8@fCS<Y5c*YW/P/d1_Nb5H[`k/ik.pA+GJ$5d)[B1!fKH-3ZtTX9[b`G^T-D"r)UVeWD*K+a_g,@p-qt[%@LE&[YC%OCtRM]%:j5qt@)JGIC]%"b0Pk>18:>-n[aJ,__aNZ"2-@W!r>fR>ibWVbV?E;!;<blRbcCkkKP=86%I7cMJK<prk)*K6Hdt-hLR7co6Ie^<%CK_"sT"NWI3&)_.o_I#:9J:+3Wa9FBdmB$:L!36;a<<A'V2!5?*(-kFXF(mFa5Kno)cer%qPhE8:uDjYMc=)%m8Vh?b,I^KlR(.^%<D=3CHAL7Is%5DB=XueIPe9a?V$`%h,!&=oJ#1@tF)*$>In30V<Ff^$7*VU)'iKacqC)`*C4-%CelDY3($>OY6&*WZFHfW7]\45W%*\b&d<rA7<oOtP0]a?V;#692-J\ZPCk14g8R&]^,eFZrkV?8UfUH)iK8OHF#'q3MW_s?eE`*/B>n&ksKQ.3/\?3dB#?;2FtA8XQ^%)HM`u@<63Fh-!a#%;X+gnO"J:YaP/)pH9h)n/<W'Ni7deoY1J[=C6GnS];bKTTic8B%D:XY0DUQCKOY&T_S!cc&+]RHduP5DN@6(%PsT4f;aAG!KVd*%KSm.\XckS-<@Kf,.A95XJBUX4a<<JjVM<?5LTS7mMuCYW'KB$-Y"Vq&46N;!"_+!C`_/6m5q^diXn/ML%Z>oo%_'X+WkZG9F_.$.16J&l#1b?YK&BEaAX97=q^fON8@m9E/%Fo0Hn>BC%YJfB](ic4A=)Y3.Wn._]i`]i?"=k^fW>o8`f`\A_84<sa%YT)5_@ff[<oOWRBnJEZYbsW5MIN_gYW\qHR@_?;^K/=7lGEk1g[0Gl%44pKIXn=EMN--I"jrF.'!!VGh,MN=U@@6d#'UWs@P?j9q%<!Gmbi#Q]WcqQK;=A6CcFJPZ4=1e4\+T/3m^?k>,DMih0Tf#lEU!jK0ihS:dJsDJDcGP5M4j;!aMKR4/!o4@q1b`BsV\,AKT_4ub%0MHds\-'a42$4en(oTX!N)>RW89J+P:7JW@a^6+M>]js4nDSW-"j@)(ld,gOU@5H"="kMZ=rn`P`&SU.+:Ib&r.J>%@-##-[q:WL%-L/9&#RafP\Z+/q=M3_>CoqEMp"I5O?#Qj+@<JZXF4$Gt8aXm58m=S)$(jIVSj!c3;aGXDNYas2KaPaGXC8HDA3KfQWk/Vsc`Fc6%<o8Hk2,SV1[F>f=@08T"Xg(Y#ar"bAm<VrN]2"i>2R'FPABcI"*,#<X`'6q?D\8teWnS3cn,)!N2uh4$hu%d&UgORH1Wt+l#S)P*%'puG,!29HG#HpgQ1+Xi(1</s#)pOnA*#O:j]Ir7.0ptk2."$%`A+XdN:!i+/4U8-LYm^g)4[FH3Y9MVhh=;]u?^\"t$t@:&mh*DF%I+4p`!r`Zf5WY#Pg0CN5'6lp\&'V;0@n<i\2A+q*P1I[U;GnL-J.%.tGq0F:SgGiPFV$I@9L%ZM$<Z+HHJ"LFP_h"'22LL\dmX.?%.Dug7boqiILjG>[#meh(8;9\"?j%\rZs9n^CPp%HJ35]Ul`#`]=8moB"6P.MXdk7_.71Iakq*%uKR/F=7.Xfk)/n#X<<Se4+G@03%T6V1TJl%174]"":ongG:c!h#HDg%?t#A)+VOXD%MApGZ#A=54*2uN^[O@dc]fYKa_"3=F'10ZqW.R;WpQX6+9LS`#=n=<`1FijoE%HJMl9aBi^GgGo-C="eQPdc4KgJ;`c!3]tpb6%K<Lc]"VVA@?kr#WTXoSE+hnVt6bTiELGC(n*^0%1l]S`lV",Ll7;k,7PQ=Qkq](%(DE,<dtFCWe<V`9$hgRi,!n%5O@1]nhZmL3r+2+*i!nb81OS'3Igk=i=44%&6=XjGLP-@;ql3.TjFuMi^b&@r6A71G-4S)d&,!k@%7P+hkK9d*8W*KP=H8:WbC*N6bh^F4>S2.@P%BE9H)h*Kaf1?:+OP/F<m"3M3,]Z;R$(ThG5_NN\E=@CrB,/]f=A^oPP3]]Q2[_UX%kR99$Zd,ZZ!ApT?W.R]q3f)B5S1J+5!gf(0RM(^gkbDgE8heC-DQ[_VYds9Rkee5#E+##_$N_aoVLRs@kk2OPU$4R38^iHc@(FIZ%LXi(N643''Uqk!shF1q$-Uga*UUX$-+'+lr5(%p)f?$V965'Y<hD(#?HHMKD!p,f\mbi]43:TTV:ot(_##H9_f626>H8%.Wh:/RS%4hA#"HPM@GWg'UaDF'rcFQ]P$\1'"fmg[VF;c"i1JQP<];n#b^KmhsKC581<6H.IZScHjocj3At_A73[aJLlGRt+m<Jh:O=qCkHA%#*L^UEF)\o7]u1j8fEZ8>fRcsm@+*$huaM8HF?,]Aeg=AL5ZC\TQ9@Oi%6r'$?4pEs+o9PRFn)?YUPH]/g-4"_iI%kNN0NY]@UT"%"CZKL5pVOo;UA\p!/dq:K[>GST30]jCd4bioBM3nY,`\4`moriH6dr]#_akmEOB90ZFmPHE?_-`r7aV4cCe1q\2fn4:O)W[3`4U(%$VKmbOi-qON?ukfc>":,,GRN#5Gu_`6:5aPnca4>=rqf>@'C6bDt.;2`M7@CFKe1CM)[bBc^o845LD_-p_E!S\Rc/1_rm$u!p(3(%Q(N6HA]ruA9^t"0Ni:e@6N"9f,-pl0P,nR"Lfu"%_V5NR[=pETHU'!+Q0e$tIgK;4>h1N-0_WWM\-*O)3u*K^BCY!t&(:OEQ[[+6%hud:@6R(0H/q!Id2KsHZJ0=cLa3Afq$(>Nj77hs[TL%oo36E7$S8h^J7bk72$_q,4f&2hjb_jVa^D156&M79!lecj00m1ag+mO2H%4,Q4D-S,Yp!.o3ZonY2#A!Gm!9l,MoNnU^Ae$,g9\>bstCI*(lcq'[WK20A<#Ie=PU_Ggt;_a!/dmU7)=!=h\RE>E>5&$St'b*a<%j5_]d<`Zt9%<\F%-1eg\,IPoVY`FP^'>jer?FQ@jVGOa5ZYrMCV)Y_A!Tm-ROB=\17g8IdB'DI=.H"c2V(sunBnh27!nPX^N5m^s%5=!$)<;[AW?oVTBVSrNR5$jtC;ZIam4!#`r+^CH1"h&5^Zt1Hf>9@']FVIrV(!l$hNhXa4%2-"pGs?]>q:(QP?YhQ6#kf'@_AtK2%qC#3p@[e6e]jG4gR=^e@@NLjKc0ub9q;UX9&F[jL("WjmQ7_0f#ufLs+g;?@Tu-+i@BdX^Yp;/n6*[D;%Hh[CB(GYQ#`RHZn>#$i%Pak]'D@,C+]h;[1[g;N`;G`]i"j0T6>AL:6pR:EMdkscjYI?FVN57\=^XOB^MK;p7>(l+TXXf;6BhbYBCXNV&Cc,gTUt9$(A.[V%%ADlFi#-%i\:r#$p5!MT%kHt;J,Vh2ZNe=$&8ep@T/Z/t-7MJ^pVm!a_^b0Iqf'"u-1_T36fG9';%&H^)nabdpWN"F4?jG.?S,@_W%C$H<kIr*JCknh@$B_.@'Q&q+!&9kt,(OT)W2eZ`cG>;A."CZ+D6O%,=NKbR?.EA4'*$;$i6tKI3.cSj29F<DI8L.6*3=d<aJTXYq%@M",;bJk%][4$jK*-=ibK+!R/B$qn%\'T#c6PSn';:#=01j\%GP[lMk_=.cpo-$))&iq\F_.d"bF_HS$cbC/F;(9I,cEaB8%:TOO%*#,?;$,4"@?5qWU'6kY6]5EW$!!\BB0WQe^0B)$E6!/Sj!mZAGB_/N=!u0'>JlN@$TSZ`:"a)(frO?%O#YfD`9gNHt]B\f`&2p3H%`5.\d$S-N''Oqd&9I;BCi&CJ-^JogfVAV<ZH/aAEmQ/WE]BkNX&arqW1hnWC98]gW@<\@S-dJqg>7=<=+N$t(56L>[Jk^?f8E.@J%7i!8Zj!B9VKJfOoAU>n$RU[g8#mi*9^Fl#"OI=c$Lh'0b^h_fc;-j4#YL&+$WOs=GaG1)>lE1O5Q8];s7*ue6hZAI[EG"=M7iVes%5%7,DTPkIIE15E<SbP"r?aGEIKt@Dke<n<L]7$%@h?u7X]GhuG2;CP6i!*)l]"(IifSLdcBI=H<PG-Ws8?/V8fRc^8KH)?i"RSB2%*XtFWnNjQ)rC:C<N"W`1QLk5P7!@Q,#"."l.WhVU6N8[\0lOudMHkE%b%63]lDB@u8sFi7.F+-dEeMB!?YOOIk1C]NdNrdo9@tJ$%%H9Ot=mLh2qM'm)C`I7k>Vp>D2b"D&]_;imj=D7I>c@`/)gOTaUh#3B#DRmG[MEgF7'`ZuV_]U>:#aMoO]4u-G\I@(bL1Tg%U]hL%-e&S:hD"**G6!8X-mu,o?EI.<7F';+K]mcf')B$Y`_).qCDXY7[YtcaG1UH*Fg2Gg)n)kjm%],(rXatJ\9&#PCA]Km!.sr)#+kAQ%M(>RG4qO*sR8gF%fL.^4[#TPWR'KL;d".:>P@&ni18SJ&-5[0a#8R,$aS;^bZ2crVd6FX^%n(dfeQF+=L@2NFm;sTC0Cd$QW%2;H%@.0rn_E5VK8QR)d$f,%;@,MC='`,TOTZ]LS7LO=Q]:QEMkQAZV'GcTf6>W^Scpr]m5GWm`*thu(^qX1V5sUu!a9+S;0%qGOcsVt0%n(K82er#u6Fbk>a<.L^H`?CO4N`Yibf:W<lM:>3h,$C0\npq?X;:@,IQ(WF;BV\A<5s<'N>N_>8#gDZV,kb/^@el1Qk++auntEe`%1P(rSVSN\B]oI07kZ_3eU)4qhQtc0X%D&8&A0]6f9#J+WmVhTc9S_4=$8d8nRl23tpgV-!hLV'0`\O%`fuS_2jNs"q*$mf&aJd,2%XK>mMm?p/UHQ<\6Y<i<%UNcdj0Uk=_(5kQE(q:@t?[hb3_96I1]i!/gBFN3+3$_HhB[,HZ*59WqDVrtc3`HE:p);R3?4:3^=R2]B%^6-j:h)1^,b]R8]Y,_O[T[2k??%9kS@)9?`#G[tC"7dHqR8FOIbaS']iC_9`)W[>iZR'p#e+.O'<$jr:KhH@G9uXgRbuFIqqCe)C%JdPjf?\rN*U$(Q/<1rEQj;3H46:<-g'Jq17R?A0p;>g?uK2aXB^-m/"12aJ$jeDjPC0V>T$m)UG1@eCj$VUQIW1]<D=3sY6.^1__%VL$ENPf8>KGs3];)\51o:L(`:Q)u.E*0:>5[nEDJ>-a"/_N)j[J_iJRr^og/@Hjti8`DL48Wcu7=\6bI%@7p%p_[eL8\kkiLG908%7->f[Oq85$(,cAtQ"Gg6<gp'@+),\3V7G=NEd+TA)crKRm*(r'B4CUiCLhUZ3In1eOeuNgesT'nMuFCR9]AWcUX&5agcCXRS&2*[%'j,T*-6()[%6AQ!M9WFj0jZm1cInQI!0Rti_gt[Ad8_ob5(OJJh01G/J>C.F9hgOgRc[X\e@d;HpgcR>)Uf5KB`ZRdR\$R:f5=Kc%.7oU@jg`/_?,.50bZgr[[G`?a;)PKJYt%go_p3#76YD-H_KLCXU0O7)1RI@k$A,9e;.:8o8XV23A5YjVU*csHSX[;d(NT\N1A*D.%*LjT5(H79hPC&]MKh7[b;IQDeklR#=K,G*W<FhsV<7ETsF);`XJK<#]L!;K">jj"1Fo.$iMiR<X#Z=;5F\jXi```\pKOuhCf)*I%%><0<H*\%IS&6'$fFb43X$.bC6&q^IZ\Ki"R;n@^apr>\PH=a"-N/XbQ4#4-K>\Wt(@<:bRQ%k(>Wa9N>BR6q'D/R$X*cO#i?L1eE%MfcMVH_hO@TPWumHEk$A8hW)=DS9`E'o:G!*NOJuh-jrSer.__C9FDc>V*8s4!qNG*C2pR.eEg[..cc)f!j(-*NQcO&_(o&,A:t#%Kq77tb;+\UqnGtA&0lTPj*_Qt>Z3i=cZhOJ5Ea&CAq9*E](i=N/Cl!8.]:rt=KH648;#u'g=cCu2(^J*8%In!>KAl0s%0K!68SFl%gj^d'2k3JbWe)OA+j*YG/+QGLXqG&6;TPprEHV!!\,)+A87(D*E<L14l^!S9&H,UV8s/F$*d1<K$8pZLbZ5lCl#^[-c@T9D5Z>Lp%0%hXl2AS]>$T.<s@MWW2e'f^q,UGSK_YA]kUk!JKF_EBKW;\/nds/5&g*mJ!OY_sZiLQnSbt/VI0ONh(JES*Pfb/X^EQ)kj[,0#k%8RRD_6ti#U;0l/,1[E:C/K\\GB"baPjlPo$D^r1p-)oNU\)&ZIMsFCl[Abn/RR@eEVe\>V82B&GY;VdpXpf&DJTIkd)Jr_WRgQ63%'-P?;3P4!M;.MI7c]!-%l(*f;Sg-d`$tg^gV\L(9Hk1[D7Afs#MJNDeOX[$)el"o\XN7pO.BMLXoEc5"2@"M-Oq("FQ'73Sib]Ea%NT`#_iF-hA?."JI,sRkd]@ub:_T;3DB[qY5@;!",TejRn[I]%+=(aHRf.&PF,ZGLEraUh<g)u1%#sjg$J_\j+$:1P2A57a?l4agU%P$'O148j!#/flHVmFq&l`iRh(W5R&S+R^&d+;I@i/h8]@]>b<?-*c1n&R0m0WN'F6%Go6=+S#t_;bW-Q\rB?tM+YOHX#sCaKJ/Q?%1=P0.hbgP7CO4'I2F.pCY-N8/TSgrb&8CAT"q_X4.b.5!_%)a]MX5Jn;HTfB_mq;:%a:se=5#h&d**DJV-VoBkek]&Wr4EVB%D^d%1YlC+g/)4P%>c(n]'<d?:h@kP%(e1LQ!q^F<e```PdE2F=B1(nDkA6B]/Enp:ig?gk#qBMV_D.Jj8dX"TrO,l2Bp\iSlnAP^:Stp%Qmen.:fU#VTU?N/F^FR'd1V';Ror%*.(U3KHY7.0Ppld:Y^($7JIr<^S6>,OJMVM*a^rptEK19j92q8sDW6mgWskB;r=6'OkRm\W%;8VLMRS(hf9%#2Uk+ZQAQW=E`9a8I8?G?Aki"UMNe1qM9C=''pT=H`%/u<c'U@=JZmmV0<+;gB@Q1a_Tb2QhW0peRZ\\dJ\q2/G&%dH7./Nm6>sm)i6E.t46Y3YPN@[pc@;cujL'1TjPH%\X2\dF2\%:6=TC'=>WMfp:e>%]p:&gY@F4'B=%m#M5j!c/lE\XL/DkWm&\q%0_(l?Muu@"pQMc8hM%ZNZa*t&EK/XR;QCmP3P4_,!(O[B2cg"*i+&VCL@-lXDg.F=PUpA%%J[L]4i-l!JU5+gF6fpd_-BK\#+rW*%JL4'ul7&W."#X/5VDX=$lPf.O7]d:aRhRi--n9uY?DN,B.WnRK(Ukt\E^^+EXrA]6En3'A'M<qa3@I]3L(Lb)&Uf8U']moC<(hIj%,-ia:C@@5?\bN?EWojeiXYY[UgDNUjUjA<5/PoS7**M62\q1B$[@"sSFnE!l;1if3MC&V6Conmpi!0k$b+T^)k;%fnM4AR2b*dc*%nNS46io:]gqH.J'El7*0AnG;:I+6j5_'R-_hCI02U!g9Y?p=*mRU)/UdqX*Ui4Q[+%[//)dbQ?kk3aXWLb6LcJYS.*3]hn=^p7s^%iPAd^_K`Z3e_Lp:^.:$::6]3\-#/]DEtPgG;lc/.-3m"<,,q+@8&r_5)Q3ll44bA_Rd5>/;_j?e3D'[HjNctK?].B"C3:DBK'a8!%iH*&R_^TEY*=hlbK-0f)L!ABj5(;[*ODV>FPRo)8NX]Kph.q0*ZRsVB.FL:<JJ+JeE\o_BS/)%I\3*jfZUEeho+'ntBPubH@lI<D%TON>FFmE4rQe@[9=PCf@<K?s)Q\7iTb%ga*Hg06\gR:(UTCcFLOuk@)GO)r7jiaZrpc@$4G5bV.hZ*2lBXq0nI%smbB5)Lm"T!d;%VU^G7Esh%"bI#(qT!,?*#/<>=T!+1+g3YfS:,9/8CRt1tA/37cl3*EbGP(ZP-l=sS(LrlhRA8K+m0);n?u"j(D"u,GF@/P>F*DkT%?/7f(UuAY2`J2X%fI)(ICd2:.CNHBF*Yu(h'jQYOA)Q*=V9YI=/5$4"VV(H]P)cH+W2qh/dD:@DB,"IX;O_F&@-SV+19/e1i@c5<%.!V"\I>?D@jE4rAd=$2BdFK6%,?PiJ9I5+5b8s<X)<1oB2R)em>Dr=/bQ)pkb,K[M/LV<C1_W#QcG9@7\lXG>'@h;l40#[uWEq[=%W9^Rn0s$=V-8'U[jDC4B,&G,`5h%70A%nHe)+CHXg3>G&j4:==GBC$JMr([HgV8=\bP>go>70YD.^7@Pg1p8`N,s.PWjUX&gq_4'%[U(f?es-;Jq5MC!)HE@%[9Nsm^M8^A9m&ksW5)#.D5pOL1<S9BF6UhPS'SA#(B!q*rJa(Q$q\>^YgbBJoFZX'i`ekR%;aCBb0*H[%'tc^OBVQnKK]h3^-'UZp]RV-<"iR%q5kg''%$&KH;?p@=MA'8r64cO?$^e^U6\pmD&nF6i2qJVR]CB\QK+=+"-DkjYPZ()*,qN'3%(u@D"#[b%R7-2/hau")T[D3A0-`Hr)K@03b_21\k!>5^5Rh6(VI0^ge2^Z[#dEa"k;''`De7.R_<H;a46c=*$fKEh[2e80W9I;ah%?5M9470qATT>TkC]nAY(198ko).09/dP"n+TA]l)6nB&m6\opccuKlL)2j>SI`VaTl)08H#rC++8UA25IV[#qN=h"?R%M:5KT;[Q%+=N\r@mPsaaU#3WZ\@rM$eC)@,Z;VM&YpuT)@HCK@Y?-i/cV'K-j6N2)Y&oLU9HK^mB%OU-:XMScS?B?(bB^r$phEA==2<`9b8Y&%Ap'KH5`l5hE%m&K#:I%#mpLSb9r,hF%RH=9*$JC^"&u*\o1pSpUqqbMO]cqX#\/N$DZttN5@OkfTEHEVWRa$.Pdm2/@;DN`\SUS'%IWC$&V0TkPiL$QH`&K*e+B@s,0"g`F*Qpbg.mTaIERPAac'7mI8mHa*?q+0i1';D>h-n@P\LE@nonE7\d^^pramoP#5e.^$[:YAb%R$X,&_;r_j(+.&/4A\_E3XJ8Y&J<0WmOVjW5cgCiYb$k&gHA$O`5sg!,M!-ZR!TQ$o[,u6UkUV'.WZR[l="-5Ur-]m)>kp1cS<l6%'W0$J,e[)^CSgqRD@n)PNaG9gkTaq)Q:pZI6q&(N%5f*m^f/2nr$A3c9bm8+3"gI@Qj>i/_o'EP"g6%j5:)HuUd$F2XHtQnQOBg/%bgRJ!lf)Qa^%&ll9auQ9P@oQ#/A(Plcp5`i:,S36+>Q4uQ\^n8jubT4iSmWh%+`sS`Iu8gqc'6u+Y#CNIk#2uInHR9G]ri`-@p`6%E5WE)'*Sfaad5#GLiHJW(bolL,Qt41`/"j_9-7*0qo3<d:K6C&:b>9$I-*2+$q;uY&4;A,&6<HM@D6?.VS\!#N4&0WYl%$48HG'i%UZtSO*T"44=A.,IAA_K"`>HB%g343qPE(gYQIZQ&>t9]'4qU3/?21>KG[ZgI_9dCW?+lWdne=DhOk-%80a=l#P[u`[o,Y:d&JX$2%"U[@VN"M5$d0L4]!R-QQ-'91.b6fC/]sNf$+Z(G@U:,3r_?AN=b%IfSCQ<N5#h/]-<$rfa,%$$Qe4K)cd/oV*G,2ld[?=!PQp+VQ%%2Cjr$+7E\g&_J;F(Z^eA`Qt%U+H7rq]&2(-UUK(Z=Xj5?]q?sJOa2eRPG\+%l$^]<'Gu%-(43%3m;OWBL0O&a:.Tu/>W[n`S+F,%=NWN97:RJbl3qU#:6%.I0chI\#Lfc;l^/)mk/d08LNt+Mgs4qUdAl5T!4BA2gY?mHF(.:D-/i>BKh\6EWR6QD2ulLimpn+6d[Bl9%+QK.5Sb8nn2d2.09_t_#_oC87>"f!Y)P5E-2@+b'0D-1AXiB,\5K&Db#K%%04/q86##"&2Je),Q9N[)8bQlEV5r(f!^-RTl3A[);%^YpiBpm#ZJ8=HHFhkH/5m\#-V<`lX7QGOp'L`u"BBe[mA%UMO1U<Do`:[pG](<pN4KF#EhKK-!P&2<L\)qGE/*3e:6WR@&/U-mk5%XNV<)]RUfC3B]JkamlNk4A82>M=13"h,;SRTE@7%0SY&irs\"\TA]ne;-VWteYXJ1"^.$'?4G;'g3MQEdC$la#!$fP>sQ0s\/iar%_d+$B#tBY;"`=$Y@-/1NQM-u%8i0b'kR%Nq8'KtX)57QYIp0??\?*f(j",&l6k8&tAD045]@\;*P[0D"k>@$p6eWEY&)bVkC5g[Y%^+HV,U4WBEAJ9tL!?3i%`"Q,qnjG//s25Ic3quY--clD\r:gXCj,5mp<3dgsm_a4=kGjI8;tL'KZmW3<pshJgIC*A?H4$.q1W0[X%<&0gZ6Xt_sHdeX,Mt2RTa;>Oq/5h+E)tB7d.Y1*k)hM9R6C&YF9Sjk%2,H:]7G4tr_4?J/#,@UOJtbd_9870SS:V"McqcJO=<g7X%dc`^54_"1e1#NBk=anG8Ds(sAJYIgUK[CA77SDC>Nq.--TY_$=TkI$[$aM<C&\qqI6t!-QHnor^bH;4&-ko'AUk+LCeFgK"p^%Oa%,lGS<16-D6K*kkjr6cpY\g%>/2e]"8.Mmlo".$4Nc^6q!1d'/RAK4:7T;'W*KE2@A@>1/0$C7sS6@1g1VRE9sEo`Yq];u$Y_.,_:%>q(HBFd>QVV8YdBcmB:9Xbn0,>I/e$EqY<2:qD+EGM48RJrs1O(mEX.p%;Q&6*gJd@FocZZnI%CZI)("Ob8>%FQgkLV?FUdZmB[V%=WBQ;OTMqr`KZKLad\nmqqfLI;ghj'E7fc^qIURT6&:D@n[)NZOf9kF3%gtVOHBOV'CWqN#un\#X^c_EH(qd.(,Q\fj>0\DLlbA%%[i?+_pM#L$OSmDCL@-p<ma6`1i?EmX6\bdj9%0T0OJf%+b1)!JOI-9`V$Oo/Sf+8+:4^PB9G1uX7^dTlZ7N*pR$l#`752%!%MCF<%.oqYL;AB<]K523q85iafq4TPL&E.8`#\I!;2tV!-6(k+](:Ii>JdZ#Z'F$ksdqWSBMYV5,Xgsl]2FQh\7n]]XW%GHaMfM^pRK:C/%-=1^\)[DuZ7cU"\&EPt\>NoRq860fQ8n?I=F^So.`lTQsWNbDEa9384A()&VquLf#f.+oZ\M9,i#HPpSJ;A]t[:Z?BoWo.P*!&JO%_2*r>Bb`KTm*H>X:#[d5T/P+9r=lS!n4$bp:a./a6\_@/Q3m8tA[NqQVDlNKV`5cKOkEG?h).NT&s_qlU9mAD3rd^A`!\@>l%"[[%,6TL>Lm7d[^,FNL$LX?NjZQ+EMe&nX.+c"%m"Q:'[@'\dW=9K0i]XqY]a.bt9\GRSc3:G=3/L9cX@5,Laj_r,F@!BUd3,>mR0f#;%JX''QqC/jBTcEO:XM/XpF(,^l$4X'!LfgBE:cPNYRTfu7n-GN="^Ck'5D9uW9Zfc+jc[-tOY!Vk;k_8i(r?l*6a.P).7$"V_giMj%Tt+Y$&[Pj,\ee9Wn3FA_ST(\FN*j!.(CgEmT)H"^q#K+;A5UuIF9Or)\eH<,I[r_;-*4!4lL[rE0b3+9(nI*\%eR8/l5;,XFl4X%%G7ha31!+8gU$ad:X:?*OD@"HH<JRZ]*NQCL_:%C=SK6]((&P'D?Fs'S30YAG@Z?2cJhq6,P*G`D+kARXZ+_q0)_1DW#nitG3Z#am%XHGOtk66f5C_nSP5sP'72IWVVbn(,LV_.Fmkd6(gLP`^X`O[Jf@\+,ff&kF[+Y3=Y]@GHg6W"6n85Qu's7Coi+F.6;jK6a$:p?q=%%:_Q^O%+SdAG<K@d'$>/gURGf[:)Q0pl.3rN`]OA+!e6M4"("0HCU*nO[.jQVKaXjRn19/JL>fG4l$nNLj6/E7lF(.'8G4>NS,(j%]?p;fH<mH`NV*?M?6t7ih8o+.q&lb$W>5J41<JKW@b$L1R'f<V*t.,ffnREo$AZp)/NtJ>Fk$O;0q#hfT*R1u]%ZCJ:X!?(_CcR^%\;:]$%Xl,PThfOkOW8#&Tdk;Y^Q\SqW>uuNkW]i\P]Ir"iWoZ-05$[/etYO>U[Z^^,\MS1rDX!54@u`he)Lp'ef3a3W'U>-Bpe5=%kM]*i7p$dp!gW-7@J)73#p!mT(ai^5'q?MsZIts^<J[h\LJ3.HEe^Kb7cI5kZ`So6Z!6RQ)fq3J-DTKuOn`LeZ.;a]YShlP-,AY>%7TD-li^f.6o-H@B-3q"<8YC@g?uh15(\n\2h%Z7c6/lDYe$l9J<pDZC)0nBnbA@Spk3D$&O35l5*Y+b%='U916@/<8J/qBQ>`loK%4orHr$\t'&\50XlkW@4F#dJ(G:r)+=S10h_YXE6cnq[-KN1T(WA?lBD/+pi]WCl`5.:U9&4G=P;-?7(p:WYWu8L\eD.4,Ls+asF@%TR$r3(14kW7?0B2j-S*uQ@%5IOSNiq-@pM7EqG$+^]B[MO,_N6<PM3IC__,jWI]H,,:>o&^=e]$Zj8^Y?5"-#FbS&MH1l<R3ql,i%]4<[?:t\edOpJW7)Z\&,il.>lq;J>5e!_G_KdrC*o$NMu'$"Dqr$e8A"=\B&L>`)-l*X)6Os&UfloT3r"3#JKBRLNfQ_XI:M;N)A%./FWZ46rc7P2j@k<T'_VccM"KS)c9=e4V7SRX/[$>IcQJfWsgrKbi-,^VF"RZh8/*;P>t)651e[Ysqu/$D$Re)uWG3X02p7I\+f.%ED1?2jN;=l^nEE)?:e5l]/\LF&+p>6rRkG#Y>3AC:R-?KppX5kFu6ZB\WXo<9h'">JBdHuio:K\*FP%`Q(%Rp&I\_DcLHXJgkGjQ%HV/Rn1ug9(V\(//+ok:DH3=LR',+/`gi2ig.C\u:'$10ue4UM/$fAl'mgeaS9<b[9P_/_c/1Y6k]7/#1;Xl08$XThEV8Ti,8u\Kg%&uRUn3gW::NYUY(JrL0,jBR_.IF<SpNp^F>i;>87;4N@5E/F7(0W*(j\jNd*l(:Qn(u(C@DU8#+'+s<X"S>mM>XRjOCj=:6.6"G_%`kSp<Ninp\8H7B8RpWA2lu9nSKV%,LM)$OtZAon8,"WnhofBo_O09t.!$;1?BAIt;SjP--KqPbmG<gaM)#peg6\f5pr\KClNj^71%:dhpbY-61q]<-9nBFYTJgElpZ2U-"Y0+&D:Sa[nT9X#r<";0X\NCDr"RPRUYAc+!W$P&X.^E"@hg/(T(n:hOIN;L2,l0*i?%Kg>(%B`_m#>)<f8*M.VNn-VLjnAts%&*M\2#c8f$5a7Xt+:dHX/6OW&0hr3Ba]IPqK(UGFbZO$Jl*Z(<(NVaJpT43n-DXR&#r?T5kNE,=%7>'D7rZtR<5Y+Y8&ZXEIBiCD/TPNccDt2VLEmZ#eZBZq%,S7:RSbEFd?N7@:VNW5+-QhUsB(S4=SeX#,#dg/^"V?m:L@sb"bXPr1%jH]^W@ne=@"FA6L)Hu'j0=%B9$,ju5eXi:l4tu)kjo;CiocFcJ%>[t:-fW[\)ZDC3W9Q-,3mZ3qJM#E_GJV?d"DK4<266q8'71d9%%$)8dO#Qb2Zd/2(,'Pf,-j)8Zm`'f;(b_?sq(rfZ9YQo;hF]?KnLYOcK27N:OB<*<CJg5IC*"W,Ku2,NgFEq1RKmYf.8/H[%d0sn%=.:t1+&&uajDGML<`0LZZr:.e]$_X5jBO$)&oH2,`YJS84Cb-+s5VKH0C@jdl[50'(iY=E_,g5^JQjVt6C;K7Ge-dCk%VNTc_pP[%h9ei*PI>9;W*&a!!Mht'"gRi1&g8L/cBgkeo-p8!8'E&P4L!5A4W4F8\BF@_J=!4e+2_P?p&64D:S!>)fP3-^%I9Ri%otcSCUW1"%"Z0_'P:]h<K(3-'eLP/$EK;_Hr+Fi>.(3\HDMKC%a?_$&ZKht!/4#XH6o:OW_?,aO34BMG@Rlo*9+a]`Ukk8VG@6A7ik_f2mlP,S%499KMq48X80(XW#/:[Jla#5n<_:LXUjb]RikNK[MO,1`mg&peLA25t!?Z!Ig2208DBB&4m;(ei(Ol]6LbZHN=_Klp.@&g[e`s\.g%g&Mmq9mgK4c+-<$p`^AgW%:_IDRusiZ0'etJ.jP`6jZJM)Gb):FdkS?1[JGM3N&=,IBZ<(&*mmkjJk^cKbboQX&HXM5mK7ta&KBB%#DOcN_Ye'&I>9%.p>pr@A@5*cO3g$jiF4U\)8:DoS<]!;FJFBTG8*5RTqk$mWUdiL,Q9Q+Slg%?A>YKk:GtTqp,b8#JE<\;(8*g`%&cXP9T*'QCQQ<07M>m8Jn*p.T9k;R<O2.ar%oOsTlAd]W[tAWK/-[e<8`;uPgk<Lg,mgVQ"M,mc1iu94\dI>nm,,5?@rJJ:dVHPQ%a'm-3]?F^j/@^pE(Epo\S5)\1%Q>*DrO^@,es_>lf>E/>N\?t(.J+;%dHeVDoDinj!J>XG5]f91C$eH5OOjd73t-Vho+Ph46^?jF%Wi8s*AUa*B9i39,9k>\TIjY?aX`^R<V.+t2g1$WN^"R^cEE[a8'^<mFFbWs7ZH/ouT+l+Xf.eLeSq:ZZZ=Fke"OG>p)l:`)\MgA>%_L%TI^JpO$*R^3=#s;1+_=r(4drtUC?,iaL(dQ*_jj"3U;A<fTbcYic%Vr)i\0+J$q"BRg\1s5TN(pCSn8;Ljf*HVq_fh3`JBUP(%*abVOdNPUm"'TT8([l3LDYV0Nidm*u2EH0?6grSQ^-XmN0tj>DTsjNU6P&s0LsB;Q`1aiG"Na)2W<t36n?SkdlNAPV(Khr0,,5N3%)kn)JN+8;1BH/.J/fbEWJHQcON:&Ge6/3q'65uNhGiB$9q/8Koi@cSs0UDkd0Tdn)4qJkc7=7%e+?=:"gsBHfj5@lhM"TO8Z&T5=%]]eG@ijIaWeH?W1G=,DsP?r"+<JpRJ+F/nr=O7)jA,l<ZW[+17.<08>)^784EXB?E/2JHu;*t/_9+9V[=otYK6.dZ0/8Wm8BMsJU%oUYsm0CmQ1=b8n3Zc5UgC_VgVVG]9_iN"!_fjG5CDZ"Oj)rCgq=9^1XccA>Q+K,n@]dVP@@^9Lkd#po9Jj5=Xk;=[i*R]pa?RSV'%^VbJXCf4rk;4)c^9&^)2$:JCZo!7U)ljO&i(ub/M5R2:BAlEcI^*+5%j?$kh)Fm$CbDt":3`V!*C9fQ:a[4j;U-^El,!>h9/n1D4%VBP2H=<F*HY,iAheo)RF?f^u[BaRK=]iQ(n!?JJ85o2?a;dBa;]5Boo)]O#[<&,fl3u)(=[0Wg`e-H:h9]jS:Gt:ut3NhUNQNucb%F')Y3hP7%V0dq-PK^\uC/8[HQjbe*HBTTC"nSHc/%):cNPi-C50p4T:'-E@;ED:]$_"!U')1R>Ml2#iP&$TM*Ro?%UX8b*.E$Fp^%N#=009SI5+-.)5ng&_]>ag8l#?nBpHeW>`>R.e\%_<;#^Ag^JU]>1E_U]"ul6%tFQWfim^.(C0tTBnW<MX7JZ'U0e&eaK-RF%6q<%-mdgkLf!#HhoJ5*KM!N="_@e6OD2(iS2:o?%96*pKZM6.Z%fgu.Bq!W!p'DbG9Lmh2(A=9amtXe:9p!l*]5X(Vib#d99@&B>llVa%UdK;'>>#J0FU&cTja(Bn&D0G='#AEfpL/28M,4GB#^*@+[!0pMhFUSndjT+?fSA#>\dr/@h)06$oakD>5Vo#bO9\J3j>`femJtkt%WZX;2o\pr9KAC2H,i#Xg=!5L[$p,uI2*@TK&#&\HOK:O<^O_:DPS67;k4pQVEd.iC</`K,Ih;5r&T*Yj+Sfpr<(h[\ne+>VILGM@%-%.KO^7hK0_g)tIZM#cpi1F"gnBWdY(;H3OL`1-.1a=`d<KKj#/qI^*/_81Pg5_Wd'C`@/m7%il7h:@of]b_Y1ti40GlLDI.T!+E%i.jT%/<Gd.R<9=&$WLe;";7VrmX7!TN>b#ir)rtXECLi%7>HO10p2YRU)-Iq%'Fg%=O9VOBQkKsOL\X#2@>KL&/SpgK<dn,:31*p%#`0Zt!5me`!GhdIM^&bGI8^:]g[TNQ5=3kl(>)G13eUfj@Jm:*[uV?`m5.X:+kbb?f)Aqo&I']K6J)9HVh`1*1[bHM9s+^9aVkhU%X#6kIWE,oD\QPj/]4U_XOp=NKmT>bX$B"r'qgGn$a1'6)UpPk[+El@.agq``82KRT*<KrJ[W*7bAi.mKck4Dp#:U51.OMX(>GFi:%BiFaUOH+oL:e*hJO#qgkJfbEf<hq,T4l^?:F_bi%2%7nU*=!Il;?J(8+@eaHO_8/!C69'"3c!P*qj>aQ,sOZi&obsI`j.L2)GTFW%cq]Z'Ma628ED(k5)@6`F/f>aFl:;24`d/@*+bUp5Zqs<l84PuJ?=3H0`l9tN66Nt$;tFkYJ/t=_QDDC'40#-oEYa]W#9aAZl0()t%)n_2`&;X+WebTHJ`$$rMk]HmkrrJp,]3#,CKN87C&>HeE4V/6@)R8+@X(q$6aN4P-\/A=Dm:WA=8hgDna4%q<)!&g-@L8jCZ)W^)%$/u[K'cK!J$4`P6s)Hf>H5@JD;MNH#&j:&cI;l<Hc@SMXKm))<O#OsSCC4,MYqjeX#c_Fq,7Bj]!*REl6<`,`)@2KWa&KBgeHii#%<X>:rnm_!RA]\4k$m/eaYRh@Lh<48J4/Fu'aEbGAKi";l@`?A*<;$dGCqe2Zl2_GB7)74/0EYlBCX=5aSP$r'msmnJ>Rtoi9'je0%8KKitRN:JU*11&rZ392)kd`L`C<9/)j,9L&05&g&OKp_T]ors^H7VRZ+lG^qUIg%3#)X4j![l[q&nNW?!mr01TDJs)Mn4MXU.-0_%;cj)A/fV"'q<7+hhmW=f%GQ:-Y%qXnTOD+G+R+$qlEgZT1&/`H19hEZXZ(guqg=*@f.DMqiE&VeOAd%6YF)hQYCuOf#CL\1]cMBO%L2j]k'^8)Y5Uf6M*QCfF"fA,9F%R5)c@Vt-b=@"J:.s!o7<Zi8P&`]6aX%5V6qq0MM?%G2+1IXH9eV+EVhUoj0j0HX23c/WauP*u%&B1Oh#:b5&+khI$%F&At>gF?mP(#,eRePOO70k!<l2s^"I[PR)%;*i4:s?/'ip#)plk2]FM$Hp4^]2`U-I.[Q;+bi^Y`p]ZqD7"f%4bnk@6B63K07a;GnPqA+=0klU*G`"Da9aggV3bj,#MnT)B#B]C9_ZCR\GauO772`EVF?JNns#N)\s_K>1>+BQ)&s4i7`Z]3JXV18%q#!e$4=8>D;*m4H`+@<:e%c0fQ%E^"-9FP^?O#r$>@p$gk-8`?(7HS1aEEN&bRuY)paAsJ@12F;G)0X1M3gO4jfif@X-\=kXFKR\%KJYq-f'eQmUZ=5#h!F9Pb!LoSTM-ipr^X8\2&KGLF\iOmA#+,Ob+'H"G7A%MD*?Z.e)o7$FK=?A7N?=lm/=E&''Pp5b4Wb:]&9!V%UPp<#@IV!S:3,`TjW,I"op^M[CkVJ(jS:hb+\Qr2nIkF=Dn7rg8ZM71.`/rbFAMikbWf9P<:\6,!MYD!iPl/o\IV^ZP,I4O?UUS_%CUt0O-cMY!nR98h"I;:4MdhijAcO5j;Z3/^Q_@)u$]QI@A;CL_i0%i/g0!68<ToO&q/T6"$8)Secb^/VG'r`">njT[-mb.+<R5<_%&?k23a-kD^Ts;r<+*6R[<?jo@38%93TF?"K">WVd9+9S-#)%YU$)t0GT759`!&=qbAcV4>V4ffF)O.dV>f9`;#\KOqIS#\N1L)!8%_or*4;(@JM..c/AP?s0.lg,bUQHpQD>0mh_)>U7^RI_j\Q9]o?4?sUN,W"%A8Y0*>D$7<Q/sUqs1DnNL3(%UZeO%9[X#15niLJo'%6'b8pT@8:J\*9nLdChkM]fCol@Ue+[;?h.d*9/T>=uf-f<XiK-RM0G=C)1h^?ia)]-I+u3=#Z2+5RQ<ljJU.u@.>R]MCnG65dL*I%[DR3/SP`R[_@f8M$D.GP*4f?*Jb229]7:p'MDcc!7"S(5(UOXDVVu$5=4IjnpfOJ@3[EMA32BB3Bi,`3lk#p4Z$o-g+oRY2Rd'8p%7sn<Gd[IAKR.]a\2_%f:it2MHPcCi;92d6;]>T`ujT^O4?1;U/TWi=="NlBX8^,iM_:>%NHG4nbcE5p;"%t#;1<c)>g3e#ST?TEo%7"`m^*J.*G<F_AP]83mp'kVJ4V<0oS%e+jCbk`=B77M>*k91%tCegrjbSNQ-?bnb7oUVdL6jU!0P!D^7$CI0R`@Y64KkG]T-#]0G%KemZ4F]/!saTtbXP218=9K>:nd_QOs*cFF:$LAn4l^QUgej)k(8hiY=Q'-J7fD3@SH%f@7YUqtb=7njp9LI=oiLi+r9:;(+Y3.R]%^/"h[#\E8c';i762t@=HI".W`^4MYL!4,Kp2Z<<A,jZAaRS"R/`/-:q2.A7H8^4Y5&F9"hm+$<&92M`j89u;c(d*T_IVF_F4`"Rp%9f8:e?Q!Lt&DkI=f?&(KWr;*?G/K.IqP6-#Cbea<Q3&I\`b!u%'Sdccp3Nla&L908U&uM.">`jnC>u<Y-4SATq54rA8RAJ3D_:jG%>I_G0a"]gmAU3Qf0+o)?7d60R#WgI@<H(7p47V'rro5?RPg@=6--4,(n5JJi`/=Z7L]:h-f+,_gdtB+g[?E`*Ecl'_a.36bGD6S5%+hOeFCL3Or]<Sa;9[L"Qo\fRAf7L+LF`sqeH/aq@O]%ed@t=b3eKB^;2$3<cV#d;PPp2A#Pkf'r@G#LefGrjF/&H?Ub-6I*XUP)F%qm9*2B,[F48I$7`]iZh:oP@9FOX.>o,,IUWZ)k\:B:YZs0b%!XUT@\FX?+Yl>#<VJ60Y7\bYCj\R%!071%f`j(fb>lC.*9mE0tnb%YdL,pbM!t8T#D*WVI\mr/7Hh,[9_c*F[&VoKnetmJ(L<uF'BQFl`UZ=>SUl'/4WMpb6k7DYZ3V!+Nf-qCmGcmR?hH14d]F8[fPP>%,(8`<0l?2+1ebU^:8V""efj=$R!O/8kP/eL!^.n5:n&bOPu;"uc&ttlk;;Ok3'f:_c*C,JgFW$I[`u+0_e.SOgc!@,6es7M)/Z_H%e@&)UO/YK%p0k;oamrL9>75k#^bCFsOcuOdd.tU<.:(Vm-Zat^-9=Z`OS!IS)nl]CpSTsI&F*36>a*]g1$sXF%HGAJ)JS>hF;Tm9%m?pm;ndumlf<_Od7%$"k2!FW?Z7`S^Ao3kV[l$`[gOid`-t1Q.G(\im*ErWT2JnJf&p1(MTn82F'=QK]$'O(O0R\?2I*'8E_/kB0%_`aNc_Uj_OGZ7@g;\9df\TOo:X03`:g0nA&crophYl.h,l]_GScgX"gmtPnFV_kar=hr'a.6<cMmi#h%?'?uF,XWSb5a\iZa/NtA%1e!3XPd.U>OTmZV4.%;`AtniZSfpj4fU4,n>A]DhYkQJ4!qdCMnS*O'E#Mj#>HFTf__>rhl_-.3&#Fnq-oc4q30ZTaC+T.7eVn!P%>,[LY6Y\.]e72W)HJ(:MR(J5d!JVU]PR6pO>":i23)R/g[;If&!`PZ.L0;))dj#7qZ7,>5.,TG?AA8hPB8ib)#:@<=io^(L4\C@1%P*-h6PNiA[_+dk:!JT3)iueDk/o]D4)_(qj8E$c[=+E^f?p4U//95o):MEqkY\]<SZDI\EodphC'(LdRkk0.o@'MR2iXurgZ_J`<%L;P^@_YH1pNhIm0NjD]@IqlNaM#L-VO_AFfN#1?ZCPWhu.J;d<rF1FN1Q>4ug8oIZb3ggH^e?hWkPfb@.0"_Qm;Z#uX?/G-,oMAh%WY[2m%RsDld3@1BRHO0q&Sg=+_2PpKa2VX=kWT=,?+5j6X[HDbLD>PQP-%.#mT!(4;C]$8o+G"uH3]P'r%+/LM;G;60"Ao^VM#OA%_=6$"N%IjT1":Z/LUPbDc"i-V&8g2f,'^?qb.r<6CA=&*JTfZ8Y%_D"rIhn[&TUuFCb]C@M2hE@lfHM7V+W1gJI@028/r%%^=1tr%GYm8%Pa3HWF:]Zh+_-kU&t!Egm^&lF1'dD-.CmLn3m$d$2D3+X3?ZhL5'(deE"U.`[iSK_CJZGQHuiCgijfKE822_ZCR2\ED;-L?%8>E\'=Hpdk5u1Fm768;\GH42+VjGRX("lk-&\T=acqp]]VWInqHV5A4^06><(p?3bGh%")[:LS(5cE";]Qe_ANVa?SG:F6n2c1,N%"`?u]Jmhf\ajq[F.;NHC#8lc<f\-I#;9i'EVJQV_\I$WDZ1,H&>X:g5g/)N#.PE`8V")KM.n'j>`;):2,r"k37r""s/Dqp)4,]9q%M7;0SZc>0s+YBl=fJ\p49NHhPYtL2IVf<HYj<cLF0\W\.gJX_5GnX$K7huB^S\e>6Dbq3aM$NQb4_CC2N*&gp+UD:qRBmk?`r8Ji%M64OW90_4Ccf,j`/lnblo$),1p'TIS88XJF(OB+4A!1]96RK6K$AR__WI!0*Q"\NcEm5*Z-%`Ti65Uh#BUnFD9C&X*"HaSIrtJus%e0*k+$8lBR0<'cRd?'&e>.d0a+7/>o9XI"H:[#Q1b.r%_qZ1C@CVpQ"2Va\-<CToe*QWN2#%K5'=@#*QM(]W[aDe8@h/uCo2Ueqj%0]hN9a.[1q*bjZ4JqN_p6+ps,<-D2:lH31\,gs7]]S%8q2Ld2uW6LqA0!lSFIp@+8eQh`T6rnI3Ut981n$T,QWb-oc85rukVg=dX%/YFqPigAZ1kq$o3N`n$f$^s1/9N]Mp6u1dQ0\.4bBi*iWS1pb?[k5h#aJYT#'fnW<b<eFc[SC.<G1.EQD]:\bQ&;C1/(%+^kgWL!%X/bQGj.SNZ(pBjk8S/G9;%CXP,SH^:<G@<ZF]1huB4$abWj,<cRJZK/+J,ET.U%8YRr%*i,d=U6\.U]=%]72X8:D-7/44@D&?;4t%\/1Op.<0Opeb-:-G\uLSbg@'eMe=onTkYfq[L,/tB\:](GJ_qfR"hQgJc1<QqCEN\lTt@B1+:tcpi%UX`K<%*/`,9tCVc1jRYDa.%*=V/KRk^kI*YcA<)4Y/E%s`3nrmXO9hB!?2OMj<8*S0+><(+4HTdF.f<:oiD?OP#D[HKHXRL7rE)"_nR#<c?Y2;8Du0Xr+t;Vei/%MZuGHY+f)eLi0)s:'DNBZs\NLDSN91$\9__I7"nb'q5P#ku:<(6qp0QB[G.q*DK%bT]kU=n3-&&8,p?j^$Dh4acRY<"T8i'`rHA6%S6:-`P^]lt!COkm%EqrDpt($GdXs8rL&se9f%W:H*jPF=WmemI/Mp9,Lp$ShmCYnX7RY8XR$?7HNFc"BP^ka%b1N@Z*fl+cU/&b)%&$A.\R.LFRreX,ei.8SIkKsP2BeRf-jf?1l&!.W/N]\5r,KSR=N>"/4O9KYa"s%SW>_>X4)3[O#f#XXuqLM3[6]S]4g&j[?lSq1V%q\V<7\++G>Mf<39dK^HmXN<84J1-'A`F6?bW>l)ij/$Ef&^^'`6`NKX#kPA-S&tc>TZ@p1J=+a3G6*jP^S]+L(^a:Y!J=OoI]TCY%lbZ"KP[IRT5sJ*e:X6Oj9-?T1kk/]hU0U1lkRB$IkNm[dXQ@1/@:_h$5j7i%JV%=LIjYp=aU_E56.fnIoKq7$+"%Wm7Ge:$U!j97%@42snloUb>Tua9b@%Ub$JA'#O'?XB1*No]n]P;&_EN#;AO&sR7r]=_"3aRU*GSSCufJ]09%]HkV_RZm7V,"G!#kWF/,OkiRk9CDo%hg7Tke4;AP&>oqd5_p'O!_]X4NNf+JM?nZ1>T#d[>2qY/8r'sIaWCKt//;mYDQ"EIV]OYI"(cO]UCY$m!*"2mBJTWK34G8-9nTg1%F,0nF#"GsfOM[%^F.L/uhC9,::mW:5[o("L]87(kX+-#E5_oqC$6Tae6%7;uILPX;M33@DV*tu:E?J(;HVPG3MF!H>1MKQ1DubE7%kG0"uln^t1rp@m)*X&fJ>1+IEPK;*p0kg_t,^l!>+;u:VJFH]JM[>Eg:Bkg:oLf3HZ,=TgKGP^uo&/"?Qqdh91@ll-*Q$H0,q<gd%CC,'N'X\6LBuJ]E^rU47#:L9K4G=?-_0:`,8soL>f+TYoqF;*%pKUg=a%-l66g$s_K.ro+NEO'QSXTKcUDtND5h@:1-qZ4HpEm9k%r3TpQ<'8!.aA"t^]CGB7G)8Y/RcaneMH%3??E]`Q2^<28S%HP;Bk0]--WL>tfc==7(ufKL9YWtH,un)bI'CO,DK/]`%n^TL&f=f(%:d(2)W2*CCl;0u@!BX:FJ"4<B.bUXPSJW@Y$jsnVSqF":!`<C?/IN`p;8hH^JZSo!IT8klT;O=3]FWL<O,8G!)ElRF+#g2/kdtMs%Q(hus+@qKm'K9]+j[SKCEcV&f-1DHuPnt`h;'.0iWNS)"P&?1GQIN%t(Jr>nVjksQ?E:Fu*1Q9e<!*G`DkfY&=7l6'Z.mtDBB9+6%kUdcR_Rpp<QjGU:ie*QPTL@?&]JP;p6"i-WYp?fHouRcI#!Q'*aK(HeSk=/@ap(3'E`m@8YgCIXT2$Ltm7:1V5\sk\kR>%fZ5l&3%VbFW),"H^I9o_NS"I[GR"\@_s"2T_`>$.dKO*T;,6ZUGTl9N)2f8)ZBbIUMi%YoQK5A%RV1O8te3fC>]LtX"9#<L6c:)=*G_s(;?%0"dd^#<<&2om;OO>%emFWD?@Q+Wud0T=L$heVh,l-<OtCKVL>opXMTs@.a.NdtX!&jWoe9a7*L4P;6WUnV>+BKu-C,-$ioT$pmQ[%V['@A5aB#4nc>UIqJ(lB:9$7'=:r]Vh?50DN'h8A6)1f5U+7Y=38tN4\?LskhLqhG+2,N7\<c]\.[b\T_4mit/>sKV";Pu;<=B8i%=q"0T1)0!XU3lQZ_5ONn8N0"l..8&18HHb36;q7lg)RAE!YWR)0]>);K8m,*_BIR0-Pctc8P48e<N,f1@Wc;d'@n?*F<ZZ9iVEJD%[*=1K-uo(6@"`nHFFOkL9:]B\&Nl:0d46Yr/NTb=#=n8B!GFp6%?-;.H[-jT))O5YP2])1MVcYZ@W'ggBFc`Ui'drK3m%c^c)&l[%=I+H,5g$7-DkmA1Q6Uf&"_]cMVPGS;9GTJi7o!YfU5%'.p.23FIjJ+A5EiZ#b<%.qn]>*/E?(KM>[L&'6plhpJ)[OP+)$=HpAUHo%<Z"KkqIe4Vatp#Kre*PuS5BC<[#4YMnToX2V14ps4HndH_gJ!N9M-\t+J2GU-<8,MP:G^e8_n;f[Drcs4<YPln&uk-QX#;Nff9G.%/uD0b-4QV1P:GeZ<OlpnJ?Ursld_`"KW]$OFd$im]EN7oTtSR5RQ-<>1<^j]23.B(r/*?hL.+G/*sf;3,W[$R@DY'IHrOIC>*aoV%49Y%O8[Ig!@iIA6L/Qe@-Wa"37eYsNM)6tX<+>.8#D*r(%7-*>fae['WUe8:"&l=Sp7`6.Q?FB!I`0A189LPu,[<q]nr/.BD-HiW%6TdPi2##m!0]+"e&L$M+IOa9?](?I7'*Xg;18h"cYYEUe2RFc'r^m5,@6n[tZ;R*&<]TuJ`nFo\6B)%!QkII,)+-dok]#Or"4'^c%Mi;Sd;aM"j;u!3#I),6]_?/(e8eR;Fjbtpj?K5nHW,Og(/-t=qlThpl*ooI'0,.B$>62<4)lG:JoEY@W4"@gQ*l:ZZYKiOL)Q&c"%Cm;Ku%Da9SiBXu%4%H7?Zjd)f8?-%tWNI`+TiA?=+AB!q7<hdfcPo#d#Y;=QL;XN:%F:XD@#,pp`;"chQSAhDcM]l>9OYMn'8Y&&%fL8OJGD]B>;(,Qe5Dk0YB[GsA9Hg$1M9X:TX*TWEG9*YDLhX9+n/8%SjHrrIiT:`RO%R/s/<f^`*"A0!N9m)H9f;U'7N`W9/E?Za%^,j:@P$miSETm&D\tms#HY>r?LSt2I0Z(e9DIokG\5iSa_[,)4<3ifK)M2,R9aN]mj;XOO]0CQr)&+H>#5QkCGBOZM'p+B9;R(eW%[)b&10g-0#-UY(=kK+f(MciHS?&^ca#]U_2f0ap=$s6>\0K0=n"^E`>E&*&3b8=V%D1?VG)C0heQNIPIh*XkrB_PSip5*.&mDhiU%cpa^H@R#>Z80MIhS/*T$$"h^_2QKuV:,5N0Lo1pi<j^H_#Xaoq_'MHUN<^7nLFCFKe--b]7uZoa*-+.%k2DY@#ifUB=K9jZ___R_%IQTEg!1;4S+1I!F9d!WRg#m>4""tBa<+%rY<:>INa=,s`KT^B<qaeN9iK[(B;cA?;E:fS>LmJtooE&ecVMG4D4%Xdd>Cd&.8TS"P%38@B@+d9ksVQ*3rP9/F:;dms^+A_'<!k6h.G@%F4/Ba+hjaKqSdFGt;UX@3"1.'XZld\j2Bmi>'qHRpOh?)=YD[-T0q.T"!4M&R(%&jbrGaq$:U:5a_4a!I7[c,JQ@1M;S,0I.,[h._*d$H?XNWtuo!bmhTC#`KMD%[Q\pOR_%mQl&Z&U%[-h!tH\/Q>Rn9C`nYL]?H5j%+;8M]`;4efc=[<r#+"N!IQN+.[u2]9@q)<)$\EP,K:#*O1r=IV+>P;^$'<<'#"!V@Q:!gVHXkjmTJmE[!2s5pTfFA`Y3dXT%EK[2%;?:JF&/*=[`1"&n#:8J?Q;2#J+dd_$&K<)tb[+7%cBC2sP_7:QJC&'i>\&p/!34CU@pK<0FSH@<Op_?ST"N"U]B0`+\;O0FrE\,4%%%aZG\LeR4Yg4UMrKL^pY2(^ms.rTL7Ej7L_=:?3(0M'VE'k6\i9JAa1M6+gLjA8RG7+G.I<%$Cr>6ST2#b4QA4A4&3/fSGjd3qN%9PDnD@]II/-/<&BiS=6q$m&U4:$"[%)9\+hjR.O<ONTaQ/5!W_SM&rQSTFPa5B2\*!;;9?>c1aWFJ."J!1&]R%LGPhMRauA%(_Z$%fWKg"8]2fP=3@Ff,`ub3q_Y8d-kPXk$b#f)5CpB;ks.JD"'Mft+@#A4b_4:MF(SRGU)U)W.&:9r_r2g0$09+`=lAdG1VMXtR"Y'N%!q@u\+\K,>Q$d#^WLP5!M-Ne@&u_"Hm)aGk(+<+Te]P]k!CEf`T,NLo&6kWf+W\XDeES0J"e@jW?!W<Y$%NU,=cE8Tk)R"1.'=Xj%`#D3sjH:?#)Be*JJXsS[<dJ(p@&JYj;fahir^%Nso"!WU-Eo2P;=\-uBm%NDJ5M05n[(IgKc=.0`sK\*G6ZC&)C/Nm2;DpJKj2g9%du+Mf>F]Rgkr%72IXLEg(.%RJn2&AJm`.+Y*?5e6e28Ci!%D'%CJBkCp"D9QM&TgR<%8Ao,lU39E[:mu/sTAU]CfZi2i6/>I4)YC%aZVc)]uL"nj*P59?GjtY,Y(E5&f!V7ZQ,kF8TI\,nZFAUpQ/"_*\<E1oPjq0[WPk@`WXNOCI8\i/UoW:#L_a1W]KTu]\=s1$P22m%W'(5_lgZ)n::m_Vd%La;HF84ck\*(U7eh-.V3YNi8at1"%9]tU6d,c<$He*O(K+^MQs"sDe&[W6<"]M)lL<RrB*4=[8C")C*6EUV%QU9]M-ir="+q=_F[%(*ICX@h&0cmV@*Z^+Y1,i`*N;B(c=WOf'AB9KGVIOn5K]PNdP+G.rXjWlo.nYZ<:A/YI1t5NaSSYPCONieb%1RBgT,_47j0L/aN50TpU=:7pI@(E@,DOI6#E=qC)&1_-f!*2?c^cI@1rl:2n,(g[Y$CRF7&N]#WT-,GhcBCLl3SVKNhJ7`m7fBmJ%B.C*L\gC7!X-=JZOEokk4MH_##"fh,,>j2K?l='aFIY0nR9M&&KO9:*6CD10L1pBn9c53KP-rm`gCAA+Xqm^*ga?$?;sT(!7=tr+%T02WTng.*M@DSnj.]$a(>`n'CXUkg\+7uEI^n+%MLt$#$*8:fNl]BCmfFD@CO]Olto\jY@%1;*N!(jUcJV("#^gJ\"+02LTH>"gU%@j-f,/>7GL(../I5*ZG9Yn1Mj"C#<RZ5r`DD)$.NSZ@r\UE:kFP#@]+&%Q%.O-jd<R+#W(2UAhKMJq4c,1op%g!5XZ]r_jor1LO/%fa7li[R("IXjDNu2F-I-_GqdZ-[E-[E1&tm[_`<UX\_8q/$+Zc(n@]>TVBH9,gBaSBHV*CODmueRI1?W@]s8Mnh_C8&@8pXX3_VN%Y=u^*HF;INFta+`pdPO9ID%[T(R@BjX^ETZK>PueV(dKkpR&9$emZdm%;_+\-m*IN=R?>s:!+C-</>*BE_u\-?pq3Y"<g\MJun=T%irnMlK+n`0!Igum<!Z^P=cUa+#Y/r2H+'!+/9%DVhGe1LVPZ\2?EY.@X1eXH:h#p''8VnuS?G2oeF7:R*Wi$*Dt"JiMem=J=($Yo%]5YIc!&=N5B4j\cVh"Z%*<cGbbZHq+m-$f9-h\4(Tp714l0Kbt;]lIW$N*?7`^?,I.VK2l\=BkB";$K.3Br)C\@Sm>#m_7C"T3KA%emB?/dRORi%=SA?#\4?@1^pH^6ej[/!&QaEa,U4_oHYppAk)l(._3@E;4t_Rg#Vm$EYJM0/<mSQ$jB-%qbA.8YdK+BGN:.pSH_T8%1'/[GA!c7CEP/Ob:+?l!b`3;U"oP6CO>flR"`,jA;8DXgg264=4"%UP*l:ZZY7?te7j+mE\25'K3b)J&98PATeOa1"9VmOIba*c:%dcc:S[7g?(o]idK)3R/plS/ZC-Qa`3\g4jj_qeW/Eo6Oq*0^iT&*6(66fs=a@*OgCZ]ar1DXmk6aUB3dI2Wm2-)kX8r>9:V*1Xp#%1;12g43/XJ/7OIPII=un#4j$7(k[)45r=pn$DKP^BUr]2QS'PKMAo/7b6i$X1h>7YK>"L6@_1/PIn!`tW5RG\j_IW_n`Ie&c2E4Q%a:p&-bDde:aI4T#C'Bh2U>Y4q#>!')O!4cg'(V]YO9Z;Bl*`2So)8/I3N.<cEs*QTnUf'XDI*Psd!ks&I0n*9+KIb#F770X];9PA%*fSFUJJ^W$!UG__e+/SuO9_&&%+GHg/p,c`-uOBZ;An=\S!S$$c(C]].nVf0"-!B:0hDL;Z'.&$]eKZ^*[$'F6NL#EIT2DM!c!=B%':$2`OYd@JAMA.11.2dg&PkY-NDaKL`tEcUO@WQ4?n=N\WIgMf_"4HVLY.cOFNlQ)QH:n]KJ>PBk1>F<B?eL?9E#Phb!KTt8KJc$%V^8$&lcj/SA8Qb>n6>#@!$/J<TZlN^!m#s8UskXr16#A&4h+`4)KS]tSPjX:LKVH7^;59`(#JoT3^G/@`dosAeVNX.#=E16E(74Y%=)uZ>JMpTWOc\Lg)el"N$bXkL<69,3%],$o!V75"&4T.+krLTsqZj;_9NT+?LLZhtW=;>c!*)ss&!tcMSpoaUSC2"A*2KF<EHEES%D&d(8D$&@XUGI0e7N3JR,h&!B2YOZK;VILm!aoXcU7ADZWtcdOef2qDj,fsK);H-4Sqt27_+loSonm$DZ&8Q962Kb",;0_W+&]r1%ibSnXcY^'"g=<]dOs7iq&2Lemi6*HDA7Z0=<i/*i[DA)OjTM8.'A$'DjZ-XjYUS%')<<.t-VfsU6WrJ\!T]Y'k,4hB7ura2IgmNs%X7hN)@aVp9`C\c'-Y"iL1B">G`l+j-"4YcP6T%5;1]ECp).[SoX+>5qV"k<;-VKg<.l+EDS?kYMMF(l86"jeb"$%blbAjhp.#,i`%1*FFk<odckE\7OUA/hVJLWm+bSh<8u5Om5[7=nQ0Q6rNm1/=,^7>h:DQ6<^8BV(Cg<."A0%)87[F0Yp'drnS$-U[A/0@U!(-YU\)%3RS_fTltnodhK6hX:1d?3>l5j`5l>KKGjC?K$X9"K&l<1`^?+/=8FdD"ri2kZAapf?G0\8W_<:EF\NTaa'1g,E,B9lq=&]5C1_Ne%r@N$IY9sDXb8J.oS(LINab<B04\fB:Z[!9?ELB*WPe<'8]ccp.d3,_Whh$ekCG%9`$5@SM!J?DG5?<IG]"f"3VO/[R"/=L4.<'XT%"Uk8h_CD&p,XAj>OT9[+JrZ56=Lj=@&Q:J9X:1qn7E1)+iEUh@]%sdp%)#upb(Z:O)PtajC8-5Rk5qRb/MV6R\Y(5qWS_TN?E3Q]%k96ZG"!&,%ONRI3/dduTi_[-OAC(s?g;n!Gk#K2>dDC2a'\#MOK:6I<<i+!Nd-K0l7?ohOZDr4/0b5]J)<e$?K=n#2KeC"I`GL\G%=n^8*V42>nBB]#G;P)FW4ReKUV0B6bgncW%7]a/Ils+4I2g84PZ!%,V]:3e_:=84"3DJpRmtR.`D/.R[rmH%WMJaK`;(/C=h5i?#%P?rqq^Y;0VXEIbXY[3sn]:!d"o"1l3U?ULh=<tXcJ0_t#""hDp!%GmV8I_-Jc/.Y8`>]6]OHaRGib`EMMl(a*-YJe*:%!:ni6C\8%:%79n65$pka:c,hOCG#F]Hk7]h=E88)c1gVnQLORW?Esai6>#d-?oo[C17BNK!t`;!f6Z(?%TPbTf=[@g[fEBSe][)hb.l8YYI)e%;8s)>GX]Gn^_Tsl&@2P'5Q#^R^ES>6P`Sn0OpGfFM:hto+>=ZNmN&ufEaIl1MT7Q"pS@^>rAZ2V)d2g-P[+\0H#Ng:rQM\e;DO2M%#p56r3M/lo(ZfW<d;Xk;Oqg7=kMEHR5.*M9.2gJ^]ef2Zrdf2Qf[sGAEY(Ik(4=]Bn'J/R5@qHiLG8B$h-("\ndKR@4]i)cMuV^p%5]4maB]F2YbT$3JK`.'8%>/VZ_UX!D$CuX95WilhiPQ/lFJTA1P>3pN+rIir]<>C$3*k@kB?6BEkn3j7PcBQg#oAM3!&Zn&Og*Cd%\_`''Bp(EnJL,ob>pg2!7?l3K^,(LFM)BRWOPC_aAN"DD^a'<u:<P#ORW!5D3D/5-&UCI`_-p_#Jb!^ZO^j\"4K4`DlCj&eVNul)%hm)GLNA\H6%4Y'on-i8>RW?ImK]UNRY(k2!;mKrcj/5Ss=V<k5HAGYdonk>HSn2'#^pfp#$3UpHT0,jkV*@ht"O/W0NX7o6aL!K4%qOMR*C^g_S77_I%3&":"aN"Ug*;mT85jB6o8EQ$?`:>sKfRG:?b*9@a6J1Oh0RqA!`*T$ss64<l)m]c`bZJ/RKX%c<'?@bpEe0uZ%phgJ@EQfKP0cS2ZEuk>bqX+4MSLL*>;h;J4/+e-V/QZi)'RMNHE;NY^hVpD>KnoB@-'9JpXDC)j)!6g!*Ako\kQfNmq4W,g.d3FP%_iMoXf6ZpW/`O-F(_6<Q5b49bT[UB$0_B\!G1#DQ`tqJu1543#*O;rmf;G-6:gI68Vj!g!3qYQt@*mV0o)rL*iH2rmdFd4#KDPEp%?#Zq[586b?ieHg6PDN^3`\W:]IQ9"1XQhB*XR@[4)mfiqd$d)>"s]I((ppgO]'n]XEeF(I%be^QfCIsTdG(Bds,K^jm8p"5T.[&g%R\oc^K#@uib`mY(UL:Z"!UYb2#W(sDn[S]ljZ5-16IJLu7&f%#!+teN[-7Rc:Ytf&\N=G\p+";>dq9)A^oT]kJ?#XZ8UDqJO*=#8%(Aqn@r-,focs"fa[8X7a?l%.sU0BU-PPeuLF"5BbMa`R<I3"Cl8\AldpBNuU?)Oha!,eYt5+.`_5a^mQ):$WeK1M<Ga@67l+QJh8%r)dDb>Siq<.+qG\jIl+2%@YO_F,%4SFkI+HaD$e=\rH>i@Z(h2WjM_%QJhL76DWC\b$^/X4JWp1+OaKS:.gQdb$tXUeZ>T6h(l=3%\8snC:LSb@]Q?oslqS;H4fAj:]fM<XY0W>0Ne?[\35RH]jX6YVo,/4A-1qtge:s@J^!G0!J8=mF2GS:@VJM`ce3S,'<f"/*8rkNr%GC=X!(>!3!Xe!/k1F93JnYq0S0-;]"':;rsML[/K=t:u!e5B&cUjtV'T9ope\r2V[`Y&gsSfr7la>Z<4[?36d@ef437L=*`"u,0'%?(V-Y-D+[0e,lmuNip\8HIlg(@rZ5&/m9kTW#mh,5#WqYp0/-\k7^D+<X$b@)'Mm,`Ut*IKgj=#b!e6u-6LAj=X$K=P=c)`V9G(h%,YcHE*[e2!&@ge%`RoiJ;O&s&4$+A=P#KO1_HpTQ:>3&CZS'j6!4R&OBCpU9JWshG0RHM`W%@E79NggWoR0242;9P:_[q;<j.HFQ%P>+FLojcM#S]6$G3.[=G/3kda&*3SGHX&uW--p3rAt,OX1To7O0fhh)J_J'6=eXHJAcA,5]CgmBXM#3M0PA9=aR(Q%4]nZ`lK].S%hZhq]cIE5`_2a0'UHm[lXe<.4],r!d3QS_i+?pJL@_+qYRSHMWfRe>m[U0QM@=([AfW@LrMkMfbGX(iBaZ/*9-J2#G$'Nf&%NJ]U%mI?aP@G'q/]atQ[a+GJ(RFQJ:g"$-MZ=*i;O+X8YZsb1IIKZ+?=2$F/2F&Q1l7YKu3.NHr1Et>?TYB'GDBRU.3+WJ](PkcOPt<lM%KVmj<X#+.S]shDp3-pZV1#D[3OsHV">c5q;g^?]_68iY5<oZ#*?1o#^jhG+AVCN='lNN500cLFLPgNK*fDnbU8Msp,jA":c4#14H%KGV(bYQ<H=\&]Cs_JTo4RBja9ERN&@N\R*1)K:RSLn0dK5A7kK`#5fH,MQPo'+%u#!6on3=jRn/S3SlZ-^fE*CmQLG2*bn>'`7P=%iO<pKO(G[g:cX-"ONDsROLJT/n&-i<D3Z"_oKABCGQYui5)B;,M;O!.IZ6/)RaqIaH8!,OoT"[>&jq:;\4#;-muZ1I`lqZfi^$N7%2=>LV,^jVi:k?7[4+'O6m"UY6R1/q&_$4T6.1aI0_1ppVdNm%j/D.I-SC!.)>0,V5I!Ptdk%jk:GTH]rU_AFDi5d;[.5Hqt=Ofit%-^?3+5h9_Dh:5L'At9_J_D1<QF8kA5V(O-R#FUT$6f*84^13u]=t:mAO>?ITe#ZrG&qik':ggqgPPgO<)Ro!J^W),5m[s!1(eQD.%#hS;5MC2]08Su7@YG`d*GXP6^QPZ='<qgpgL:/W[E[dU!2MoldU>=aF/UKX[9mL5F4\;<>-OCX^,l=k38H?lE!:*31PZa`%/.?g#%e>&T<;emg!>rGYO59\(h?+<0/0V"UtOf`K3PGmq&OO>%Sh$rA_ZG,LcRKNZ:LO+BTRY1^j4BkjM!'4$JC6ChJ9bK.Y8bQXoIfLB!%JZ=&iP+)daN&e;E,t3p',QXI%"HXs$8^^qS'W"Bi6[:em8['.4Ou4sg_*=f)?YLo2V8u):,**C^$r6E2C6G]VW_%Y2<DBdflstW:%8in3Kl0Hkc]?l^O\Up+M'[f"ZMJ>]p4M&S'Q@ohH/$a?GTOF*#=\Ag"'`qDf$,Y>!j>7gu==#gi--tf,UK\9T/XUcHd\dB4_S1W'%-G^btERL&$66Kcfd$%kF1.tQI-Q0UsSg;\KeO#o$,WiXDh61`EYa4W]=96R5N1o6b!n!o7%lC7'&BoIaRn4]H&gE.X9*Vt?-B-'m%lNC5/E"Lm)2L&WKiR$:E@;ESYKU>n(K]RX+PidFoKPTt%8B9]*_%t?OnBS=2%1)u>%V!+]oQ47KcLlk63RhA%=m+SGgT`f\ZkT3r%o'*!I,u_-43"g9EXqr6Fm^*rc6YV;nXuN?thp,;.k)pSH^'>4mN*=V!+MQiq<?9.^*(`p!@llL#7>2(-_[V;P-1i),&bDR#BU3`#%+CI'g,MP=HE94c>*=)%BM:$k+cV`+u(J@Lt0-Kiadd%46XCKW+8m,h8?cSR)1_2I<09QVaqb)1FJo.$aS=m1YRI;5*3pNVKJilER%qd&1i'0BC&3?KYaA5.r)*"3mB.O(na+OVZ,,3q%:OaO("qFL1Ioe0.ShVn04nQBrs.(AAjYXD+0-8K*RfBfAH1o(N;+^Ctea*C5u%-]j[$eRRDWQ!Ir?=mT^FKf>Mb:GG@t,7Ke0*5n[G"F@bU^#oNF><,&'"1d6&@H&!*M_V_mhe444OAeGt8/$dJAu34:TCGA:)\\#h%rSfKs$6E(i?K)\6dJ-X"dZ"pcF.],)B\)H@bS_Ij3AX4,W6]erU\bL0XVm\5'kDJ[ASUSP`l,?>3eO1G%el4,#I)K>/^bD>g;3Mg%TeBgj(joTUf;2'8J:b5(7AWs]Odnk:!"C!4miQ[&JV$>0J&`=i!dXu6CpHL+<4_[R70Nab-+UEe<!ml7nRE;<<6DpU3\/ct;A%")%<9uDH<sX`o-C(lZ2fSjSOB1F^_YPEi&!K\::'jB6Mb8O'FW,):()7,K:Z`2oIrF0aOF^e5O`/`;!f[mhQY@!<I_h7H^re6iAn4L_%?k(H<Ro3YX@S%2:$I!HaT0F6<WJ3eqZ8UYs-t%O/Vmhi&e8n2BC,Dd&p6&(CRSj7qVA0%NRo2.$>,gAC![7)Z8U>J:V%cHa`UTsC%9#44^ZKHlE?Ecdl$AF'h`P0e_)ceaZ5t*QZ)-BT11CsVj,q,!*<bmjj%#[nICAQf(jqKcY#J\Hd3<b#NS&kP=:(\nA;uCiU-\9hU%a(6-Q,sR1jb@HM_gJ_Lq&mWG#''r]OA5R/=JXN\9n,jA%9$hThO^9[XdT$9GK1ljGf^/d.'I7RMM[11A)OmlYC'Yrh"OSi!FA^6Q%AHm@-5fUotQGM'ZH)qm:ZD-COKF7h+Q(Jf$"45EL#Qra:]Zc,U",?HV4l#]JpiilI?4lCZ(R#!oiCiUZ&ds@u']rJEKg<:mE?5RG%_3IC[4jIh4Ik-q:i1.)NNt^/7F-/(%g[f5,HZt@X>OdN9=Q""%]%8iiL0h%hjZ.Vn3aXCu&A=m4`<%2^p_IJ<",J15AUbucDQqY0%CaBsn*((4t5XYf;,4]+jP"(VH(foogL,,]>&s7bS)%nZJTB--I0g8$Hd@s<(<^Tg`;>iEKR9%nEVNk`h+fJLZ6e)9U'Cq5_O+E=;%4NL00?0Hmp:u'(COECYB>.Vs:H%oY/B]Nsn/Qr@fmL_h'(%cFYK)#MRTiH[aP/19GSPKo(%e=-tNBrY9o0M=BdEL9/-(kbUG<]+E%1$E&KEe=-m0dn$W1"`=-\5QFl]^,[Upu5Mtb60J23<k205b8j'Iek"P/"Ig4\`,@ZP&=Q8eV#(0P9I@V@8OIc/h#NRf!p$W.t=(^%I[nP1!EbEIK#24/LCXaDM6^!0hRkX8:fG9?$D$Z<iUdj1%9VW$dKsZOCX@]ZY$b/^cp@K(<2b=TpR,KV7g.:s;;hLq_)LZ]eCCp$%:c`rb6>66Wka)tu%T%)m7til1D7ARNADMm.#ZRBhV2C4s_gGEC694qAE.DuR0e+//MOcT@g!FtqH91rfAZ4%'KQDB/\o3"2LU_fH%e0ujeZ)Ll<aLhl43oZ8p:jhL9AW+#QY`-IiL#^0Djrd^?A?T=Cf[](&<U(isKf?"7p@JtKnHfPmYS!MbW"N2RI1fIDO@7!OL*?BG%=$147i.(NZ7gaqt.KRF#Q2OgWW1XNDqr9%R(lIG?@JY]j6\4Xo6j5@sTp?T^HsR3_IungtE/:a$-b!KBQ1mjD!ND6_KqG:dd[#f+%gCk;)kt]J(a\PkIc<HZoYfUNFF_5"M8>5N@-"(tlZ6/De'6MV]!)"FWSjVjd!eO:[`.CK,OQ?rQh&@(o@]E,M>j;(hPb^1?:!s[i%lp_Lg9OZm].fBMC2F`q9A0-jU_,6J/2L_C+<RE0D^SL]oA`)1W!5e*=\PIO"]fKgCDcF#IiJe2=r7`C"D/@FRi6a^M7"D)@!1!4B%0QuiP]8GIDJ6&]cGGI0t"Nca;Y`G\/N81($8nejrA.K_/E#r_bI_7L+%D>UbPUBtW,:&CN>%FA3>)/pOUc0cu2gqG6kk/\aT*l^F%_]4=Ok9Np1m,B@b46-rg4BFU1V2Wl/]YU?WnX)SQ3nhblX@.-+DLm%NLo1R#^3bio!qh<0;4MAQ!gZG88fX*'X[]7MH?)H/i5RZN%H7["LG-5+:[2&dXM%f!V-j,$Ia,!lt!8M["4DR,GOHF9_Zs*SdX%-c0T8>iLg*108LLApoDmk@ej2?+hWjRZCkBq)FC/L(#WcVTF%Tgb$HD]aY!VUI?fJ`SM:jW@N#U*L17kp$*@r\S+s#2GQfjh'19IoIlSV%.eV?4CBDk5*2k6<)Nq+TGV:::\d"`MV]>-"%7@0q-kF%_dHb*oQkYCY+kIO>5L#:&u+n1["pbn\4W?JW^Jjmn>P]6B->hE.])Bp0!nZJ%>>sOp8'H&"arL>pb;s&\Ln<MThp(?C?\n4o&Qk[%>lkrP6a'SW(F/KmKPr4l*Bb1sW!hHm3F7HC5_.SH#A(IJ(%PG!qbDqM>FRo`e6X@S*PcPf(8;9#R=#k^JD(D8ckKq&&`)1?420G[%e/M-gG5<N/+%g&b0oYB1$tJuRO'+i]Cb2Sqq(ZZ@R!iTU=2sS=*OC8M4MCV$g_?+cT9$n;WC5eroQiqX=16\kcs98,7:Gma"**&a%\:kJU0L2S[_QATK*cW0,`u9VrTo(-J"b7KVah-d;.h0)P??*!f*S1@_)!a;d"U$>pm8CM7!U>SS"kj]Al;9+a,n1"ZPVnREk2_EX%Sk5p'J[+*BL.#-J#MRq<b%]4q2&@@]K2CZglnT90puJ4Nd`E@3XhF^YdV2/V`^+`[j"M6SSi#6=/uK(6?=&/NO<HldRbi;V:bai'%^nK$.S:KN<hmGHJdC/CgJ?-.'P%SqD9m!e/r)[9qVr;)Ri"K!6".b"2rq&1$UF]kJ=NZ_;7<qA<emB7\l%[pHRSY<7A1\[P"TiE0%)n/m<l@C"b>+.s&&1]X`f+TlY`c19SBUB(]VDt#*pgru'A5'/Da9[$]Wc"Puf&9X<P1t2hqTm:lbb6<C+9V\uEi?)BhJ29`Dn1b5%3c[01Z^rT,&gZB!SkYl0#rrS,HG*c8hBJRjk,p0R/[EHaI9%>$c[Z:4/p5g7]HL@V`g`).*9Wih#!sZ1gsn3-84$`>jsqG"B$aX[%g+tEM%ZeX:`.H./i8U>=pAQ0,i;M33o+GnsKO@QGq5?VKik^HXSNUC=-l19-KZ+"3TI\17'n6RAZG-9,H&c_]r*Hmd^qC%`:_u/K%]..t&*l<'j,-S05irnqq96c9I+-D.t+2ut\q&O+%&5E+`10>iGj9#dOZ@cJeB^]^?E%AY0Y7_g#!%`bNe9Ut2SG;[<iPU4!lBt&f%/Tjfd_SUkb+A1=E3Je+<<=-rqFgFs\'0OA)[bBAsG@p0)+d,aFNDW"14R%;G:6D[a&*ZUne.Go#3\TfARURbO@:;kuEs>J,e?b:N%U3#;P/Th&u9'Dts:N<lZNc%Keq5n>_$?gWDC*()qH,W^^.9.fVXFcd8Y<Kc?6BnK:K#@421Kag5bh8Je&KGYBm;>n=b<t2`]_[Hd%3aGL@!l0QBpe<$uXK!`.Q,`.4BnKOrcQ%J"%ED4oX/Bfr<fMAc5$l0l'EAjRV(>uQ<?W`d!n:B[:kG]L0kM6;/>a!]%k>/A&6<NL%Lpod"-3;hI*\4WB8C=;4JJB<1UZipq)8L1]$DOR1[YC&NlMt9Z8O83)3=>:-YYo93N[hG'C\[1qm^q-N['ZTdLW]j<N=<0LYsAr:%;oXZ!&kPKP!.sAK5MK7K)%ci7lT>3rZPZqMMZi]2Z[%sR[3B^3c;CUlW_g2U":TLn6p\RMJXZ];>-.etR=22<KtR9D^9dE:[ci)!%'84%gIc89o<Du[9V'g:>Q5Zh)0q\#5b;n-g7<2bcf4oG`_Y8r7H$i3S,T:o40tDpOh>)3PnoK9Y%]c^Alg2?Lh)M4kSVOH$oD\%M%Ss[<YGN'B72^_D!gNS0h!h5q34)o&1S%6[W1nFn@]YVpD7BVKo''kJ8RL#!#IhC#FM?2f_:Qf33?sJOZ*"r@iU>4muW">L2FA-eK%kuiWep6BED)VmF4TZV;.K*p("#<V8tR6>:ek*lWQ)d6g,<Ik0>X#TW@j!@l3r.`Q];'FM%cp?'--a&6W(-NR\W+EDjH*A@\(jH<c%&jOEuM^$FhG>4g]1/E!4hQ7!+X+dW.\jkXrfW3[pMA\k`b_qZ1U5pL9FQ!S]jJ/Xbo69h(%,\=1!]`RcQ]iR77=_1uWjjIo*)LJF%/rI/64`c,_^3]q"<ZQ1a:l+!bd7)H2Ve6rLZUB?M:/%]C1`e)>/.*F47bDCK\.7Yo#S:#FV-u'UJCBUIq3$A>`LIFt%A2mP1;jM)%3[faOkYWF+'@.\O\m!Pl_[:Tu_-\tSiS>/eX%(ZA06AJTbrW^W((ruKo*""R]j>]SaKEVF>qtb3cgZ1TTNgOW<8J=^,Fs"VUU\?e%C.SKp9oKnZG,14L4&XG?*<CsY_`o2BW'6hS*+!csK0n\lp0AiK\/qR6#%Fm[*CntH!'8Y"W-r#`;bOOIgC\t2E1!Uu,BJh\GrcSV%]c>]qU(IL3pj&Bl67$cfh@,PG#H.TpLEddd@`'Y.*%;S>')ruc*<h71It1Q`aZ'k"4[jBgBLn5j6!>,\5UZ_U2Hdr;aE>^aB<S28%d-D;3BGXO<*fgAZW*1$(rc'`H);dFSXV<B=8&-/reL+ODLV^Q4kk43d?$WMf4e'a^gBh\uH,!@0qCFh1)PF2CaR)79F_h8H@`TF;%9qp1ZAYijDHLXk_$@.sQ"hi*:qm"O,]E<6t<K0B1VijD,jOI^=2,:9l,J'RF6lCMSa,-]Z\9P,1c6#<Qm;"=)'uJ9up/0?TK@G7,%WWmDah\]@!+]>]^+&ra](HE(o'ns<DMLs\r`VinD;6Ys:!\u1*aa:,))GGu8'T\Lm8008g3eJJ=M1Z5iN7\mL005F7Uc^#0TZ[]0%`X'Ege>5t"YmMUQm=MPd'7$*5[%o`Wb>q%H1;BX]?>&0Kaad'2l\&ZDY?(trfjdI;lRdW@O;t$q:Z0V`L5Zm2<Y2:]7o]YE]"%K:%6!CBJ7TBPX,j^=)j+acR>(gY5-a"q'n2Q!_HQAe3qtd7+guF]0<&IQEC,)`W-n0k.bihb`<YTkn>3N.n-sM8>E[Mm,'f%!o,mh`:%+%?+);-X_^>]0O&erub#rP:E"lUfHSA78D*$"ICR";bHW-D/j0+Io]8PQ^Q7P'ppFR@q2e,\:'2cp1p$`sH">G9b32TK0q>8l,`+%,WXhb-oJM+q5?/WUa\#,X=+Ah'IEWO'd.1*XaG`#4G8!aoF_ia)")'';/.3fBKRIf9!Eq"7G\-,/GXtW&k1B8WU/3r"Qh=J4Aen+%I9n5`8HK&Yaa_?W&k5^(/Vs'FBOBf.=\jVuXOX);"C%)C7>NVO#3RTB4\;<>-eW]ekuE'/n5,gb)fNqo7=sQZR9oNN](&IT()/&#%hbC#]mW]Z&PFhHCNM,q.oH]!>T&dXr"UG3e7ls$8PSXQY/`9*5&ra8@?S)R3<7F?oocseHmZ@lhPN<7jom+5[8sf)fPuo\:I]Mt9%O9>raeCi0:jYnTYIMAD0!$GfpJS$(-6K.:Z/AG24'5q3+'.Cq?!XAJFI]W*E`H'qfbAT)!)EmA*`0.Mq`A]7f+"WFpd*lHWH9ODS%<:HD?P@NtoZKq]R#chQ0A,0sdR.E8XDmb]`H'$p`(1gMAD*s"$fi3D6.*-<.#5QMmXFaSD26<>kI*W0%gg2F,=]KnY(lN<k3U*Y@%1%2(5##MEN88gb;OJaU"Dn$Z@n4OnXea!NVP(h%DT#K^mi\>W)S#qN>DgjuPHF*),>VrE+j<<m_p$/&QLi9q26$e0^qbg%NhBI2d%O#cI,8hF?aGrCgC,`?6Caott$lrN)u,R#f!_8;\n#ss%caDS9aNt^/Y.)uG:4@DaffaW,7W%?#q)][&O99e7oNkD^'d@*[FN4`IJ%n^fm_[h;1)HS?3Akg-]eCGuBt-RZ'YXXl,pMDhil[HpUV!X2MbJAG2a'=f(c;pbdS`A:Z3OQEY>'80L(iqO"nSklehW^TM0<`BU/%S#`ulZM!+d@dY<<qdR#`Sd.N^!q8B.ib_-\O][0lenfI7#4QkA;*Du\bLqb2KW.\:X[o*-:AaM4<obF4'u<e8"1XH[6$%sGegWLj%V3@1D67c.u.5`&4<Sa(#@'A]$VBX[?>Xbl0>EPfq2;CT]J#u+O>UWO*Sd;HciYJNk)#hY2Ne6rFd-K4BMAB@;h,5Du6./-?^CZJU%5%fX2ngpq%ZU's!.+!.b6HN>=BbA:K6pWqB*b'k&OGF$ML=>\'h>`kj\KE_`YEO^S(;7o<,elW=l`\%[#qrX%YPW4F2oMNMTdnKA%#FEC&(artCXbSO+<#Z-jEY022R+_:cVCQ^,,V&X*^l%-Dr'D"4Z8Aa5@I,/S$ST9%h&.m5o_0n.3"6!($,6p)4g<D)-Q@fS"9N'e%L_"jc7b1Du'.I7F`8s6Zo6.u?$i.:4g>e]0+tfN7fB+C=!nk*S8HaTl.#jF[Z:%r\]^D^d/5VFa"Ul$KrRa)KZ3M85Lg_][Sj_ST%`KGjE$r\Z>T!eaDae]YMl8n`06_]+b:4CTP;P6[5:)E,U97pebL`EnPa=Iuld.pWqJ7W0q:G;9d9JZ-m[X;;m9Is#%M$4;CZ2Id9%h2M#co*N8hTKsp]laL$YLdH(a=Xk36M8]JVUNs,S5foi`K3/Q#2`+-2kkZF\`fnq=>&K#e(<!d'3g%Ghg^R=<(>H-n=R=X=`FA^>%%gTI20kqcH?=,A2g4`KWb8%s)aB$]'P_oQ468:i&-3g8dndh$4+gHR>1+X.BV,gO281NKSk3bO_cAVZ9U!6M.]_l@>+"'km^`.qc%]p"=^K3OpE.P;uS"JHZ58da()[&(.,@^/2%=,[!a1m'X3'#<@!i1S"$'%7=ej.KSu&d_+SqUiuciWbI_ge3&*,KRTU!]gi]JBCOd%b#CN\]QO]71R$FN[$IQ2W:e:Eo4j'ML##E"V%L#Ami`^,JIjV=-!22LB:G1IM,];N_/A1[8]9"-F89[i-r6Y@]C-Jo#SFqL)f]sJ%!lo&F!:DMnb0t#G<BRNDBj.3sDn4ZEbSW>Ij9LtR=ImM9lCM"aqd?EpL%prqkSQ(r[i?8!mDjD4ZjTG?WC*@`C!j4F/K[ZS+p$XM%*2DfqEXI!3Q0u<:WtY#n.2'5nD9HRL<7&2DH\f?V1LKXqp+]JkNi;7G0P-+EE:t$6HtN'`+k.YZhhNKHjlC]N3V<J@R,\CK./nsc%.MA^QZ62]<8-"PnW/uBY8>]prPZ3d*l6TG@TR'?J)2R-%EW*"o03Ab-ms-$A)O)C$/'!<#DJDX.\c<egKaOndQLo.uH0J=iZOKfb%Y&#@6UF`\>Q3RHG84+[e%oKK#KjLs]n&3D9el0OYS-'3p!F,^J'GacQh9[@lDM1(%)2/p)6HS@4->6f7@B@=;GNI8Ap(8hX$O$nD%&7q72W+=73!n8/Dd/[),7b:gq0^ek\pW='F1iIXUldcF<5S,Hkp`G,7*Wggr(EV"uG`[\sXm*d*=,,Y2>#s4X$94Se>1:bS_D\if%Z:&((Y>TnT'IuL16"X($EJ,,#@3GE.5>E?^kDfg3\,eu4J)Q,bjM/;$GT^*,4SV3u;TAR>!26=?de^<@'l=gCGl[FYM/70N'k6)q%iH>ucHTXTbX!%Ub5oD@H!AK9kLj4_WG.PRH;^b_kSRC/!LBr]95nA8EYul92":5DY70k,-?E[+c;]AdCpM]E":k6M(Jj%Rd0F/5D%6m5OgNX\fs-ZTH(MNW=V5k=ST>/Y\ufbOi&a:*&`q^(S00sJ+hPTd.M6MReJ+c+F@X?-G.%jPb)dQ!DLK,D?i4Gf"s_sKP5FKr6n%-_J6U!87KPiI,WSnUN?__NR;uDlNf2?[X2f66<1g'8YLsfL86;J[Po_,HAUDX5=6Ur^X2$h(r0lebM;J[mo+JMaYXQ5VIdR:)N+,%3.oA-8MTZNVc8HcN8st&oTL'>I3f-2@JV40E0l\mf[qI^4^r]\l"A03`!IS.jWQa"`.%qA*%C+je)Oha1)'u6@,tnpMSWkMF8'I5%cpc_*NrI<c_lG<FfG6`>hARb4U2h7;LA#`_0,XjOBZ&s:`ZUp9gB/2UEe5bS\&\!?1[kS?.L,dKnHJHCFaRW5T?&,/(rHP.QLV0]%59Tb)PIEiWdefpE\+j6,pP],G7Ii^20aJI1K70YV!NJJ\S!u-edHRqDN+%A2QtU+Ok1V&sU2/ZpYah8C>lhn5#fdaSD!5E'KD<;Q%Ca5<!ClC+c)-[(H*Uet@#S`(c^rHadD!H&6hYp-Z:ok?eN<t.D&3,=BMU)X:Ko(U*`-mBhk=;H51kL+HD8(>]LEntfO@fg#j?).#%dkbFG1).dL?sj+&!jhMHO=q#H(W^5![T?`t"p0:YYA>RIqK)q7F57iA]!4D<!7)_%RLauD]e>8f,50A=./O>Q1a!b'D?TOh,<LSn%Y`.M^,oT;J2[&Z]r"4r_&ci5cX"$Cdi-B"^=\bH:q1Ykf##+JoFLOYo4D7UQ>7=5C/O9sQ`0A7hV#uP3U0)^D!QpsVW_h&=5Z%1M%nl#\g!n48e%!4f)UN;t]7$NDV5K/G5HHmu;f#S3"!I:1X*Jk"UUD""5(r#C7<EKi4Lun+'Zqt;>OS.\NV8AjIXR#"0h=;[(JIIWH%cNZ^-K<\/V-@l72%Bi('GG6*<0Un4gNA9O)k")=<&[kaO6jm/P;.hT2L:8ij6Rq_SFY;1jZK1B[>")@(BsM:@<"Lodbd.WfH:+E!%J8UZ4oNXdZA'G4DK#c+C0-L$$k"^($_brZaidi(7e5mh5k;4:5.67G/Un#,o_<4GOG-UfDL>Ht#*17+p3XTn"aXcT]99KVb_Le7<%pCgtXc7n4+Ccj53NeuA95Iad<DhNIB]&9;]mTtRj8;jt[e]l+uM_$Lm0,(CH$K?Y$:*;4&PgXa0,@7FXLGUgrriiN%_9l2B,70QC%P]/Zd_[Uq*U:R[^7<N2NPUP`g(Vg5t59iSJ*'#Reh^'ucZCSrV/M%kJ-P6MCO5T&U6$0G24K=!T;ic(.nDaru\3:sK1S71CH$mI$%dG]D)kN!dXjQ"$-d:Gr%'L:7L4@IJjDBqsT_qg+f#M?P33Cr;i1fW&.'SC4QT`s!(g8[5JSB#%WW8mO^ccSU7qq!>:_.6uO%X?Fl%+>:'V6u/_t1G`p:b4N-MH?_T;8:L'X_cHA"4]$VL,r>EQKYeer"I14&LLRo%7dL_YQA:]N%!:"Z6!e17nSZuMgof=dF`2,'%[-WL%lEQUpe71#/5IP]YOR/#IMJ]*ufg@kV%k.NB;2U\d#C<lHInO=ZH6_)R+.,))c`BDmK&W\qj=EQpap!3mB/,Y\MP*7kV$g+ZQA8Sh%,E&XOf.#ns+j0[u3\#6eU&AA3:#OFU+]bUA"qJ_I"U-RlUp)8gZN]fm]hOY(!]%\\i\5b9_5;0=2Gtks$Bi.OLX>Lo.'ESD<>LBn%aUG"ugHq6af8EA5g7[$<ckSGEMIs0"am0Ge$8FTY6(8W[3n_'4`3.hnChQK&`UAjQ@=RW*h4G/,;1i]t3`u#6kOtg8N#;;ecjf;A%*fQP57H>"C<O"+LZ0kD"+&pu:7cOF2B=:$mI8k$4i9FEQHXmN^p?7\E<$;?ri1"('!Q1+UJ:9Ee%b:rJ4A0p8;_pRDE+<"jO,p7+%%msYd&M.Sqp0/9kTa-Oa%$1lc0pi$.3O?_A<X%KBL4f7&KShR*8bA,iK(R,]QbR_>OTQX!K?^\s1-7ushJiXBX?<9'6JgXrTN+Oo%L(O2jfHWm,AH*27p]g!IcVspq=s62&+$&D_nAnH]k-9V1%_sR_/8mF3=Ot;S!u$:jRXjqZnAkcs@a<.M*99C<RL?lLaP9?K+@e'b%1!7\h%mX;dVKrFOE/W6oK/II5@o\=l#VjOJdsDBO9GLH4k/Qj9VrJIoU!+CmYUO505dY2oM"S_Q<eh,anq(>2<bY&PXu_q=CF)IW%]Kae&$_XWRn>"%f*o`Gj_h17G[3(=!$[/cj;)A#[j%/;U11RNcbKV,m:bJbk0XH)"HAOis:h>,L#A3NsI%3I9ZG6oN+EWff#6A.U%oX,5$Fog/0"Ucr3qF2$%Tc.NbUD"-_JqIBa0cEn$(:<q.%OAl-5p6a<>KF\;Gpq_h(na$?Gsi:L@YuHI^)#u=!@o0*:W>s#3d;;O%Pgr4G)Q)3i8.EIu'q%$Z+eM[[T$hn2`]Si9^(uS-MNBgL3fp903.Y1@b,NOl-t6l`$Tc?o'0h[ZOiTU96J1PgeLC)j'M'=EX7bVK%U^ebF6Inoi^0nPT!GZ_?"4YEC;C`=aKri\,8s:)-,d(%"Pn%O\K?&BIr$c.F>X\:'S]n4AqMu<"2`oZ,@H/J%-B3[>/XlPG'B0cS%X!=ZR?KP,\^(QJlUU3Y=`JV;l0C[Y"TGEj1J_*3N'@>-$)=6T*+H.`T6ruFh(-YJ1Km&kX=#r?=]6>EK369Kh)0.<IhGR5oOuPn/%OVosf$Z1tFq!D>m>hU(SB-Ba]X,qe,O$ZZlE>0%>q,%D[\driZ2[_Qha3U^4JD5F1&'1tCD4E4c>YIaj)aK@rFg",CO;"l>f#"-K%iE9iHPVL4ML!&HZ<V@sh:nVD$+"'nAX?;5L0DApQ(>7@5>sj/3.ceA(>@Y-2C&%h[qi!Io+.GI?7$+$\Cpkg]D[:W1KTNm&8"kOF%Ep8!S>13R^]aj^oFlTgX"qH<uU#dX5h$j7f1b+>mMoS)-'XFoY,N)]]4sWdnEG++kSf#8>.KX0#Tn$iR70F%!Lk)(CR9+^5:i'\g%I:/Ztpss8[QL7`b7_C(b:f'RPLUPRK*YSt1;&G[3f<$cuP:@aX"\$?_LajS\,XhhCD:U2?*NY&ngdHD-.?MhqXqTkq#6>?]A9aV0%9L7u$&I=P-9-MDa"nGN^%>mt,Z-D8C&V*>R?4i='Jg(86k<n/(8.bm(YFp`hDc<<aKAm7`4WGI"lKI1Ll-F&fjL!g=-6dLARL"G?%"K)TW`X,87@!N<eWQ,=`5\a4d0YW91#?F8#(gosrWef#T5AT2"<,q^qpkP$g%-4GT6*jQV\PVqQpP??H)V4,4GsmUc#@6q\'*bsT%0LRHH<O@#Za>S/"PP/Lb,`$c+Fl=LWm0r@HFrEW;R<>4P\"PMJHF7p*ct:*]7edb79!P4R'1egFG(jOeo31RZ'dSUSr\G^=8=)6`%$,TF>U$&R%2$(W\>MmEXBK@(=,N6qWcYQd;ZEAG.3t5(lV?jn$k$PrH`#dtOlQp+0iN(05=>)f:'f.K^YX*0B"uap84P6<Q\)Vj*%US-)2PCPp%=-R`N$Xt9s\`,1h@(6@Do_Y%Eq=P;VFcdLR"_>U'0H_n>MNGRX"Uc-?rRR8^ENEPuF<ho$I/-lS4>"5P"UZ'>?PC*Y%,=iUo'R7j(`etC$2n!+NaG5tB#YL"51(8G\GR+C3V"m=u>"T6<;HY$P#WI?RIGlB'Ee9!&/%u8iC:3nr:qd8Q+]^Lk,@#nX*C21U%BK\Y`e<=PK"3/Dh,79eQjsIO;&>>:^N[Go$_S&PU$Y3ldT_8M^dm^bP'+4l&'0'31r[-FI.]*$3E:4qggg@7FeE'Dl30H;WKEBkU%QG>>?F%"a?209[iC&4;Q5tYm6e[+DS_kC+\'+,Fk634tuBKt(kbdoKa7hT]+)=lejo$"0CS\>PeU"??QURR@Y$>kI#Um!q$rNPGm%]dA&9'm-V2%8*k$GrI$odRFn7LG1\:6At/c3"St-;"EZI@Whm-.XKr:`Pbctd0_*a&DC'X"e:fH$UN!.!"_>>+Z.:64=QJh61iX.%&%(i^TTj0sOi>?c.$`/i1_AabJ11C2a4hDQRKgK'@F7T2DW-Rm'UgMDO:<d&X(^W6-O9lYri(KoINJUG"I(ub).qGIW"OlIm3a/#%Bu8kdjoY0f&8Qj,q`Sp&D8"g1#ktt28pGA&o3d6UccFK-T5$RGmthFKH&f$1X7s4kY?1?<mrtA]Yp^RCgBfEbR2aKK=Ic`gAh?98%[Ju*h%W.=tj!!bFbkd^FNPhh.:s_X^m/lZ>;1#6O+`s+K?:X`Q.(Im^mgW"#"D*<9`##,SjPiap5O4i,*?I<UXs&Be&8pF8[H&".%f'/%d!7sk%>4E7\9S#0ZaL$aCo"rAldMptC>Dj]r+d)L2W]?UmFM!ASJQKTb9ZF?U,X*X$0g[,Tq8QY`#[p]44CHW\IrJM[=UtOB%q`5Xg']IYsM0;D/k]$Z2eD)\rpb4<iN^Z\m3AZ9,:HHTW+<#*,NKccSBhkY!+O43X0F7BC,34fF<oaOla]q)\66N[*%fo<.-S0MU%3aU\>57TkR-o\e-CeK>d%"k.Ri'cZqQ:pod'SmNi;N*$FRU+(6hm0<o4f!(P,hCCpS"\+[IYBXTVUAYF6sd)2NX$M7XYA*r%?dEX%H\+U#<.TG1=HmH^4k7(-:^.XOdb>)H8G<CT`h$E4'Qq2I?4u@\Z>Tfs,`[[1;?_l6:FX52>$s*B;#I[upoT4,"t6Zq)G$W9"@$9)%n[(E#8/R#2>>PrnG7Wh9l_b"7XBoWd!O'j2jRJ<:$nk8E#0aDoLeOB`ERLRm@Z]i,QW&BMMs__@*&eMb6liLeGZl0*l+^QP8Ta`'%#M)$B!=D57](7>lVLnU0FC5\Rn5Z*="aYPE6eN\3\[ojpOfhjsMo)L+_!G.q52aLWYr[Ggi4PWIkd\]V7)L?tek&OMh6f57ZqLs,%^miR(=2L0B+g7+DKRJ.i$*>^n7Onc8Io>L+0I0E[aR!))Q&c`RIqk%Fp4Br%,giBsVDUo?r*+Qq7M52Vdj]st[H\kYe((ZjZ@Hc<%7lNa.A$PQ.#FcnbKYHb3R+<tCO,fTr_ot8mB#5D@r!hY.ndIAAU'Gu*1#5OU*Ynpr0$<3Xpl'*.7hHfj>r7XWlk)LZ`Bi$h4N4Vo%/n?Q_3i\tTLV%og3K^V&mPO;mU#kF0f;kY`AQ-7hrtYlEYK0>M&-a=QFtCA@fWC-\L9Y>Ce@!LM@WG=LXB/P?3.VVV0]P/foZS$\%jfp\0Q;32JKGM#C8/K>/fd6Hf9W1]K1e*%N$t8:h*uB02:e.Z?Jp7;!ijW2ENi4(!l@DoP56cUbj@[e<'\<O_=bK/1_]E]Z%!dT*%$%Qd_Xj[H0[)GZQBko@N(-?YEA2F&N:sdU;WRO4$"rHjP![LRc[TaP5T[t\t0gX!scZHRXbWr<\$C[_DOp>-r42j98GoYhuNG11g%euXb^_+nIHn;rfqJW>[OfN7,,\-mPVBfQS*EY]+(Runj]mBaYWO!hB0bS$Ku!(1,1Jh]gOGje<95M"i>eqK@^$U^nXU='S*mL#MP%LQm`+FCaGu?;g)U(Z'o+2TUWS)efu7mC!1+kk0g6So].L46,4-b*1@rY_OammGSD`UOajnJr^&s'H'bZU`At'$t>2>(QY,en/sn[%$F9O;j=U'ieiOfn/4SVA:b^BBdD//alc,j6*+n"1/E^2j^gs:Wqr/0j>o@_aATA4U-0X9qf1s[2ou)D8LIIY?WPHo+XKYY4n]O5=%4&nPSc*&"7XBZf%B?VF"#T-/qM/AVmN^"b`4r"9n5.j=^8jC9"!Q9$1#D$nL8857o&,?LW)H[EWT&,5V],8;^Do%g'R[Qg*OL1Z_%]MiAc8OHjMaM^Im%U/33ba%-iJeGJVH5ZquN',&m/V+4hm9d@UIuF-GH;Q'U8UCeQNbPcN:!3``$E'68&NRdM6SAuV*`Tj?V3hR9%RqA<=kl1rmU\,:?JNQ$R3J>gV/9T>J"@5\:T+"A[TVsDMC#m9g?lebW_M#og5s;4EMLcu_1-qQnNAa,/_4W`;D:e(ga'tA.++?i&%VglJ7g@=DLJ,`IIoUEVkoT0%(7Ml(RIJW>\hZ*HH5CkWhEGSciZg>q2p[Z3D);BXo#(HF_Ub\N,p]'WY"g:kqFAj;*kM&c=N/q(>%;8ED"UW>2b#q)d/^k\(8i>`,',/>SE[0Ga)+E`Qa.`dsKn9>#n.u#Jg>XS(+lV.p.P-lInI\,D_TDm#0s3j42h/E>ckPsXN^ARe6%rqN\3qpU&poPZY[)i0O0XJc*CVn`+a5QBtTrq2mJrT<_7hgYClQaaa0j.Cf+TDm*5s*9+hDtj9Kh-/JfL'jo/h%[6hB](lWIOG\@%?0VVUYV/VLkZX2HWRe$kDVZ#e<RHQ^n(*sN1*gX&`r/$5]@W$?fqYU6bu?u5&#ac+k$A:P,R*3JM!<&?QZfJ_X9E9CdbilL0uE7M%9uu4o+$jEkeq/kUH"&_7fO%1B_#s[d^sR#W#dpM9h8%l/pqm+JVZRXoI3TbSb($mg_LMG^2qQ^QK_PP!IrIE`L]ZM^`7l;r`?oOh%-#`elH_*>$B+EJ\J>)Uq9b$`XXTrS)^.V#7MAg2l3Z%"tLQ3(0%<C5BH'CYc$%R=F&&U]l/0:65jA->l!=G?8%%`L.VAe&8fM#-D%:6jkL&=a!&4*)P@4l`<Iq`2S=jEqkeL"g$cklt'0j`:s]W*m6TN8tQjnGMBPl]a9TpBi?,()Wu'[Sc[o"LD4i@ZG0ahbG<j/u=Fo%A8$_qaR$-`;N!]@gAC#$oG<Y#IjTj^FYZ+f%XF^EjYNt=Bh]M0@N_0,_52b/bod6W!?QK^K7T)?,(r4cjp.fQ[dP[r.L=S50Du$3%R\t7h:hWQ<KbOH"!AtkJX#78N=DJ@FoQ.4O"sA0-I4(NAYkV0-#g_#LLb?g0@[V?00nKED4M2=Ygj?qT!=c(dGsE!S-jJnVD1r.(%#`_$[^o-Z>6kr^>X?tGR&(so%aFehE$lGlDd8nc%RtbBi)N*c9^^Si31u+,D1uJM3aCV![>;Rhk3Xl>)*APo8j#l7\4!R?0E$aUt%Q%qJXBk/]V'5'dibUWRY\2Z!K(?tpl(5!D),M&fpn1$78G_VKh^DNIE:k8Tg//em4(7gU[Q(])lJf?c&Ohu=!arFi*.,Vlr_uNF_%ArL;1J3XI1)KC!.h6):WV*m\%!865r-Gm<F#FIlo25g>PWHQ@bNRiN55uj2(^RJ3AXi'IE96=BH"sJ\6A-q&dr-(KPfGM8MH&2@i%<"EKV%=+JZ$1HjZJKl@*CB6$)onK^]'f4:f`p6hA0?6,6-&7<IoKkQUOA]J)..oT",Ta">h-u1r3DE2:DVoH-=))PI)kk6gj\EQ5%aWC]XYeoVD+U<$aY'`cB![5L.1iTGu05u[dRG/q(D3eVC=V//J8([sX)uXA7`9]U$peHm*DO,pbce#5(p!%RU=(tf>\/hBp!R@Aj%_cpfs]S$JQIeng],f\&'GeQ,U^u&S,Z>irY:k9ZmaoAfBRA::[)Mf"1hUGaJ@'Kj8O'bH^Dsn2&B&LiFQ?'/TQI``tj/b>OR+NGG%gte0H3.HfKFd"WNmdC'`2!ARb(aS?9=-m.&Ws,OamrlP?/VD>Yd(N^N\H6k^/W`0c^e>J>l2Z6k'alhR=3gU54SRHsk+9@,28Xkd%KG6k$`Vac7Gb3LLVVtd^cgq_:g38@bL0N":=Y40O2U#))$=HZjo(BP3YqtJsf=QcI2S-Y.nYsUBmNp'+3'P<R!>"&B?!jDBqeZOV%[DVHSS1kT4`>[N"H3pU%@h(:ZW!6^)%YG,36A'SjWOi@W\Pg`u]o<LM[rJ'%9^"5oRucW^LZ3o;54hr^hW^eG$4["2Er<#AD,LJZ%'p17_i8*5RAe1hk<\Q)FNeN(6_N4jJ7>M1ke++H_q*F8MYX,g2O[2.6e6R^<>cHnKhF7`t/3MJIYu&f2bFlB&$OZb,&mu3;2=o-X%(>kA9ha+)gQ*fV4KL.VAV:'nKAX/PqF#.CEH_1,jdZPQ28kY&pEq"=Ff&ppbaUdQKLj)KbNlY1';Tu(l:V[XSgjUh[%BO2_b.:mI%q?o3@d29U0_NAnsoud(F!802j4OROYqVihGG\Zut5nLt"l)S^i9,^!:L44HW)FpQU8[`5_I!tPhr0c:hmiKiom)\Bact)j-9lO?j%!MQ[O([$L*!MMeJOZNf$&R?55L`&\l"4rM7^%cO#Nen?ZddWaH+>19;+?XtCJKb_'AcsktXu.3iouWs4.*_H\1BAa%>HZqoT>4(/%0EsqL]-\%h9e`r8K.C3@7;PXWFdZQdORak(RWMr[GU!T:fBf@*NcFB%q>gVOZ&LdeUqC23)iu9<%>[nU`>.C>;s:!hDIX,WG"X5/%d=R02d)=c\>BIrgD"4L\2[A0_(7uO0FbX_[<^W7IXkCs8&NW]ehFlO2^lU.bJ1qa3Gi0.4rbelpMiiAEMMBs2'h=J?IcH:qA$.d@%<Al\JoZX:P3epQ!jCmKhH3j<\<)/"'[)SB8qSg+>9hErs96gf2P`A49P)SO@*X,P9co!U3%UjSQ.'GF44[q\6P.nRp&=st:a0,^/%95qtJdJu34[*K2r)-.9(`^nuBo_`j&Bu?XNJK.UT!s#_!kb9MH(E!4f_.npcUZC;p7`Bpt4<V#]";S`lZIDnEeQItQa&B331Q86Y%.8apI2M4>$n(Wff)h.D2AEF;G:oR"W!_mDP_b*mCR?=]!I_gs5)"W.XJp`MV2O,516eO(dhq;;A#AV;GD$XIMR2M/qP7h7681tDN%Y"3iR[\24&_?X[=m[Ch4SiUSOIR%UDEE!kgOBs*n8KNs92\,&ep\VHeK]+%.T)FuBka=g4*+.J6.]/joXB,`A0YZb4HhlZB_f(:c%bnluk%\42=eE'LZW/GgX?c9Z[%XcZ4`"uiEOPn<l+H-PRf'_[YfJbjO(gf,dB"ePNm#`K!F;XVg%KQr:)4;Ak1TS+O+G)M<_D,#C%fb@CsW.@\1bt7+OF#0/GSrH5h_Ap_<,5b!PE\i?bT)3nARJm3qlGE&R=d9j'DYNV0H34.c0J$mZ^R=W/kN<;&fM>6h!"Cc/WClQO%>BT5oL>P+:ZW;M%o!pj3X50M+)XS=/B$D7k?^SR_<9jgaDN0;6QuG?5Bc7\_[C]STVF=Wb^NSP[$8tTp,Bli!p)pEg.9H4Q</iqU%]#i!/pFFqHEZ2dh\6%[$;aA+TqNu:)^U:#M7M,6=J/3A;RiW)^5\]cW<pd#=VqacReU&7"Wq/-I]/>!&5LnqN_CRi/C\Yu5+YG.J%Bh5_^4Y$[a6'W#%2'$clf6h?.c!ts=c0(D=h%A8G78^4%Mg%,3K`9@;lFCL,M//EsBbcSB@OqoXQ+ORR/db)<33HuRh-:Vk)[r<V%!>M\>2V4Id^IPis1E3slE0e=p;1CV/88PAL2O>=$"4qn,Qep$-["$EA!_@-$#A%^F#B`*I/!prc4g,QO+(qUdoZ:"Io7#:qC`DZt%`XWs.&==+JODZFI8[\YEk[#LL7E]TZ]\<j6d;nT6$j!ddWqY95h/*M7mP.RnZNYT8Mubc4jA^UQQ9+HC#1/7W*m=Wp]\+>k/a"/`%!ZmkPA^pY`i1Ofb5Rr\I/ag%R@*=PR+)3>q@2&ciDmu#Va2,GG<SLquL&_?pGr%M^($'DM*Psir98(48(?#HC[Kdi"c,L%Sr(%Vs%FJSfY&Kj&3pf`JgJ\\8DGpkp6+4IPh#MmTVT3Hbci9fn%\`MHaZV+R=A!acQ\$O7/p"qpEF<In_(t7dL#mnY*'s;K<Qe4Gj;`]AA%i8+;D=tZ34_!t&&$GQ^,]jh&7o#kYMG1Z6eeW5;3h=5T[YV=F$dF$EF)!Ioch!&u/B)OeDk!3?b2CN-H2Q45*)>4T'a\OF@i.ouc%rrOglc]MuS?Nu@^kAh\1<8LXjBb0%"83]'2k-:Bjl&1kRh;O@U(.GTB[s0h^db$dp7]7@K0N=fe88&0.SXDeH5JZt`.oK<mU)eKb%(/6CT'XVNaZ50"S62t[LF,&[DX/,X#BP_s'aK4&91M4Wddf$VpS08`>S:soWN?B_<Yieh<eeE3kW*JQB3kKP'FS6!7cE:YTrS5D7%\&qJ%cZZQgZe_gjB.0EUlA@,+X*,i97l/0KO6'NAKC3<=:CY'alu&-bh"&!;@[XYQatdi(mUhm6s05<]1P!D#@8Jh.(5[[d4ad=^%`'qMb$]]!@GW46Uq?GlfV?;Nf6K3u%B&K+RD!\=b#s#uM*o%>Q2?m;4H=15bLcKm6&%?]MfiS62NQIQHNTlgJB4FqJet1GAI/k2o%JRrd#C)TCKV:4`F?DJi?%'@+CL[N]003WgGi8)!37E_qtdVX,(<0+Gp]3D[#52fIF&!C[#$uL8C+QB\Ph65P\MO[XM#MuQ9;Tm)h%WiZN(E,`lD1qXk;$uM-KiF^UU>>Br41;9Gu\1)(GD[HU_5d;;(5P-(6d`AHnVSNkPR@"`#8DU@=]DbNgp)n/!DG[&c]0Y8S8K.ar%XV?CHCXUOC=BK^Kc#Ze2>*`fiL>:!/T,N/7lunEbe8XW1q5(6L0hb`Yg\E-FaC@\gks4Bt0VjGpKZYrV8-:lph>C08G0_cU]:3#6%_eVYXks43nTJYgER,o"U]'E%i*p1eE",2)Q_?ehb*VTVp0t$]UgroP<grk8c]kgNf]kgMhF0FDL_b)AUQ"'7#m"!J-#g!?fKrQCS%WjicVO3[+JCB0eON2VX"+]35Ds2Ub[Vr.E-J,S!V^&?paTDnX^^\duEr8D#_r&:.n&@/)0D;tR\dC`&M7iIVagiWGhTD+_Gm,`b\%')TF?/ah73Q1GjmnSNb9JFOs7<HIj#9M(]Oo%mtCJ%o-SlYc@dT'PRcf/rVKrpQKYmXP8sTE"m$?iKhuhsXQrIJNRtr8$91iHP=d%hu@S4m/OQ0rUcT2hu:7fQ'_(Ar."_@V`4H"hVh8Fq<dYNp`KP*:VZjPl_!l1ro)3'rBL8>T<*85l=W/dm%OC<mpS$D[l-&,VB3*e%HSN*Xnt(]uc!t@_\:\7`QKI>8'fW.aq@unZEd:m'NuspLjI7`Lr`2ZQV&tB\?G\CS;?YCAjEQcRNuY>YMpb<>#>2F0*d8JIOV%ja%>M,D5jZ).7p@J$Je]Ig5.-p',mbL96W5:X&?j+k.Lm5<12[][u@9!PN(AtDKm*l\Ies8%pL<%iRn%-\;c$oY@Zarmr.-hm9CIHp[%"3n9$"3jLfc*I6f'KR"EJ`?14T"[85a`j3Mr2li<;SP!@p`FRLXdGWoK5?@IFW\O;hC>d46oj?Vp`Q_<c\#ahJtu.<$M`o@GAs+N%Aj:d[=e4o_N3[o(A'c6\2:7u?]g12X`J.9<5+Yu'cMf@>YJ?._Z!4#gDgm8una/!de&JSJ(k-`g;aCYF5rTCoV_s!*bVB7:%Jd?A%\$`idAuK,%c?Rq1E).Z9K5KWoKug`)@e9>_rVZV+Fe*tmPkE5+)'L3u5T2q9+>q<ik>7p)pHn^B$<]P';?W\q01%,"pJTT:Rf30_%Ap(CD.-pbp<HEHJ=U;TOmMfhO5Y["[;J\O@/:;.!T9OWtl9m#WC$P<!RaOe+b%TfO^X(VcoYrU&*\4=oi,8cqlH':KHg"u,cE4^m%^LMK=Dndq_5<&I^]<hD.LY_c3FEJpj2iiBWh>(c[Y3aG@-'E2TFCf[)O+,`PIkG.h]5mtomVG!VmEW_P52,H&]WGPM4+E1KI(.e4%gR[005O?\aVQ?*HVdO]Y+PE<:Z=`Sh7EXo=8&p,??,kq#Y2*6qIG\<GS,KqSfmWb8mehOV>2rPc3uds7G%]U1d.*CW=hjg!h>+U\%/%`-9ou$4q1MGh<QMS&jMVYg[YosRKC#[!epgIF*C/<`p46sBEi&XZYIbjGY^AW2C)Llb7]cSo@k*QE'Jn/W_;"cT3)Y\ZGF%a8u%WNhG(:L?%<lF5Y02*NtrF]5(4p4oX;k>@O(2$T.9NCm>cC/i@PE)WNLlT7e"hk[@B2>_MpU\jb?WU\f/<Ea\1=f$PJWH$h*ViIrS%NV_279T@@m?'uW(Wun4YpX+_>H:<MqCB'"qOaB[_OaR'?)$Zs6L#aEMjhFH'Wm</>k_WtfA1[Z,0#,)_R_ID?kO1@19CaU.ZCdIb%j"C4,=PYn@\r_j]Yrmb)Qs02jb8BR;eTX`KTrHAqC<Gc(#Aq,72I$6A#:Y8EplNM=(r()71`mu>G;gN.8]V1oI8bPIe+mmfT>09b%Ol*@#Y^USs7r:OE%a'D<#=UOfT+QoRg-'&0q`)0E6R98.X$@fjjeqPlX4Z_#n$]5prBXHP?rr^2d6cM+BX)@q@<RTX0WdSDijmY)%X7)Gs@oK#7eWeAO=%4//A$3*U1H'Pub0.fWE^fP]LM1k4,A(ci+J)NX4UE-oQS%W3J,9_Qo@3-iml,%SpZnQTT9n6t%a"icL`4`[%U(;'%@bT(fE-R@j>e@YgDm#X;:Z&ggSR3%5r8J+ic%B+Eb@5$GaAKoi1JH&+(IXa$$#(#9dMg@nnK:8F/mEen:W>Qqp3kNUf^.ei%2li/@Pu6*cc>\_u/2Z.7*#e5n9B*`-AQ`^A7oP`G,iWll3S*`m+Ruce9:GhWrFU2CISeTWh`79Q<fRKEDmDk,>0JrGq[dMq$MC[m%SbU`h2>S7dIK!8G`h@ie[.0(3B,GA%P&3e-L#pR]'Y'T[G%hJ8YQYq47,**U"^8\>^'4ADfrnVQh7#U"d-ma2-h;M'i!3GY+g`or%EFj^PYJ-?F+Z=ISJ_%#R=J1-rD0QGq"5*aXI)mkcb-+"a!j*jL*>[jW0qIbkqfN:Rqt>dKqV?fnalf2ug4='k`gdFcB.cTh8i7sW%s#@kf>1DW&-><AMI<63.rMg1XIJUharI02q`P0YFBELKE"H?JUki9egX^?K0j$ISIaolQgr@gP;%$jh$&I]2-#oYQOo^:1[?C2Bj%N9=.\cZ`+1qX$A3c;V&V2aP&oJ!cnd7p-IolLf<*MQIIWTguII@OUl+PtX@oa?C+)laFg:Kt+jtfrs-Kh7#UbNB`W4S?:1i@V[gC%;HonnejnI5D-ObnC](4]lhe+[p[&Jqj819@V$im&51\;@>ID1XCXfQ%ASZ[2lH7[k?i@2d^5Fn`QM@j0q.2m%>8MYD2k07>$cr\,%[t:-*0*LBu>Dnq4[JT*ZRnK242gjm!_gpQ`8/SG1g<K:aYkNF]!7D-^!%Er-%UV15a4*`j+MD\iUVr[H%_T?D$+8Pt31C.5S.2-6%/74dDn*T<ha)JIk;L2irdtc690r7Lbg[.G&qN7AMJj^11Y$fTM*TQ1_J26[M>DTo&BaKs+8jX[_&]BbO)jH)YfV%Z8T0iLKlHC)i%GQ!c?`Km:K&c#u>:QFMhA_PXs`pioS62*.YVhX(kFuRTlDY`'.0hkpejdEQ!G;DtWrg52kblAC*KJ?K*mq5<-#*l/ee'1Q"f;-B9%D$SqB1i^,*`&&J_9J][$EbS5=R>p$F37HY\rJ]^1&L97=)$5-W=l!JhqNNI=\$@aUhm9Qf&f]:c)&q$jh9O$Es&:UO.X_:9o.hF0%JXU%>GWNRV5Ihsmjm(m!4EPL9PDbaa*-c[-PDb`:GP!4oX.o&Q[X*-62DJOsSl7aBcRHf^I*j<N[.ser_UFD'=;'JA2cho2QB16;%m(k,E]L'"BmpHQ#50=+pKZBD-&UdSD3o!fo#F'lH*fuCa8B#"RKg]7$Q#"nW8%cuG<k3&JUj"V%3K1(ADF@suYn>es6cGGeBos7F%\V:G?=t.&MO@%M\(F>>XHFFn*h97RF>CLYOm0rTsjk(S09O/BCR(@UQ1JCc37k>#96"ZK<VH/*N'TQlI+&E[.<-QYC%D80?@a")U%0c_Y^'3+.RV#lol5-qK*Ni-W%rcgJ#Ql,%H-2FGQe/M?`J>2P9J&fPK."'5CV0pJkFZ1Q"rBD%qF5S]J%-k.DnNP*b,/>!a_4(ST%bM8^AkEf#8r^2tFdU-Tjli-<)l`7m#[K1Mr'teT:chRuW.9A[`rS:b[%D%pNG6bSA[+3VkFqt@!m;V5*<oBWgrcM.pBdBY/#<HQJ%qijl!('*q,DfQ2^E<$.iJoXHqi^)C2lUeF![Xa)J2^m&,1Hb*[TPRV=9Matrf8qW:l$8d@TXj?X$@'rLADn"[[`Z85P2#5pN!6eB%$1sm`D*En$Q$n]_#R>K64nq;l4kQG*WmI-)f'.@(#X`nVk?ZgDM3:`)F)5M_B.mgicO'cVT[`d24ZA5W?[HN<V3@S4q3M2%AmhGU%q^,)hG%]ahh%c%6F6!E'VWld1T.dOJM^>li(:P:T;KCunQ2pT%)j=J?):S1<h)2(QFa>+mD,cVkJ]CG^:7c7cAZI"]k4-s,FgnV"%_ut22$+Z-F8MXHqH+D7n(`Cip+hIX)dSX<AB]3^ri4X=Bm)N-T9'jiS2g8?c9:>9IlrZ*kANtq4gMt)TD-X0YNG!C@32B9!/[mF0%YUD?(kB4B'W*ZUTH(6f7eCJr,g;9H9R"rH4,-BctG!S;N*n6C^6K_a;ek?#4][3=CO3e-hY:UR3NE<uNkJ3Q?]N2h`fQ6E)^q742%a5,OGkhgF:6us%Iq?cb)G-M61SWL9=RJ\Z7TF*fObqLQT/2F0eQ+Ca-QRh_kdbEtn^!sHa$Pgm'jPkRh4MC5qG!SGRSWP95$Cuj_%YT/r=adj7dddnXYJGU)F[a^b`L$-:!00EA"Q:B@<4a;$lRfFnrMn:oUG&)VQUL9TG?=k!hE8+51i.V^q1B?TC@8LB8BMd#*FlQ>I%?E*+MhKW"$5#*H1%ArEq81o.V>u8n--hV#DUU*!Zp\0,!1,Prm;tRn-/9o+adS<7r#MsfhqHijM94S\W]XbX+7ieGe5`Gch@sScI%'?28;Ym,E_GAZp;R$Z#-C9PHY8+M9>b<gi-?E(O@Fh(Dr,JB'HT$5@(h,[WMci1m@cjMuq5*O=ugh4(oraip]n&p;In!Qs!j[;lL%hVFaj[M,V+>U\e`bYm<:)Vk#DXjlJ<V<>]"jd&=>ot41H%I.u1Sk")G*B_#@q/^!4W/b1dcFY3mYHPbX')!n;o3Zoi>[G&ZIM<kQ%P!;Gth"ES4=)_2Bn[:4,(>g;mk89i^*n,eWQS"W':Z[-"*sR+@q4Rikr9o%`qmkOlT;prb(?k&ts&iVj[Ca&62b8MR*_r0QX[>?]%Z#9/chKrS7FM6o*r+-j5#DteKYG(j!HAb<dq-,HU5C5X/A2rkELiAu=F_$9`ZkoWp.s*]ClnLgoZ*B(+%/d-n6U,W[<__IlZi+%>%.5kEL:krN<6;bpCPM]Vh:D$ZSoA=kEs7[kHH%=A%@USpPS\OH".i8cLpHT\,h#i`G$R2gmJG/eW]f?KLDm&=/jH,i9'N\t@!Xs]d%_dPK@L[r0.TX3/;r"/dbRP7+u6^f$S\AGWf\XOUS_i>fgFuMe\SI%ec9Gns)L&3C(f%g`HHZ!>=L8^KF58[,N8qKS,J4BJQ9DIfi%+tZ5(SfoS,2aaC/G0^[&Er;lMjIF8g-Ot:nq<QrV=\&0*8hoEtYjs%+mMuA4A&iHcU<92-J:p9=VYisijH,i9'NaKHSjOrM'6/9Q%bp9^QajFl3dbDcRSOoZeA+'AolGPVIDO97V@5#D&G.Rn?3`?Vc0U(."2$/AFG.S:jS\t9r6C_F1ZGD&p?P,<<2uTcV8g+[GUXUF)%$$NolLCL^2KK-eAZ9$PP=QbL]DW!FBI;!jX%'269c'P`M)8c)K8oYD1GbcJ#0k:pO#(!8f,NGVtDb9DIV$L_/;$i7+'A$bO%_6d?%EG`](nsa$2bAUU9Hc`[m^_-2.;YPU=*&2<QaMTO8K&"W`V.%[^"hU<M]$?Nb$>033<l6)nB")hLkWI*.320g#s'S)D%?Db?4LeD;%-B<n_d;n0$K&+]aEMbm>7)9j9g)P*uo]_c8h0ooVIOTVt".'YEQr4.50!M=g6$"((1<'9YI*)mh)3nULQXi>k\TpG[KoX6S"M7s$%6UstS(kq[s_LABoBjR\>SJ+#N6?E"qlrJS%pWSok*TV/hCOSO]_5.Ca7?6WE_Ag4#oFrWsHX@REqV;fXTDl;ql-o\0dtC\kaF$Gp%Ep72o8@93<I_FL.PqZTt[i9ASP^kMYJls!QC4/*C\Z\5g*[E,c@Ph@B5dLnNonNH4'AOTL&0T[j9h<l\bV6E)iI3^VmsQ.(\^<6g%mPikg"gISQ5$`!N:!Y55A?&uXWGh)&8"dTOgV2N!GCg7G6SPJ8Nc<!^T#4LMaC5FnQ.jG/msi.cN*1.'+;nfrTDn0UY.r?<=G8h^%[/JZi_=WJlAZQ!^ir7j0crt@L:CcgR8DFB#Op@`a')DUEQNlnFLuE4H?h#9m=/ND7N+P^^H]5;Hj5S':7tI\i2[q]oqX&e3l.CCH%!5=*.`5GNMoQ'!n=4te/8is(D*t_dXB'U%5\43l[s)Q;'O1ft*QH"Xf=Y#Lm<pVN53k3PR21"_QD)DO=Arr,.0=$1j!7!0@irbbM%q'Dt(^Lae1MG+&_DR>mL_#tRdo:QT;s83MBGI1k1YZ6N0JL-sC(/T76c0`ss0V!gZ/8[B]'(:gJ?;dB<@pa['ZY\m'Nqap]lq&e9%kV;KEIdPJ_J^.Iin1?8UU-mgsm9f`fb*RQ8dc/6Y^YH2l(m$jT/*]Bf5%m4NPiS/[K1Jb]cn/q6FJ-L;Rs7t.Tgb$qJpLCnmou#f%npT8EqGGD%DDKYuo;$;.c43]d3.,qAqV9j1`;ht1%b$'jIs_RZH^\+>L)H?kGV,50_2UEV&*gt.cS*,(ci1X20eM$q\Sa8=9t27g%RmtQOfuqsCd&[<o3'_B_R0M,9)72s=]P!C$PeO2fVJ,>EQm(8Jrh3b)"PI7HD[CN@9n'fHL7h$UR=8f/Qc>VoGo(2_"&T^WUMpV)%6(W/T-]<QrF^b-\W@1bs>JRsaD=U*(cR*K(#`T^te+"R*g9nmMj1EeUoL"i2g]Y-hkBYpkJi+W'CLVOVXe5oEdM6#*>OHBCC<"bF%OTZho`kL/JphirhFl/WR3Zem\[!cGs2SN*q6U*R/cDD_D4jEVr24V:*QI:f</(h'?d(St2`,>_/VebqW1>4odBk.+<:'bksm*#D$%(-"jeZS/f52^+d82<Z1NH2lHHP:g"q>X%A'p)OMF*SV.m9/dT&nTiQlYNLSMT6[lLS=kJ.h:[ND2uhU#PFI^XIO4Y;=W_G$&FRoI%inQ$9erbho6r7HAc@5@!nk82\ZdEQ(:U@]RrGjo[!%'+$ki(UM^(8#rLB*\fMd]sYV1ls$]3i;ZJ!ToVRU1>:<pF,/CTfKG]H>fa%aM31/[!;IE-_pc83A0`e+?6a<MO1"8r,L9L9qqk&=#-K;r@Qs=7"2>$Tbf>ZNUH\AV"Dc=Ru=]^*e<\1^d^9Krdm>F$1mFJqG;E:%c!0)_7r+ZgXU6D"*qI&LM_53P]1s?CK5j,A@Df:VQd0W,+,jXSF8jb<g6AsFHJ`a\h5HWKl2d_%)MRQcku\U*fdeT6'bX@FRd!uW%Ps2n28qK:=nLTo\0A?@c"b?3lf!EBn7,kr,aT>E8!_58Ta)7$L6%fuol>%I1p^./U3o#hd>-pa&9/mb"g7I&]^p^[`Vt<`FX#=l7%D;>8)9*on1H<D8bOUR<H:pd<aXfiNX!Mno4`7'OCYC++gC-BX^F8pK'C[EgWV\X1h.6JcXs85oC9,Wta?uKA,g2I-FG`_+WYsFI:%5W[R+S129nBlKDHll[3"/(l/=R_3E=kJ!*?Lu@UO;HBO/:_V&uqm:3Z0.^('El_9*e(B8:qdk%]8aZOrmHSs9KRr>nM>uLf0kh75%#KF2E/#6/3clH9M6m<3VfedRGIGYnJ:90I&lgoP;_jkid36/[Caa8XHG6*Wt":hMPI+s!=12/hZH&;nmpi-h3hS'6&,Ws&3/%b07%UDfTmSrH77L]0_fUV)XA8P;"EaR<g,IdP-BXQpl49TCE"/)`jo/6i^???%lpb)#A9LpLmbhR"G*[hun+8cUk7KAu#<j"j\GX'E/H%5pm0aFQ1]K2K[Vdk96Fi0MfK`kM\^Vik3\3><`>N6b:?>HF$X:A4E=:%,Y&N+%GWi1-o@!ObD/OFm4Dg;&HT]AOtHjou.293q;@b%LpS]tD/Bu_10>@e24=D<_gj/6(A(>s>pF'mC'0?TM?frKWj4DE*j-V6#6YR;`gFL,o]7sr:;%KRPoCoaYAhfJrdjU&N`=:V)@==3%gN2ilHZFKn~>%AI9_PrivateDataEnd